From 9608629d7ee42dd65437d2e7fad5c91438d7de4b Mon Sep 17 00:00:00 2001
From: Erik Verbruggen <erik.verbruggen@theqtcompany.com>
Date: Thu, 26 Feb 2015 13:00:39 +0100
Subject: OSX: fix leaks due to missing NSAutoreleasePool
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

env OBJC_DEBUG_MISSING_POOLS=YES qtcreator

Change-Id: Ibbe5f42af5b94a439be3f0dd0f2b6e34bb1afd3f
Reviewed-by: Morten Johan SÃ¸rvig <morten.sorvig@theqtcompany.com>
---
 src/corelib/tools/qlocale_mac.mm                      | 13 +++++++++++++
 .../fontdatabases/mac/qcoretextfontdatabase.mm        | 14 ++++++++++++++
 src/plugins/platforms/cocoa/qcocoahelpers.mm          |  1 +
 src/plugins/platforms/cocoa/qcocoaintegration.mm      |  2 ++
 src/plugins/platforms/cocoa/qcocoamenu.mm             |  2 ++
 src/plugins/platforms/cocoa/qcocoamenubar.mm          |  2 ++
 src/plugins/platforms/cocoa/qcocoamenuitem.mm         |  2 ++
 src/plugins/platforms/cocoa/qcocoanativeinterface.mm  |  1 +
 src/plugins/platforms/cocoa/qcocoasystemsettings.mm   |  3 +++
 src/widgets/styles/qmacstyle_mac.mm                   | 19 +++++++++++++++++++
 10 files changed, 59 insertions(+)

diff --git a/src/corelib/tools/qlocale_mac.mm b/src/corelib/tools/qlocale_mac.mm
index 612d1e7..7289d7a 100644
--- qtbase/src/corelib/tools/qlocale_mac.mm
+++ qtbase/src/corelib/tools/qlocale_mac.mm
@@ -52,6 +52,18 @@
 
 QT_BEGIN_NAMESPACE
 
+namespace {
+class AutoReleasePool
+{
+public:
+    AutoReleasePool(): pool([[NSAutoreleasePool alloc] init]) {}
+    ~AutoReleasePool() { [pool drain]; }
+
+private:
+    NSAutoreleasePool *pool;
+};
+}
+
 /******************************************************************************
 ** Wrappers for Mac locale system functions
 */
@@ -422,6 +434,7 @@ QLocale QSystemLocale::fallbackUiLocale() const
 
 QVariant QSystemLocale::query(QueryType type, QVariant in = QVariant()) const
 {
+    AutoReleasePool pool;
     switch(type) {
 //     case Name:
 //         return getMacLocaleName();
diff --git qtbase/src/platformsupport/fontdatabases/mac/qcoretextfontdatabase.mm qtbase/src/platformsupport/fontdatabases/mac/qcoretextfontdatabase.mm
index 5a6c5de..3668723 100644
--- qtbase/src/platformsupport/fontdatabases/mac/qcoretextfontdatabase.mm
+++ qtbase/src/platformsupport/fontdatabases/mac/qcoretextfontdatabase.mm
@@ -56,6 +56,18 @@
 
 QT_BEGIN_NAMESPACE
 
+namespace {
+class AutoReleasePool
+{
+public:
+    AutoReleasePool(): pool([[NSAutoreleasePool alloc] init]) {}
+    ~AutoReleasePool() { [pool drain]; }
+
+private:
+    NSAutoreleasePool *pool;
+};
+}
+
 // this could become a list of all languages used for each writing
 // system, instead of using the single most common language.
 static const char *languageForWritingSystem[] = {
@@ -209,6 +221,7 @@ void QCoreTextFontDatabase::populateFontDatabase()
         QPlatformFontDatabase::registerFontFamily(familyName);
 
 #if defined(Q_OS_OSX)
+        AutoReleasePool pool;
         QString localizedFamilyName = QString::fromNSString([[NSFontManager sharedFontManager] localizedNameForFamily:(NSString*)familyNameRef face:nil]);
         if (familyName != localizedFamilyName)
             QPlatformFontDatabase::registerAliasToFontFamily(familyName, localizedFamilyName);
@@ -460,6 +473,8 @@ QStringList QCoreTextFontDatabase::fallbacksForFamily(const QString &family, QFo
     Q_UNUSED(style);
     Q_UNUSED(script);
 
+    AutoReleasePool pool;
+
     static QHash<QString, QStringList> fallbackLists;
 
     if (!family.isEmpty()) {
diff --git qtbase/src/plugins/platforms/cocoa/qcocoahelpers.mm qtbase/src/plugins/platforms/cocoa/qcocoahelpers.mm
index 894c2c1..ef3ed98 100644
--- qtbase/src/plugins/platforms/cocoa/qcocoahelpers.mm
+++ qtbase/src/plugins/platforms/cocoa/qcocoahelpers.mm
@@ -638,6 +638,7 @@ QString qt_mac_applicationName()
 
 int qt_mac_mainScreenHeight()
 {
+    QCocoaAutoReleasePool pool;
     // The first screen in the screens array is documented
     // to have the (0,0) origin.
     NSRect screenFrame = [[[NSScreen screens] firstObject] frame];
diff --git qtbase/src/plugins/platforms/cocoa/qcocoaintegration.mm qtbase/src/plugins/platforms/cocoa/qcocoaintegration.mm
index 72bd096..2ef722d 100644
--- qtbase/src/plugins/platforms/cocoa/qcocoaintegration.mm
+++ qtbase/src/plugins/platforms/cocoa/qcocoaintegration.mm
@@ -41,6 +41,7 @@
 
 #include "qcocoaintegration.h"
 
+#include "qcocoaautoreleasepool.h"
 #include "qcocoawindow.h"
 #include "qcocoabackingstore.h"
 #include "qcocoanativeinterface.h"
@@ -144,6 +145,7 @@ void QCocoaScreen::updateGeometry()
 
 qreal QCocoaScreen::devicePixelRatio() const
 {
+    QCocoaAutoReleasePool pool;
     NSScreen * screen = osScreen();
     return qreal(screen ? [screen backingScaleFactor] : 1.0);
 }
diff --git qtbase/src/plugins/platforms/cocoa/qcocoamenu.mm qtbase/src/plugins/platforms/cocoa/qcocoamenu.mm
index 736e02a..0c4d0d2 100644
--- qtbase/src/plugins/platforms/cocoa/qcocoamenu.mm
+++ qtbase/src/plugins/platforms/cocoa/qcocoamenu.mm
@@ -225,6 +225,8 @@ QCocoaMenu::QCocoaMenu() :
     m_menuBar(0),
     m_containingMenuItem(0)
 {
+    QCocoaAutoReleasePool pool;
+
     m_delegate = [[QCocoaMenuDelegate alloc] initWithMenu:this];
     m_nativeItem = [[NSMenuItem alloc] initWithTitle:@"" action:nil keyEquivalent:@""];
     m_nativeMenu = [[NSMenu alloc] initWithTitle:@"Untitled"];
diff --git qtbase/src/plugins/platforms/cocoa/qcocoamenubar.mm qtbase/src/plugins/platforms/cocoa/qcocoamenubar.mm
index aceb9b6..0f41be6 100644
--- qtbase/src/plugins/platforms/cocoa/qcocoamenubar.mm
+++ qtbase/src/plugins/platforms/cocoa/qcocoamenubar.mm
@@ -151,6 +151,8 @@ void QCocoaMenuBar::removeMenu(QPlatformMenu *platformMenu)
 
 void QCocoaMenuBar::syncMenu(QPlatformMenu *menu)
 {
+    QCocoaAutoReleasePool pool;
+
     QCocoaMenu *cocoaMenu = static_cast<QCocoaMenu *>(menu);
     Q_FOREACH (QCocoaMenuItem *item, cocoaMenu->items())
         cocoaMenu->syncMenuItem(item);
diff --git qtbase/src/plugins/platforms/cocoa/qcocoamenuitem.mm qtbase/src/plugins/platforms/cocoa/qcocoamenuitem.mm
index 470788b..6a9e131 100644
--- qtbase/src/plugins/platforms/cocoa/qcocoamenuitem.mm
+++ qtbase/src/plugins/platforms/cocoa/qcocoamenuitem.mm
@@ -107,6 +107,8 @@ QCocoaMenuItem::QCocoaMenuItem() :
 
 QCocoaMenuItem::~QCocoaMenuItem()
 {
+    QCocoaAutoReleasePool pool;
+
     if (m_menu && COCOA_MENU_ANCESTOR(m_menu) == this)
         SET_COCOA_MENU_ANCESTOR(m_menu, 0);
     if (m_merged) {
diff --git qtbase/src/plugins/platforms/cocoa/qcocoanativeinterface.mm qtbase/src/plugins/platforms/cocoa/qcocoanativeinterface.mm
index 7b31466..bad7c93 100644
--- qtbase/src/plugins/platforms/cocoa/qcocoanativeinterface.mm
+++ qtbase/src/plugins/platforms/cocoa/qcocoanativeinterface.mm
@@ -242,6 +242,7 @@ void QCocoaNativeInterface::registerDraggedTypes(const QStringList &types)
 
 void QCocoaNativeInterface::setDockMenu(QPlatformMenu *platformMenu)
 {
+    QCocoaAutoReleasePool pool;
     QCocoaMenu *cocoaPlatformMenu = static_cast<QCocoaMenu *>(platformMenu);
     NSMenu *menu = cocoaPlatformMenu->nsMenu();
     [NSApp QT_MANGLE_NAMESPACE(qt_setDockMenu): menu];
diff --git qtbase/src/plugins/platforms/cocoa/qcocoasystemsettings.mm qtbase/src/plugins/platforms/cocoa/qcocoasystemsettings.mm
index 3ce2f06..9c8806f 100644
--- qtbase/src/plugins/platforms/cocoa/qcocoasystemsettings.mm
+++ qtbase/src/plugins/platforms/cocoa/qcocoasystemsettings.mm
@@ -43,6 +43,8 @@
 
 #include "qcocoahelpers.h"
 
+#include "qcocoaautoreleasepool.h"
+
 #include <QtCore/private/qcore_mac_p.h>
 #include <QtGui/qfont.h>
 
@@ -52,6 +54,8 @@ QT_BEGIN_NAMESPACE
 
 QColor qt_mac_colorForTheme(ThemeBrush brush)
 {
+    QCocoaAutoReleasePool pool;
+
     QCFType<CGColorRef> cgClr = 0;
     HIThemeBrushCreateCGColor(brush, &cgClr);
     return qt_mac_toQColor(cgClr);
diff --git qtbase/src/widgets/styles/qmacstyle_mac.mm qtbase/src/widgets/styles/qmacstyle_mac.mm
index 38c082b..4f4f5da 100644
--- qtbase/src/widgets/styles/qmacstyle_mac.mm
+++ qtbase/src/widgets/styles/qmacstyle_mac.mm
@@ -101,6 +101,18 @@
 
 QT_USE_NAMESPACE
 
+namespace {
+class AutoReleasePool
+{
+public:
+    AutoReleasePool(): pool([[NSAutoreleasePool alloc] init]) {}
+    ~AutoReleasePool() { [pool drain]; }
+
+private:
+    NSAutoreleasePool *pool;
+};
+}
+
 @interface QT_MANGLE_NAMESPACE(NotificationReceiver) : NSObject {
 QMacStylePrivate *mPrivate;
 }
@@ -2126,6 +2138,7 @@ void QMacStylePrivate::drawColorlessButton(const HIRect &macRect, HIThemeButtonD
 QMacStyle::QMacStyle()
     : QCommonStyle(*new QMacStylePrivate)
 {
+    AutoReleasePool pool;
     Q_D(QMacStyle);
     d->receiver = [[NotificationReceiver alloc] initWithPrivate:d];
     NotificationReceiver *receiver = static_cast<NotificationReceiver *>(d->receiver);
@@ -2141,6 +2154,7 @@ QMacStyle::QMacStyle()
 
 QMacStyle::~QMacStyle()
 {
+    AutoReleasePool pool;
     Q_D(QMacStyle);
     [reinterpret_cast<NSScroller*>(d->nsscroller) release];
 
@@ -2157,6 +2171,7 @@ QMacStyle::~QMacStyle()
 */
 QPixmap QMacStylePrivate::generateBackgroundPattern() const
 {
+    AutoReleasePool pool;
     QPixmap px(4, 4);
     QMacCGContext cg(&px);
     HIThemeSetFill(kThemeBrushDialogBackgroundActive, 0, cg, kHIThemeOrientationNormal);
@@ -2754,6 +2769,8 @@ QPalette QMacStyle::standardPalette() const
 int QMacStyle::styleHint(StyleHint sh, const QStyleOption *opt, const QWidget *w,
                          QStyleHintReturn *hret) const
 {
+    AutoReleasePool pool;
+
     SInt32 ret = 0;
     switch (sh) {
     case SH_Slider_SnapToValue:
diff --git qtbase/src/plugins/platforms/cocoa/qcocoawindow.mm qtbase/src/plugins/platforms/cocoa/qcocoawindow.mm
index 4d0458a..7921b8f 100644
--- qtbase/src/plugins/platforms/cocoa/qcocoawindow.mm
+++ qtbase/src/plugins/platforms/cocoa/qcocoawindow.mm
@@ -1644,6 +1644,8 @@ void QCocoaWindow::applyContentBorderThickness(NSWindow *window)
     if (!window)
         return;
 
+    QCocoaAutoReleasePool pool;
+
     if (!m_drawContentBorderGradient) {
         [window setStyleMask:[window styleMask] & ~NSTexturedBackgroundWindowMask];
         [[[window contentView] superview] setNeedsDisplay:YES];
