diff --git a/qtbase/src/widgets/widgets/qdockarealayout.cpp b/qtbase/src/widgets/widgets/qdockarealayout.cpp
index bef7214c756de2f635cd23e67f9b16752ddd1b1d..c3b386d7cc3755295cad6fdfa872da218ba71b0d 100644
--- a/qtbase/src/widgets/widgets/qdockarealayout.cpp
+++ b/qtbase/src/widgets/widgets/qdockarealayout.cpp
@@ -2652,6 +2652,23 @@ void QDockAreaLayout::removePlaceHolder(const QString &name)
 
 static inline int qMax(int i1, int i2, int i3) { return qMax(i1, qMax(i2, i3)); }
 
+static QSize sizeHintForDock(QDockAreaLayoutInfo &dock)
+{
+    QSize size_hint = dock.size();
+    if (!dock.restoredSizeHint.isNull()) {
+        const auto item_list = dock.item_list;
+        for (int i = 0; i < item_list.size(); ++i) {
+            const QDockAreaLayoutItem &item = item_list.at(i);
+            const auto w = item.widgetItem;
+            if (!item.skip() && w != 0 && !w->widget()->isHidden() && !w->widget()->isWindow()) {
+                size_hint = dock.restoredSizeHint;
+                break;
+            }
+        }
+    }
+    return size_hint;
+}
+
 void QDockAreaLayout::getGrid(QVector<QLayoutStruct> *_ver_struct_list,
                                 QVector<QLayoutStruct> *_hor_struct_list)
 {
@@ -2677,36 +2694,28 @@ void QDockAreaLayout::getGrid(QVector<QLayoutStruct> *_ver_struct_list,
     if (!docks[QInternal::BottomDock].isEmpty())
         center_rect.setBottom(rect.bottom() - docks[QInternal::BottomDock].rect.height() - sep);
 
-    QSize left_hint = docks[QInternal::LeftDock].size();
-    if (!docks[QInternal::LeftDock].restoredSizeHint.isNull())
-        left_hint = docks[QInternal::LeftDock].restoredSizeHint;
+    QSize left_hint = sizeHintForDock(docks[QInternal::LeftDock]);
     if (left_hint.isNull() || fallbackToSizeHints)
         left_hint = docks[QInternal::LeftDock].sizeHint();
     QSize left_min = docks[QInternal::LeftDock].minimumSize();
     QSize left_max = docks[QInternal::LeftDock].maximumSize();
     left_hint = left_hint.boundedTo(left_max).expandedTo(left_min);
 
-    QSize right_hint = docks[QInternal::RightDock].size();
-    if (!docks[QInternal::RightDock].restoredSizeHint.isNull())
-        right_hint = docks[QInternal::RightDock].restoredSizeHint;
+    QSize right_hint = sizeHintForDock(docks[QInternal::RightDock]);
     if (right_hint.isNull() || fallbackToSizeHints)
         right_hint = docks[QInternal::RightDock].sizeHint();
     QSize right_min = docks[QInternal::RightDock].minimumSize();
     QSize right_max = docks[QInternal::RightDock].maximumSize();
     right_hint = right_hint.boundedTo(right_max).expandedTo(right_min);
 
-    QSize top_hint = docks[QInternal::TopDock].size();
-    if (!docks[QInternal::TopDock].restoredSizeHint.isNull())
-        top_hint = docks[QInternal::TopDock].restoredSizeHint;
+    QSize top_hint = sizeHintForDock(docks[QInternal::TopDock]);
     if (top_hint.isNull() || fallbackToSizeHints)
         top_hint = docks[QInternal::TopDock].sizeHint();
     QSize top_min = docks[QInternal::TopDock].minimumSize();
     QSize top_max = docks[QInternal::TopDock].maximumSize();
     top_hint = top_hint.boundedTo(top_max).expandedTo(top_min);
 
-    QSize bottom_hint = docks[QInternal::BottomDock].size();
-    if (!docks[QInternal::BottomDock].restoredSizeHint.isNull())
-        bottom_hint = docks[QInternal::BottomDock].restoredSizeHint;
+    QSize bottom_hint = sizeHintForDock(docks[QInternal::BottomDock]);
     if (bottom_hint.isNull() || fallbackToSizeHints)
         bottom_hint = docks[QInternal::BottomDock].sizeHint();
     QSize bottom_min = docks[QInternal::BottomDock].minimumSize();
