diff --git a/qtbase/src/widgets/widgets/qdockarealayout.cpp b/qtbase/src/widgets/widgets/qdockarealayout.cpp
index bef7214c756de2f635cd23e67f9b16752ddd1b1d..e7e8b15474e700a16e0a924e64ec7907c878020b 100644
--- a/qtbase/src/widgets/widgets/qdockarealayout.cpp
+++ b/qtbase/src/widgets/widgets/qdockarealayout.cpp
@@ -54,6 +54,7 @@
 #include "qmainwindowlayout_p.h"
 #include "qdockwidget_p.h"
 #include <private/qlayoutengine_p.h>
+#include <qdebug.h>
 
 #include <qpainter.h>
 #include <qstyleoption.h>
@@ -2678,8 +2679,17 @@ void QDockAreaLayout::getGrid(QVector<QLayoutStruct> *_ver_struct_list,
         center_rect.setBottom(rect.bottom() - docks[QInternal::BottomDock].rect.height() - sep);
 
     QSize left_hint = docks[QInternal::LeftDock].size();
-    if (!docks[QInternal::LeftDock].restoredSizeHint.isNull())
-        left_hint = docks[QInternal::LeftDock].restoredSizeHint;
+    if (!docks[QInternal::LeftDock].restoredSizeHint.isNull()) {
+        const auto item_list = docks[QInternal::LeftDock].item_list;
+        for (int i = 0; i < item_list.size(); ++i) {
+            const QDockAreaLayoutItem &item = item_list.at(i);
+            const auto w = item.widgetItem;
+            if (!item.skip() && w != 0 && !w->widget()->isHidden() && !w->widget()->isWindow()) {
+                left_hint = docks[QInternal::LeftDock].restoredSizeHint;
+                break;
+            }
+        }
+    }
     if (left_hint.isNull() || fallbackToSizeHints)
         left_hint = docks[QInternal::LeftDock].sizeHint();
     QSize left_min = docks[QInternal::LeftDock].minimumSize();
@@ -2687,8 +2697,18 @@ void QDockAreaLayout::getGrid(QVector<QLayoutStruct> *_ver_struct_list,
     left_hint = left_hint.boundedTo(left_max).expandedTo(left_min);
 
     QSize right_hint = docks[QInternal::RightDock].size();
-    if (!docks[QInternal::RightDock].restoredSizeHint.isNull())
-        right_hint = docks[QInternal::RightDock].restoredSizeHint;
+    if (!docks[QInternal::RightDock].restoredSizeHint.isNull()) {
+        const auto item_list = docks[QInternal::RightDock].item_list;
+        for (int i = 0; i < item_list.size(); ++i) {
+            const QDockAreaLayoutItem &item = item_list.at(i);
+            const auto w = item.widgetItem;
+            if (!item.skip() && w != 0 && !w->widget()->isHidden() && !w->widget()->isWindow()) {
+                right_hint = docks[QInternal::RightDock].restoredSizeHint;
+//                 qWarning() << "right_hint from restoredSizeHint" << right_hint;
+                break;
+            }
+        }
+    }
     if (right_hint.isNull() || fallbackToSizeHints)
         right_hint = docks[QInternal::RightDock].sizeHint();
     QSize right_min = docks[QInternal::RightDock].minimumSize();
@@ -2696,8 +2716,17 @@ void QDockAreaLayout::getGrid(QVector<QLayoutStruct> *_ver_struct_list,
     right_hint = right_hint.boundedTo(right_max).expandedTo(right_min);
 
     QSize top_hint = docks[QInternal::TopDock].size();
-    if (!docks[QInternal::TopDock].restoredSizeHint.isNull())
-        top_hint = docks[QInternal::TopDock].restoredSizeHint;
+    if (!docks[QInternal::TopDock].restoredSizeHint.isNull()) {
+        const auto item_list = docks[QInternal::TopDock].item_list;
+        for (int i = 0; i < item_list.size(); ++i) {
+            const QDockAreaLayoutItem &item = item_list.at(i);
+            const auto w = item.widgetItem;
+            if (!item.skip() && w != 0 && !w->widget()->isHidden() && !w->widget()->isWindow()) {
+                top_hint = docks[QInternal::TopDock].restoredSizeHint;
+                break;
+            }
+        }
+    }
     if (top_hint.isNull() || fallbackToSizeHints)
         top_hint = docks[QInternal::TopDock].sizeHint();
     QSize top_min = docks[QInternal::TopDock].minimumSize();
@@ -2705,8 +2734,18 @@ void QDockAreaLayout::getGrid(QVector<QLayoutStruct> *_ver_struct_list,
     top_hint = top_hint.boundedTo(top_max).expandedTo(top_min);
 
     QSize bottom_hint = docks[QInternal::BottomDock].size();
-    if (!docks[QInternal::BottomDock].restoredSizeHint.isNull())
-        bottom_hint = docks[QInternal::BottomDock].restoredSizeHint;
+    if (!docks[QInternal::BottomDock].restoredSizeHint.isNull()) {
+        const auto item_list = docks[QInternal::BottomDock].item_list;
+        for (int i = 0; i < item_list.size(); ++i) {
+            const QDockAreaLayoutItem &item = item_list.at(i);
+            const auto w = item.widgetItem;
+            if (!item.skip() && w != 0 && !w->widget()->isHidden() && !w->widget()->isWindow()) {
+                bottom_hint = docks[QInternal::BottomDock].restoredSizeHint;
+//                 qWarning() << "bottom_hint from restoredSizeHint" << bottom_hint;
+                break;
+            }
+        }
+    }
     if (bottom_hint.isNull() || fallbackToSizeHints)
         bottom_hint = docks[QInternal::BottomDock].sizeHint();
     QSize bottom_min = docks[QInternal::BottomDock].minimumSize();
