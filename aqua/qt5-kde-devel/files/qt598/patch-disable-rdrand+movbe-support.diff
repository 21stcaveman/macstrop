diff --git a/qtbase/config.tests/arch/arch.cpp b/qtbase/config.tests/arch/arch.cpp
index bb3efec..e9a0f30 100644
--- a/qtbase/config.tests/arch/arch.cpp
+++ b/qtbase/config.tests/arch/arch.cpp
@@ -159,7 +159,7 @@ const char msg2[] = "==Qt=magic=Qt== Sub-architecture:"
 #endif
 #ifdef __MOVBE__
 // Move Big Endian, Intel Atom & "Haswell"
-" movbe"
+// " movbe"
 #endif
 #ifdef __MPX__
 // Memory Protection Extensions, Intel Core processor codename "Skylake"
@@ -186,10 +186,10 @@ const char msg2[] = "==Qt=magic=Qt== Sub-architecture:"
 // Prefetch data for writing, Intel Core 5th Generation ("Broadwell")
 " prfchw"
 #endif
-#ifdef __RDRND__
-// Random number generator, Intel Core 3rd Generation ("Ivy Bridge")
-" rdrnd"
-#endif
+// #ifdef __RDRND__
+// // Random number generator, Intel Core 3rd Generation ("Ivy Bridge")
+// " rdrnd"
+// #endif
 #ifdef __RDSEED__
 // Random number generator, Intel Core 5th Generation ("Broadwell")
 " rdseed"
diff --git a/qtbase/src/corelib/global/qrandom.cpp b/qtbase/src/corelib/global/qrandom.cpp
index d399e34..ca33ec3 100644
--- a/qtbase/src/corelib/global/qrandom.cpp
+++ b/qtbase/src/corelib/global/qrandom.cpp
@@ -107,7 +107,7 @@ DECLSPEC_IMPORT BOOLEAN WINAPI SystemFunction036(PVOID RandomBuffer, ULONG Rando
 
 QT_BEGIN_NAMESPACE
 
-#if defined(Q_PROCESSOR_X86) && QT_COMPILER_SUPPORTS_HERE(RDRND)
+#if 0 // defined(Q_PROCESSOR_X86) && QT_COMPILER_SUPPORTS_HERE(RDRND)
 #warning "Compiler supports RDRND"
 static qsizetype qt_random_cpu(void *buffer, qsizetype count) Q_DECL_NOTHROW;
 
@@ -138,10 +138,11 @@ out:
     return ptr - reinterpret_cast<unsigned *>(buffer);
 }
 #else
-static qsizetype qt_random_cpu(void *, qsizetype)
-{
-    return 0;
-}
+// static qsizetype qt_random_cpu(void *, qsizetype)
+// {
+//     return 0;
+// }
+#define qt_random_cpu(a,b)	qsizetype(0)
 #endif
 
 enum {
diff --git a/qtbase/src/corelib/tools/qsimd.cpp b/qtbase/src/corelib/tools/qsimd.cpp
index 4c6f08c..54fcfd2 100644
--- a/qtbase/src/corelib/tools/qsimd.cpp
+++ b/qtbase/src/corelib/tools/qsimd.cpp
@@ -548,7 +548,6 @@ static const int features_indices[] = {
  sse4.1
  sse4.2
 
- movbe
  popcnt
 
  aes
@@ -556,7 +555,6 @@ static const int features_indices[] = {
 
  avx
  f16c
- rdrand
 
 
 
@@ -600,12 +598,10 @@ static const char features_string[] =
     " cmpxchg16b\0"
     " sse4.1\0"
     " sse4.2\0"
-    " movbe\0"
     " popcnt\0"
     " aes\0"
     " avx\0"
     " f16c\0"
-    " rdrand\0"
     " bmi\0"
     " hle\0"
     " avx2\0"
diff --git a/qtbase/src/corelib/tools/qsimd_p.h b/qtbase/src/corelib/tools/qsimd_p.h
index 03ccd72..8585ee0 100644
--- a/qtbase/src/corelib/tools/qsimd_p.h
+++ b/qtbase/src/corelib/tools/qsimd_p.h
@@ -258,9 +258,12 @@
 // All processors that support AVX2 support F16C & RDRAND:
 // (but neither MSVC nor the Intel compiler define these macros)
 #    define __F16C__                        1
-#    define __RDRND__                       1
+// #    define __RDRND__                       1
 #  endif
 #endif
+#ifdef __RDRND__
+#    undef __RDRND__
+#endif
 
 #if defined(__AES__) || defined(__PCLMUL__)
 #  include <wmmintrin.h>
@@ -287,8 +290,8 @@
 #define QT_FUNCTION_TARGET_STRING_PCLMUL        "pclmul,sse4.2"
 #define QT_FUNCTION_TARGET_STRING_POPCNT        "popcnt"
 #define QT_FUNCTION_TARGET_STRING_F16C          "f16c,avx"
-#define QT_FUNCTION_TARGET_STRING_RDRAND        "rdrnd"
-#define QT_FUNCTION_TARGET_STRING_RDRND         "rdrnd"
+// #define QT_FUNCTION_TARGET_STRING_RDRAND        "rdrnd"
+// #define QT_FUNCTION_TARGET_STRING_RDRND         "rdrnd"
 #define QT_FUNCTION_TARGET_STRING_BMI           "bmi"
 #define QT_FUNCTION_TARGET_STRING_BMI2          "bmi2"
 #define QT_FUNCTION_TARGET_STRING_RDSEED        "rdseed"
@@ -356,12 +359,12 @@ enum CPUFeatures {
     CpuFeatureSSSE3         = (0 + 9),
     CpuFeatureSSE4_1        = (0 + 19),
     CpuFeatureSSE4_2        = (0 + 20),
-    CpuFeatureMOVBE         = (0 + 22),
+//     CpuFeatureMOVBE         = (0 + 22),
     CpuFeaturePOPCNT        = (0 + 23),
     CpuFeatureAES           = (0 + 25),
     CpuFeatureAVX           = (0 + 28),
     CpuFeatureF16C          = (0 + 29),
-    CpuFeatureRDRAND        = (0 + 30),
+//     CpuFeatureRDRAND        = (0 + 30),
     // 31 is always zero and we've used it for the QSimdInitialized
 
     // in level 7, leaf 0, EBX
@@ -388,7 +391,7 @@ enum CPUFeatures {
     // used only to indicate that the CPU detection was initialised
     QSimdInitialized = 0x80000000
 };
-#define CpuFeatureRDRND CpuFeatureRDRAND
+// #define CpuFeatureRDRND CpuFeatureRDRAND
 
 static const quint64 qCompilerCpuFeatures = 0
 #if defined __SHA__
@@ -400,9 +403,9 @@ static const quint64 qCompilerCpuFeatures = 0
 #if defined __RTM__
         | (Q_UINT64_C(1) << CpuFeatureRTM)
 #endif
-#ifdef __RDRND__
-        | (Q_UINT64_C(1) << CpuFeatureRDRAND)
-#endif
+// #ifdef __RDRND__
+//         | (Q_UINT64_C(1) << CpuFeatureRDRAND)
+// #endif
 #ifdef __RDSEED__
         | (Q_UINT64_C(1) << CpuFeatureRDSEED)
 #endif
@@ -418,9 +421,9 @@ static const quint64 qCompilerCpuFeatures = 0
 #if defined __POPCNT__
         | (Q_UINT64_C(1) << CpuFeaturePOPCNT)
 #endif
-#if defined __MOVBE__           // GCC and Clang don't seem to define this
-        | (Q_UINT64_C(1) << CpuFeatureMOVBE)
-#endif
+// #if defined __MOVBE__           // GCC and Clang don't seem to define this
+//         | (Q_UINT64_C(1) << CpuFeatureMOVBE)
+// #endif
 #if defined __AVX512F__
         | (Q_UINT64_C(1) << CpuFeatureAVX512F)
 #endif
