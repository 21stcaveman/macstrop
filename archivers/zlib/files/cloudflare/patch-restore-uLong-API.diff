diff --git a/deflate.c b/deflate.c
index 1f04decd375bf28a5e7d0c6ad740ecda225ab40c..afd276550997c360d88648e99f1c59663b415a27 100755
--- a/deflate.c
+++ b/deflate.c
@@ -143,7 +143,7 @@ static uint32_t hash_func(deflate_state *s, void* str) {
     return __crc32cw(0, *(uint32_t*)str) & s->hash_mask;
 }
 
-#elif defined __x86_64__ || defined _M_AMD64
+#elif 1 /*defined __x86_64__ || defined _M_AMD64*/
 
 #include <immintrin.h>
 static uint32_t hash_func(deflate_state *s, void* str) {
@@ -568,9 +568,9 @@ int ZEXPORT deflateTune(strm, good_length, max_lazy, nice_length, max_chain)
  * upper bound of about 14% expansion does not seem onerous for output buffer
  * allocation.
  */
-uint64_t ZEXPORT deflateBound(strm, sourceLen)
+uLong ZEXPORT deflateBound(strm, sourceLen)
     z_streamp strm;
-    uint64_t sourceLen;
+    uLong sourceLen;
 {
     deflate_state *s;
     uint64_t complen, wraplen;
@@ -1373,7 +1373,7 @@ static void fill_window(s)
                 q+=8;
             }
 
-#elif defined __x86_64__ || defined _M_AMD64
+#else /*if defined __x86_64__ || defined _M_AMD64*/
 
             __m128i  W;
             __m128i *q;
diff --git a/test/example.c b/test/example.c
index 5efd7b6e5fa7e49c65bedec01171b3e510b8105a..138a699bd53e60250b3eed61e631175ef0452630 100644
--- a/test/example.c
+++ b/test/example.c
@@ -362,7 +362,7 @@ void test_large_inflate(compr, comprLen, uncompr, uncomprLen)
     CHECK_ERR(err, "inflateEnd");
 
     if (d_stream.total_out != 2*uncomprLen + comprLen/2) {
-        fprintf(stderr, "bad large inflate: %lld\n", d_stream.total_out);
+        fprintf(stderr, "bad large inflate: %ld\n", d_stream.total_out);
         exit(1);
     } else {
         printf("large_inflate(): OK\n");
@@ -559,7 +559,7 @@ int main(argc, argv)
         fprintf(stderr, "warning: different zlib version\n");
     }
 
-    printf("zlib version %s = 0x%04x, compile flags = 0x%llx\n",
+    printf("zlib version %s = 0x%04x, compile flags = 0x%lx\n",
             ZLIB_VERSION, ZLIB_VERNUM, zlibCompileFlags());
 
     compr    = (Byte*)calloc((uInt)comprLen, 1);
diff --git a/zconf.h b/zconf.h
index 9fa6826734c67ca9b03db7d641ca8c775dcfd9ce..0876e834e99aeab70a1ecc52b589c3529984b6d2 100644
--- a/zconf.h
+++ b/zconf.h
@@ -365,10 +365,10 @@
 #endif
 
 #if !defined(__MACTYPES__)
-typedef uint8_t    Byte;  /* 8 bits */
+typedef unsigned char  Byte;  /* 8 bits */
 #endif
-typedef uint32_t   uInt;  /* 32 bits */
-typedef uint64_t   uLong; /* 64 bits */
+typedef unsigned int   uInt;  /* 16 bits or more */
+typedef unsigned long  uLong; /* 32 bits or more */
 
 #ifdef SMALL_MEDIUM
    /* Borland C/C++ and some old MSC versions ignore FAR inside typedef */
diff --git a/zconf.h.cmakein b/zconf.h.cmakein
index 605ac8b19fbec55b7be69a12de5b545b82f80763..98d9441667932c851dfeb6e70d5281a7a7b0bcdc 100644
--- a/zconf.h.cmakein
+++ b/zconf.h.cmakein
@@ -365,10 +365,10 @@
 #endif
 
 #if !defined(__MACTYPES__)
-typedef uint8_t    Byte;  /* 8 bits */
+typedef unsigned char    Byte;  /* 8 bits */
 #endif
-typedef uint32_t   uInt;  /* 32 bits */
-typedef uint64_t   uLong; /* 64 bits */
+typedef unsigned int   uInt;  /* 32 bits */
+typedef unsigned long   uLong; /* 64 bits */
 
 #ifdef SMALL_MEDIUM
    /* Borland C/C++ and some old MSC versions ignore FAR inside typedef */
diff --git a/zconf.h.in b/zconf.h.in
index 0878c8316dceddfbd49b606ebb5189f1417f5ee1..320460619c5bc46cca3e9efb126b762bf673f2a2 100644
--- a/zconf.h.in
+++ b/zconf.h.in
@@ -365,10 +365,10 @@
 #endif
 
 #if !defined(__MACTYPES__)
-typedef uint8_t    Byte;  /* 8 bits */
+typedef unsigned char  Byte;  /* 8 bits */
 #endif
-typedef uint32_t   uInt;  /* 32 bits */
-typedef uint64_t   uLong; /* 64 bits */
+typedef unsigned int   uInt;  /* 16 bits or more */
+typedef unsigned long  uLong; /* 32 bits or more */
 
 #ifdef SMALL_MEDIUM
    /* Borland C/C++ and some old MSC versions ignore FAR inside typedef */
diff --git a/zlib.h b/zlib.h
index f485e0e61f08abf5a32272890faa21b8a001c6f3..063c7abfec4ec699721e08bc1c1cec684de0d4e8 100755
--- a/zlib.h
+++ b/zlib.h
@@ -696,8 +696,8 @@ ZEXTERN int ZEXPORT deflateTune OF((z_streamp strm,
    returns Z_OK on success, or Z_STREAM_ERROR for an invalid deflate stream.
  */
 
-ZEXTERN uint64_t ZEXPORT deflateBound OF((z_streamp strm,
-                                       uint64_t sourceLen));
+ZEXTERN uLong ZEXPORT deflateBound OF((z_streamp strm,
+                                       uLong sourceLen));
 /*
      deflateBound() returns an upper bound on the compressed size after
    deflation of sourceLen bytes.  It must be called after deflateInit() or
