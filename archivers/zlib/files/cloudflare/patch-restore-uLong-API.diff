diff --git a/deflate.c b/deflate.c
index b4470f132b9c18a652659b962af9519f3c6a642a..ab787dea15865ae32515fc80f8f8c9e057439ce9 100644
--- a/deflate.c
+++ b/deflate.c
@@ -528,9 +528,9 @@ int ZEXPORT deflateTune(strm, good_length, max_lazy, nice_length, max_chain)
  * upper bound of about 14% expansion does not seem onerous for output buffer
  * allocation.
  */
-uint64_t ZEXPORT deflateBound(strm, sourceLen)
+uLong ZEXPORT deflateBound(strm, sourceLen)
     z_streamp strm;
-    uint64_t sourceLen;
+    uLong sourceLen;
 {
     deflate_state *s;
     uint64_t complen, wraplen;
diff --git a/test/example.c b/test/example.c
index 5efd7b6e5fa7e49c65bedec01171b3e510b8105a..138a699bd53e60250b3eed61e631175ef0452630 100644
--- a/test/example.c
+++ b/test/example.c
@@ -362,7 +362,7 @@ void test_large_inflate(compr, comprLen, uncompr, uncomprLen)
     CHECK_ERR(err, "inflateEnd");
 
     if (d_stream.total_out != 2*uncomprLen + comprLen/2) {
-        fprintf(stderr, "bad large inflate: %lld\n", d_stream.total_out);
+        fprintf(stderr, "bad large inflate: %ld\n", d_stream.total_out);
         exit(1);
     } else {
         printf("large_inflate(): OK\n");
@@ -559,7 +559,7 @@ int main(argc, argv)
         fprintf(stderr, "warning: different zlib version\n");
     }
 
-    printf("zlib version %s = 0x%04x, compile flags = 0x%llx\n",
+    printf("zlib version %s = 0x%04x, compile flags = 0x%lx\n",
             ZLIB_VERSION, ZLIB_VERNUM, zlibCompileFlags());
 
     compr    = (Byte*)calloc((uInt)comprLen, 1);
diff --git a/zconf.h b/zconf.h
index 9fa6826734c67ca9b03db7d641ca8c775dcfd9ce..0876e834e99aeab70a1ecc52b589c3529984b6d2 100644
--- a/zconf.h
+++ b/zconf.h
@@ -365,10 +365,10 @@
 #endif
 
 #if !defined(__MACTYPES__)
-typedef uint8_t    Byte;  /* 8 bits */
+typedef unsigned char  Byte;  /* 8 bits */
 #endif
-typedef uint32_t   uInt;  /* 32 bits */
-typedef uint64_t   uLong; /* 64 bits */
+typedef unsigned int   uInt;  /* 16 bits or more */
+typedef unsigned long  uLong; /* 32 bits or more */
 
 #ifdef SMALL_MEDIUM
    /* Borland C/C++ and some old MSC versions ignore FAR inside typedef */
diff --git a/zconf.h.cmakein b/zconf.h.cmakein
index 47f65f43aace8afd986666564aab97514cefda87..14d4004e1b6b28addfa182ac1e97fecba0781531 100644
--- a/zconf.h.cmakein
+++ b/zconf.h.cmakein
@@ -367,10 +367,10 @@
 #endif
 
 #if !defined(__MACTYPES__)
-typedef uint8_t  Byte;  /* 8 bits */
+typedef unsigned char  Byte;  /* 8 bits */
 #endif
-typedef uint32_t  uInt;
-typedef uint64_t  uLong;
+typedef unsigned int   uInt;  /* 16 bits or more */
+typedef unsigned long  uLong; /* 32 bits or more */
 
 #ifdef SMALL_MEDIUM
    /* Borland C/C++ and some old MSC versions ignore FAR inside typedef */
diff --git a/zconf.h.in b/zconf.h.in
index 0878c8316dceddfbd49b606ebb5189f1417f5ee1..320460619c5bc46cca3e9efb126b762bf673f2a2 100644
--- a/zconf.h.in
+++ b/zconf.h.in
@@ -365,10 +365,10 @@
 #endif
 
 #if !defined(__MACTYPES__)
-typedef uint8_t    Byte;  /* 8 bits */
+typedef unsigned char  Byte;  /* 8 bits */
 #endif
-typedef uint32_t   uInt;  /* 32 bits */
-typedef uint64_t   uLong; /* 64 bits */
+typedef unsigned int   uInt;  /* 16 bits or more */
+typedef unsigned long  uLong; /* 32 bits or more */
 
 #ifdef SMALL_MEDIUM
    /* Borland C/C++ and some old MSC versions ignore FAR inside typedef */
