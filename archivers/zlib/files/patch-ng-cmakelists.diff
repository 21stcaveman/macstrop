diff --git a/CMakeLists.txt b/CMakeLists.txt
index 31ee6e3..7ff531f 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -90,8 +90,7 @@ elseif(MSVC)
         message(STATUS "Ignoring WITH_NATIVE_INSTRUCTIONS; not supported on this configuration")
     endif()
 else()
-    execute_process(COMMAND ${CMAKE_C_COMPILER} --version OUTPUT_VARIABLE COMPILER_VERSION)
-    if("${COMPILER_VERSION}" MATCHES "gcc" OR "${COMPILER_VERSION}" MATCHES "GCC" OR "${COMPILER_VERSION}" MATCHES "clang")
+    if(CMAKE_C_COMPILER_ID MATCHES "GNU" OR CMAKE_C_COMPILER_ID MATCHES "Clang")
         set(__GNUC__ ON)
     endif()
     if(WITH_NATIVE_INSTRUCTIONS)
@@ -331,7 +330,7 @@ if("${ARCHDIR}" MATCHES "arch/x86" AND WITH_OPTIM)
         add_definitions(-DX86_SSE4_2_CRC_HASH)
         set(ZLIB_ARCH_SRCS ${ZLIB_ARCH_SRCS} ${ARCHDIR}/insert_string_sse.c)
         add_feature_info(SSE4_CRC 1 "Support CRC hash generation using the SSE4.2 instruction set, using \"${SSE4FLAG}\"")
-        add_intrinsics_option(${SSE4FLAG})
+        add_intrinsics_option("${SSE4FLAG}")
         if(WITH_NEW_STRATEGIES)
             add_definitions(-DX86_QUICK_STRATEGY)
             set(ZLIB_ARCH_SRCS ${ZLIB_ARCH_SRCS} ${ARCHDIR}/deflate_quick.c)
@@ -348,12 +347,12 @@ if("${ARCHDIR}" MATCHES "arch/x86" AND WITH_OPTIM)
     if(HAVE_PCLMULQDQ_INTRIN)
         add_definitions(-DX86_PCLMULQDQ_CRC)
         set(ZLIB_ARCH_SRCS ${ZLIB_ARCH_SRCS} ${ARCHDIR}/crc_folding.c ${ARCHDIR}/crc_pclmulqdq.c)
-        add_intrinsics_option(${PCLMULFLAG})
+        add_intrinsics_option("${PCLMULFLAG}")
         if(HAVE_SSE42_INTRIN)
             add_feature_info(PCLMUL_CRC 1 "Support CRC hash generation using PCLMULQDQ, using \"${PCLMULFLAG}\"")
         else()
             add_feature_info(PCLMUL_CRC 1 "Support CRC hash generation using PCLMULQDQ, using \"${PCLMULFLAG} ${SSE4FLAG}\"")
-            add_intrinsics_option(${SSE4FLAG})
+            add_intrinsics_option("${SSE4FLAG}")
         endif()
     endif()
 endif()
