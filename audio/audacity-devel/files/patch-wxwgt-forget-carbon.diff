diff --git a/src/effects/VST/VSTEffect.cpp b/src/effects/VST/VSTEffect.cpp
index 9b4c6aa..8077131 100644
--- a/src/effects/VST/VSTEffect.cpp
+++ b/src/effects/VST/VSTEffect.cpp
@@ -1008,7 +1008,7 @@ BEGIN_EVENT_TABLE(VSTEffectDialog, wxDialog)
    EVT_COMMAND(wxID_ANY, EVT_UPDATEDISPLAY, VSTEffectDialog::OnUpdateDisplay)
 END_EVENT_TABLE()
 
-#if defined(__WXMAC__)
+#if defined(__WXOSX_MAC__) && wxOSX_USE_CARBON
 
 // ----------------------------------------------------------------------------
 // Most of the following is used to deal with VST effects that create an overlay
@@ -1400,7 +1400,7 @@ VSTEffectDialog::~VSTEffectDialog()
 
 void VSTEffectDialog::RemoveHandler()
 {
-#if defined(__WXMAC__)
+#if defined(__WXOSX_MAC__) && wxOSX_USE_CARBON
    if (mOverlayEventHandlerRef) {
       ::RemoveEventHandler(mOverlayEventHandlerRef);
       mOverlayEventHandlerRef = 0;
@@ -1434,7 +1434,7 @@ void VSTEffectDialog::BuildFancy()
    // Some effects like to have us get their rect before opening them.
    mEffect->callDispatcher(effEditGetRect, 0, 0, &rect, 0.0);
 
-#if defined(__WXMAC__)
+#if defined(__WXOSX_MAC__) && wxOSX_USE_CARBON
 
    // Retrieve the current window and the one above it.  The window list
    // is kept in top-most to bottom-most order, so we'll use that to
@@ -1512,7 +1512,7 @@ void VSTEffectDialog::BuildFancy()
    // Found out where the reserved space wound up
    wxPoint pos = mContainer->GetPosition();
 
-#if defined(__WXMAC__)
+#if defined(__WXOSX_MAC__) && wxOSX_USE_CARBON
    // Reposition the subview into the reserved space
    HIViewPlaceInSuperviewAt(subview, pos.x, pos.y);
 
@@ -3178,7 +3178,7 @@ bool VSTEffect::Load()
    mResource = -1;
 
    // Convert the path to a CFSTring
-   wxMacCFStringHolder path(mPath);
+   wxCFStringRef path(mPath);
 
    // Convert the path to a URL
    CFURLRef urlRef =
diff --git a/src/FileIO.cpp b/src/FileIO.cpp
index 2e451ef..9f90259 100644
--- a/src/FileIO.cpp
+++ b/src/FileIO.cpp
@@ -97,7 +97,7 @@ void FileIO::SetCatalogInfo()
 
 void FileIO::SetCatalogInfo(wxUint32 type)
 {
-#ifdef __WXMAC__
+#if defined(__WXOSX_MAC__) && wxOSX_USE_CARBON
    if (!mOpen ) {
       return;
    }
diff --git a/src/Project.cpp b/src/Project.cpp
index f5cc69a..4f85d79 100644
--- a/src/Project.cpp
+++ b/src/Project.cpp
@@ -276,7 +276,7 @@ public:
          return true;
       }
 
-#if defined(__WXMAC__)
+#if defined(__WXOSX_MAC__) && wxOSX_USE_CARBON
       if (format.GetFormatId() == kDragPromisedFlavorFindFile) {
          return true;
       }
@@ -300,7 +300,7 @@ public:
    {
    }
 
-#if defined(__WXMAC__)
+#if defined(__WXOSX_MAC__) && wxOSX_USE_CARBON
    bool GetData()
    {
       bool foundSupported = false;
@@ -3288,7 +3288,7 @@ bool AudacityProject::Save(bool overwrite /* = true */ ,
       return false;
    }
 
-#ifdef __WXMAC__
+#if defined(__WXOSX_MAC__) && wxOSX_USE_CARBON
    wxFileName fn(mFileName);
    fn.MacSetTypeAndCreator(AUDACITY_PROJECT_TYPE, AUDACITY_CREATOR);
 #endif
diff --git a/src/export/ExportPCM.cpp b/src/export/ExportPCM.cpp
index 5997e8d..7e1563d 100644
--- a/src/export/ExportPCM.cpp
+++ b/src/export/ExportPCM.cpp
@@ -586,7 +586,7 @@ int ExportPCM::Export(AudacityProject *project,
        ((sf_format & SF_FORMAT_TYPEMASK) == SF_FORMAT_WAV))
       AddID3Chunk(fName, metadata, sf_format);
 
-#ifdef __WXMAC__
+#if defined(__WXOSX_MAC__) && wxOSX_USE_CARBON
    wxFileName fn(fName);
    fn.MacSetTypeAndCreator(sf_header_mactype(sf_format & SF_FORMAT_TYPEMASK),
                            AUDACITY_CREATOR);
diff --git a/src/widgets/ProgressDialog.cpp b/src/widgets/ProgressDialog.cpp
index 59f1b99..f572d6a 100644
--- a/src/widgets/ProgressDialog.cpp
+++ b/src/widgets/ProgressDialog.cpp
@@ -1154,6 +1154,7 @@ ProgressDialog::ProgressDialog(const wxString & title, const wxString & message,
    mDisable = new wxWindowDisabler(this);
 
 #if defined(__WXMAC__)
+#if defined(__WXOSX_MAC__) && wxOSX_USE_CARBON
    // LL:  On the Mac, the parent windows get disabled, but they still respond
    //      to the close button being clicked and the application quit menu item
    //      is still enabled.  We do not want the parent window to be destroyed
@@ -1164,7 +1165,7 @@ ProgressDialog::ProgressDialog(const wxString & title, const wxString & message,
       SetWindowModality(windowRef, kWindowModalityAppModal, NULL);
       BeginAppModalStateForWindow(windowRef);
    }
-
+#endif
    w = wxTheApp->GetTopWindow();
    if (w) {
       w = wxGetTopLevelParent(w);
@@ -1226,10 +1227,12 @@ ProgressDialog::~ProgressDialog()
       }
    }
 
+#if defined(__WXOSX_MAC__) && wxOSX_USE_CARBON
    WindowRef windowRef = (WindowRef) MacGetWindowRef();
    if (windowRef) {
       EndAppModalStateForWindow(windowRef);
    }
+#endif // CARBON
 #endif
 
    if (mDisable)
@@ -1278,7 +1281,7 @@ ProgressDialog::Show(bool show)
       {
          mDisable = new wxWindowDisabler(this);
 
-         #if defined(__WXMAC__)
+         #if defined(__WXOSX_MAC__) && wxOSX_USE_CARBON
             // LL:  On the Mac, the parent windows get disabled, but they still respond
             //      to the close button being clicked and the application quit menu item
             //      is still enabled.  We do not want the parent window to be destroyed
