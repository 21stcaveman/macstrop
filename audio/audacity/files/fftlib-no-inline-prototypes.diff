diff --git a/lib-src/libnyquist/nyquist/ffts/src/fftlib.c b/lib-src/libnyquist/nyquist/ffts/src/fftlib.c
index d832f89..a94aad1 100644
--- a/lib-src/libnyquist/nyquist/ffts/src/fftlib.c
+++ b/lib-src/libnyquist/nyquist/ffts/src/fftlib.c
@@ -61,7 +61,7 @@ for (i1 = 0; i1 < Nroot_1; i1++){
 parts of ffts1
 *************************************************/
 
-inline void bitrevR2(float *ioptr, long M, short *BRLow);
+void bitrevR2(float *ioptr, long M, short *BRLow);
 inline void bitrevR2(float *ioptr, long M, short *BRLow){
 /*** bit reverse and first radix 2 stage of forward or inverse fft ***/
 float	f0r;
@@ -512,7 +512,7 @@ for (SameUCnt = NSameU; SameUCnt > 0 ; SameUCnt--){
 }
 }
 
-inline void bfR4(float *ioptr, long M, long NDiffU);
+void bfR4(float *ioptr, long M, long NDiffU);
 inline void bfR4(float *ioptr, long M, long NDiffU){
 /*** 1 radix 4 stage ***/
 unsigned long	pos;
@@ -721,7 +721,7 @@ f4i = f4i * Two - f6i;
 
 }
 
-inline void bfstages(float *ioptr, long M, float *Utbl, long Ustride, long NDiffU, long StageCnt);
+void bfstages(float *ioptr, long M, float *Utbl, long Ustride, long NDiffU, long StageCnt);
 inline void bfstages(float *ioptr, long M, float *Utbl, long Ustride, long NDiffU, long StageCnt){
 /***   RADIX 8 Stages	***/
 unsigned long	pos;
@@ -1125,7 +1125,7 @@ default:
 parts of iffts1
 *************************************************/
 
-inline void scbitrevR2(float *ioptr, long M, short *BRLow, float scale);
+void scbitrevR2(float *ioptr, long M, short *BRLow, float scale);
 inline void scbitrevR2(float *ioptr, long M, short *BRLow, float scale){
 /*** scaled bit reverse and first radix 2 stage forward or inverse fft ***/
 float	f0r;
@@ -1347,8 +1347,8 @@ ioptr[6] = scale*f3r;
 ioptr[7] = scale*f3i;
 }
 
-inline void ifft8pt(float *ioptr, float scale);
-inline void ifft8pt(float *ioptr, float scale){
+static inline void ifft8pt(float *ioptr, float scale);
+static inline void ifft8pt(float *ioptr, float scale){
 /***   RADIX 8 ifft	***/
 float w0r = 1.0/MYROOT2; /* cos(pi/4)	*/
 float f0r, f0i, f1r, f1i, f2r, f2i, f3r, f3i;
@@ -1576,7 +1576,7 @@ for (SameUCnt = NSameU; SameUCnt > 0 ; SameUCnt--){
 }
 }
 
-inline void ibfR4(float *ioptr, long M, long NDiffU);
+void ibfR4(float *ioptr, long M, long NDiffU);
 inline void ibfR4(float *ioptr, long M, long NDiffU){
 /*** 1 radix 4 stage ***/
 unsigned long	pos;
@@ -1785,7 +1785,7 @@ f4i = f4i * Two - f6i;
 
 }
 
-inline void ibfstages(float *ioptr, long M, float *Utbl, long Ustride, long NDiffU, long StageCnt);
+void ibfstages(float *ioptr, long M, float *Utbl, long Ustride, long NDiffU, long StageCnt);
 inline void ibfstages(float *ioptr, long M, float *Utbl, long Ustride, long NDiffU, long StageCnt){
 /***   RADIX 8 Stages	***/
 unsigned long	pos;
@@ -2477,7 +2477,7 @@ ioptr[14] = scale*f6r;
 ioptr[15] = scale*f6i;
 }
 
-inline void frstage(float *ioptr, long M, float *Utbl);
+void frstage(float *ioptr, long M, float *Utbl);
 inline void frstage(float *ioptr, long M, float *Utbl){
 /*	Finish RFFT		*/
 
