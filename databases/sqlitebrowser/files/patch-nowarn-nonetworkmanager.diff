--- src/orig.RemoteDatabase.cpp	2017-09-20 15:59:51.000000000 +0200
+++ src/RemoteDatabase.cpp	2018-02-05 22:05:41.000000000 +0100
@@ -363,11 +363,11 @@
 void RemoteDatabase::fetch(const QString& url, RequestType type, const QString& clientCert, QVariant userdata)
 {
     // Check if network is accessible. If not, abort right here
-    if(m_manager->networkAccessible() == QNetworkAccessManager::NotAccessible)
-    {
-        QMessageBox::warning(0, qApp->applicationName(), tr("Error: The network is not accessible."));
-        return;
-    }
+//     if(m_manager->networkAccessible() == QNetworkAccessManager::NotAccessible)
+//     {
+//         QMessageBox::warning(0, qApp->applicationName(), tr("Error: The network is not accessible."));
+//         return;
+//     }
 
     // If this is a request for a database there is a chance that we've already cloned that database. So check for that first
     if(type == RequestTypeDatabase)
@@ -394,7 +394,10 @@
     {
         // If configuring the SSL connection fails, abort the request here
         if(!prepareSsl(&request, clientCert))
+        {
+            QMessageBox::warning(0, qApp->applicationName(), tr("Error: couldn't create SSL connection to \"%1\".").arg(url));
             return;
+        }
     }
 
     // Clear access cache if necessary
@@ -416,11 +419,11 @@
                           const QString& commitMessage, const QString& licence, bool isPublic, const QString& branch)
 {
     // Check if network is accessible. If not, abort right here
-    if(m_manager->networkAccessible() == QNetworkAccessManager::NotAccessible)
-    {
-        QMessageBox::warning(0, qApp->applicationName(), tr("Error: The network is not accessible."));
-        return;
-    }
+//     if(m_manager->networkAccessible() == QNetworkAccessManager::NotAccessible)
+//     {
+//         QMessageBox::warning(0, qApp->applicationName(), tr("Error: The network is not accessible."));
+//         return;
+//     }
 
     // Open the file to send and check if it exists
     QFile* file = new QFile(filename);
@@ -451,6 +454,7 @@
         // If configuring the SSL connection fails, abort the request here
         if(!prepareSsl(&request, clientCert))
         {
+            QMessageBox::warning(0, qApp->applicationName(), tr("Error: couldn't create SSL connection to \"%1\".").arg(url));
             delete file;
             return;
         }
