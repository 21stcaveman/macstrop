# -*- coding: utf-8; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:et:sw=4:ts=4:sts=4
# kate: backspace-indents true; indent-pasted-text true; indent-width 4; keep-extra-spaces true; remove-trailing-spaces modified; replace-tabs true; replace-tabs-save true; syntax Tcl/Tk; tab-indents true; tab-width 4;

PortSystem          1.0
PortGroup           cmake 1.1

name                GammaRay
# merge `git describe` and the version in the Cmake file:
set version_string  2.8.50.309
version             ${version_string}

description         a Qt poking-around tool.
long_description    GammaRay is a tool to poke around in a Qt-application and also to manipulate the application to some extent.

homepage            http://www.kdab.com/kdab-products/gammaray/
categories          devel
platforms           darwin
license             {GPL-2 GPL-3}
maintainers         gmail.com:rjvbertin openmaintainer
universal_variant   no

if {${subport} ne ${name}} {
    fetch.type          git
    # v2.8.0-309-g6a60dd0
    git.branch          6a60dd0f24d0a146d7293e7c75fc5027f2c743d0
    PortGroup           github 1.0
    github.setup        KDAB GammaRay ${git.branch}
    installs_libs       yes
    version             ${version_string}
} else {
    installs_libs       no
}
worksrcdir              ${name}-git
distname                ${name}-git

depends_build-append    port:git \
                        port:doxygen
depends_lib-append      port:perl5

variant kde description {build KDE support} {}

patchfiles-append       patch-support-macports-buildtype.diff

configure.args-append   -DCMAKE_DISABLE_FIND_PACKAGE_VTK=true \
                        -DGAMMARAY_ENABLE_GPL_ONLY_FEATURES=true \
                        -DGAMMARAY_INSTALL_QT_LAYOUT=false

subport ${name}-qt4 {
    description-append      Includes the Qt4 probe
    long_description-append This port includes the Qt4 probe
    PortGroup               qt4 1.0
    conflicts               ${name}-qt5
    configure.args-append   -DGAMMARAY_ENFORCE_QT4_BUILD=true
    depends_lib-append      port:automoc port:phonon
    if {[variant_isset kde]} {
        depends_lib-append  port:kdelibs4
    }
}

subport ${name}-qt5 {
    description-append      Includes the Qt5 probe
    long_description-append This port includes the Qt5 probe
    set qt5.prefer_kde      1
    PortGroup               qt5 1.0
    conflicts               ${name}-qt4
    # this can optionally depend also on https://github.com/KDAB/KDStateMachineEditor
    if {[variant_isset kde]} {
        PortGroup           kf5 1.1
        kf5.depends_frameworks \
                            kcoreaddons ksyntaxhighlighting
        kf5.allow_apidocs_generation no
    }
    post-configure {
        system -W ${build.dir} "${build.cmd} man"
    }
    platform darwin {
        qt5.add_app_wrapper gammaray5 GammaRay GammaRayUI
    }
}

# GammaRay doesn't support building multiple Qt probes in a single go, so we can
# only provide a "probe" subport that can build either the Qt4 or the Qt5 subport.
subport ${name}-probe {
    description                 The Qt4/Qt5 probe for ${name}-qt5/${name}-qt4
    long_description-append     This port builds either the Qt4 probe for ${name}-qt5 or the Qt5 probe for ${name}-qt4.

    configure.args-append       -DGAMMARAY_PROBE_ONLY_BUILD=true

    variant qt4 conflicts qt5 description {build the Qt4 probe for ${name}-qt5} {
        PortGroup               qt4 1.0
        conflicts               ${name}-qt4
        depends_run-append      port:${name}-qt5
        depends_lib-append      port:automoc port:phonon
        if {[variant_isset kde]} {
            depends_lib-append  port:kdelibs4
        }
        configure.args-append   -DGAMMARAY_ENFORCE_QT4_BUILD=true
    }

    variant qt5 conflicts qt4 description {build the Qt5 probe for ${name}-qt4} {
        PortGroup               qt5 1.0
        conflicts               ${name}-qt5
        depends_lib-append      port:${name}-qt4
        if {[variant_isset kde]} {
            notes-append "KDE support with Qt5 requires KF5 which is not yet available on OS X"
        }
    }

    pre-fetch {
        if {![variant_isset qt4] && ![variant_isset qt5]} {
             return -code error "\n\nERROR:\n\
        You must select either the qt4 or the qt5 variant\n"
        }
    }
}

if {![variant_isset kde]} {
    patchfiles-append           patch-no-KDE.diff
}

if {${subport} eq "${name}-qt4"} {
    # this space intentionally left empty - for now
} elseif {${subport} eq "${name}-qt5"} {
    # this space intentionally left empty - for now
} else {
    if {${subport} eq ${name}} {
        # default version to install is the Qt5 version because it (supposedly) works so much better.
        depends_lib             port:${name}-qt5
        description-append      Installs ${depends_lib}
        long_description-append This is a stub port that will install ${depends_lib}
    } elseif {${subport} eq "${name}-probe"} {
        depends_lib
    }
    if {![variant_isset qt4] && ![variant_isset qt5]} {
        supported_archs         noarch
        archive_sites
        distfiles
        patchfiles
        depends_fetch
        depends_build
        use_configure           no
#         fetch                   {}
        build                   {}
        destroot                {
            xinstall -m 755 -d ${destroot}${prefix}/share/doc/${name}
            system "gzip -9v < [exec port logfile ${name}] > ${destroot}${prefix}/share/doc/${name}/install.log.gz"
        }
    }
}

if {[info procs qt5.depends_component] != ""} {
    # we build a subport depending on Qt5. Declare all
    # dependencies
    qt5.depends_component   qt3d \
                            qtconnectivity \
                            qtdeclarative \
                            qtgamepad \
                            qtlocation \
                            qtscxml \
                            qtsvg \
                            qttools \
                            qtwebkit
}

post-destroot {
    platform darwin {
        if {${subport} ne ${name}} {
            xinstall -m 755 -d ${destroot}/${qt_apps_dir}
            xinstall -m 755 -d ${destroot}/${qt_mkspecs_dir}/modules
            if {${subport} eq "${name}-probe"} {
                delete ${destroot}/${prefix}/GammaRay.app/Contents/Resources
                delete ${destroot}/${prefix}/mkspecs
            } else {
                move ${destroot}/${prefix}/GammaRay.app/Contents/Resources/man/man1/gammaray.1 ${destroot}${prefix}/share/man/man1
                move ${destroot}/${prefix}/GammaRay.app/Contents/Resources/cmake ${destroot}${prefix}/share
                move ${destroot}/${prefix}/GammaRay.app/Contents/Resources/include/gammaray ${destroot}${prefix}/include
                delete ${destroot}/${prefix}/GammaRay.app/Contents/Resources/include
                delete ${destroot}/${prefix}/GammaRay.app/Contents/Resources/man
                foreach pri [glob  ${destroot}/${prefix}/GammaRay.app/Contents/Resources/${qt_mkspecs_dir}/modules/*] {
                    move ${pri} ${destroot}/${qt_mkspecs_dir}/modules
                }
            }
            foreach pri [glob  ${destroot}/${prefix}/GammaRay.app/Contents/Frameworks/*.dylib] {
                move ${pri} ${destroot}${prefix}/lib
            }
            move ${destroot}/${prefix}/GammaRay.app ${destroot}/${qt_apps_dir}
        }
    }
}

platform linux {
    # take this from the host
    depends_build-delete \
                        port:doxygen
    post-destroot {
        move ${destroot}${prefix}/doc/gammaray-api.qch ${destroot}${prefix}/share/doc/gammaray/
    }
}
