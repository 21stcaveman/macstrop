diff --git a/CMakeLists.txt b/CMakeLists.txt
index 6207f8d3c3aad44395d1ec83b447f2ded05eb894..d243d81e0ff7705d21759ac763614cd222710966 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -160,14 +160,17 @@ endif()
 
 set(SYMBOL_FILE Lazy.exports)
 
+if(NOT CLANGLAZY)
+   set(CLANGLAZY "ClangLazy")
+endif()
 if (NOT CLAZY_BUILD_WITH_CLANG)
-  add_clang_plugin(ClangLazy ${CLAZY_PLUGIN_SRCS})
-  set_target_properties(ClangLazy PROPERTIES
+  add_clang_plugin(${CLANGLAZY} ${CLAZY_PLUGIN_SRCS})
+  set_target_properties(${CLANGLAZY} PROPERTIES
     LINKER_LANGUAGE CXX
     PREFIX ""
   )
 
-  install(TARGETS ClangLazy
+  install(TARGETS ${CLANGLAZY}
     RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
     LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
     ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
@@ -228,24 +231,24 @@ if (NOT CLAZY_BUILD_WITH_CLANG)
     install(FILES ${CLAZY_LIB_INCLUDES} DESTINATION include/clazy)
   endif()
 
-  # rpath
-  set(CMAKE_SKIP_BUILD_RPATH FALSE)
-  set(CMAKE_BUILD_WITH_INSTALL_RPATH FALSE)
-  set(CMAKE_INSTALL_RPATH "${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}")
-  set(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)
-  list(FIND CMAKE_PLATFORM_IMPLICIT_LINK_DIRECTORIES "${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}" isSystemDir)
-  if("${isSystemDir}" STREQUAL "-1")
-    set(CMAKE_INSTALL_RPATH "${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}")
-  endif("${isSystemDir}" STREQUAL "-1")
+  # rpath (handled by MacPorts build system
+#   set(CMAKE_SKIP_BUILD_RPATH FALSE)
+#   set(CMAKE_BUILD_WITH_INSTALL_RPATH FALSE)
+#   set(CMAKE_INSTALL_RPATH "${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}")
+#   set(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)
+#   list(FIND CMAKE_PLATFORM_IMPLICIT_LINK_DIRECTORIES "${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}" isSystemDir)
+#   if("${isSystemDir}" STREQUAL "-1")
+#     set(CMAKE_INSTALL_RPATH "${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}")
+#   endif("${isSystemDir}" STREQUAL "-1")
 
   # Build clazy-standalone
   add_executable(clazy-standalone ${CLAZY_STANDALONE_SRCS})
 
   if(MSVC)
-    # On MSVC clang-standalone crashes with a meaningless backtrace if linked to ClangLazy.dll
+    # On MSVC clang-standalone crashes with a meaningless backtrace if linked to ${CLANGLAZY}.dll
     target_link_libraries(clazy-standalone clangFrontend)
   else()
-    target_link_libraries(clazy-standalone ClangLazy)
+    target_link_libraries(clazy-standalone ${CLANGLAZY})
   endif()
 
   link_to_llvm(clazy-standalone TRUE)
