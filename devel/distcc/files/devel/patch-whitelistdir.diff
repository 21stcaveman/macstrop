diff --git a/src/daemon.c b/src/daemon.c
index 9df4f7fb7f74529dff9ec4556527b5ad5da99bc9..a3a9cd871c2e66ed2a924d8cb0a18fb7e188328e 100644
--- a/src/daemon.c
+++ b/src/daemon.c
@@ -160,13 +160,13 @@ static void dcc_warn_masquerade_whitelist(void) {
                        " --make-me-a-botnet. To set up masquerade automatically" \
                        " run update-distcc-symlinks.";
 
-    d = opendir("/usr/lib/distcc");
+    d = opendir("@PREFIX@/lib/distcc");
     if (!d) {
-        rs_log_crit("/usr/lib/distcc not found. %s", warn);
+        rs_log_crit("@PREFIX@/lib/distcc not found. %s", warn);
         dcc_exit(EXIT_COMPILER_MISSING);
     }
     if (!readdir(d)) {
-        rs_log_crit("/usr/lib/distcc empty. %s", warn);
+        rs_log_crit("@PREFIX@/lib/distcc empty. %s", warn);
         dcc_exit(EXIT_COMPILER_MISSING);
     }
 }
diff --git a/src/dopt.c b/src/dopt.c
index d5338169891d7416b3a06b09b77e49c057357b19..77be10bb8f8a27f4cc4602924626b71f81d8d8e9 100644
--- a/src/dopt.c
+++ b/src/dopt.c
@@ -95,7 +95,7 @@ int opt_log_stderr = 0;
 int opt_log_level_num = RS_LOG_NOTICE;
 
 /**
- * If true, do not check if a link to distcc exists in /usr/lib/distcc
+ * If true, do not check if a link to distcc exists in @PREFIX@/lib/distcc
  * for every program executed remotely.
  **/
 int opt_make_me_a_botnet = 0;
diff --git a/src/serve.c b/src/serve.c
index 4af1458aedcebf37a6a2250aa8c9ff1c377250ca..74015a526dda4cd9888147f191ef65832f56e023 100644
--- a/src/serve.c
+++ b/src/serve.c
@@ -358,7 +358,7 @@ static int dcc_check_compiler_masq(char *compiler_name)
 }
 
 /**
- * Make sure there is a masquerade to distcc in /usr/lib/distcc in order to
+ * Make sure there is a masquerade to distcc in @PREFIX@/lib/distcc in order to
  * execute a binary of the same name.
  *
  * Before this it was possible to execute arbitrary command after connecting
@@ -387,19 +387,19 @@ static int dcc_check_compiler_whitelist(char *_compiler_name)
         return EXIT_BAD_ARGUMENTS;
     }
 
-    dirfd = open("/usr/lib/distcc", O_RDONLY);
+    dirfd = open("@PREFIX@/lib/distcc", O_RDONLY);
     if (dirfd < 0) {
         if (errno == ENOENT)
-            rs_log_crit("no %s", "/usr/lib/distcc");
+            rs_log_crit("no %s", "@PREFIX@/lib/distcc");
         return EXIT_DISTCC_FAILED;
     }
 
     if (faccessat(dirfd, compiler_name, X_OK, 0) < 0) {
-        rs_log_crit("%s not in %s whitelist.", compiler_name, "/usr/lib/distcc");
+        rs_log_crit("%s not in %s whitelist.", compiler_name, "@PREFIX@/lib/distcc");
         return EXIT_BAD_ARGUMENTS;           /* ENOENT, EACCESS, etc */
     }
 
-    rs_trace("%s in /usr/lib/distcc whitelist", compiler_name);
+    rs_trace("%s in @PREFIX@/lib/distcc whitelist", compiler_name);
 #endif
     return 0;
 }
