diff --git a/Makefile.am b/Makefile.am
index 4f18ff1..7e1b22a 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -83,7 +83,7 @@ os/darwin/TGVVideoRenderer.h \
 os/darwin/TGVVideoSource.h \
 os/darwin/VideoToolboxEncoderSource.h
 
-LDFLAGS += -framework Foundation -framework CoreFoundation -framework CoreAudio -framework AudioToolbox -framework VideoToolbox -framework CoreMedia -framework CoreVideo
+LDFLAGS += -framework Foundation -framework CoreFoundation -framework CoreAudio -framework AudioToolbox -framework VideoToolbox -framework CoreMedia -framework CoreVideo -framework AVFoundation
 
 else
 # Linux-specific
@@ -757,8 +757,10 @@ nobase_tgvoipinclude_HEADERS = $(TGVOIP_HDRS)
 
 pkgconfig_DATA = tgvoip.pc
 
-CXXFLAGS += -std=gnu++17 $(CFLAGS)
 if TARGET_OS_OSX
+CXXFLAGS += -std=gnu++14 $(CFLAGS)
 OBJCFLAGS = $(CFLAGS)
 OBJCXXFLAGS += -std=gnu++0x $(CFLAGS)
-endif
\ No newline at end of file
+else
+CXXFLAGS += -std=gnu++17 $(CFLAGS)
+endif
diff --git a/Makefile.in b/Makefile.in
index c401d28..d7d6728 100644
--- a/Makefile.in
+++ b/Makefile.in
@@ -113,7 +113,7 @@ host_triplet = @host@
 @TARGET_OS_OSX_TRUE@os/darwin/TGVVideoSource.h \
 @TARGET_OS_OSX_TRUE@os/darwin/VideoToolboxEncoderSource.h
 
-@TARGET_OS_OSX_TRUE@am__append_3 = -framework Foundation -framework CoreFoundation -framework CoreAudio -framework AudioToolbox -framework VideoToolbox -framework CoreMedia -framework CoreVideo
+@TARGET_OS_OSX_TRUE@am__append_3 = -framework Foundation -framework CoreFoundation -framework CoreAudio -framework AudioToolbox -framework VideoToolbox -framework CoreMedia -framework CoreVideo -framework AVFoundation
 
 # Linux-specific
 @TARGET_OS_OSX_FALSE@@WITH_ALSA_TRUE@am__append_4 = \
@@ -762,7 +762,9 @@ host_triplet = @host@
 @ENABLE_DSP_TRUE@webrtc_dsp/common_audio/vad/vad_filterbank.h
 
 @ENABLE_DSP_FALSE@am__append_24 = -DTGVOIP_NO_DSP
-@TARGET_OS_OSX_TRUE@am__append_25 = -std=gnu++0x $(CFLAGS)
+@TARGET_OS_OSX_TRUE@am__append_25 = -std=gnu++14 $(CFLAGS)
+@TARGET_OS_OSX_TRUE@am__append_26 = -std=gnu++0x $(CFLAGS)
+@TARGET_OS_OSX_FALSE@am__append_27 = -std=gnu++17 $(CFLAGS)
 subdir = .
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
 am__aclocal_m4_deps = $(top_srcdir)/configure.ac
@@ -2237,7 +2239,7 @@ CPPFLAGS = @CPPFLAGS@
 CXX = @CXX@
 CXXCPP = @CXXCPP@
 CXXDEPMODE = @CXXDEPMODE@
-CXXFLAGS = @CXXFLAGS@ -std=gnu++0x $(CFLAGS)
+CXXFLAGS = @CXXFLAGS@ $(am__append_25) $(am__append_27)
 CYGPATH_W = @CYGPATH_W@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
@@ -2272,7 +2274,7 @@ NM = @NM@
 NMEDIT = @NMEDIT@
 OBJCXX = @OBJCXX@
 OBJCXXDEPMODE = @OBJCXXDEPMODE@
-OBJCXXFLAGS = @OBJCXXFLAGS@ $(am__append_25)
+OBJCXXFLAGS = @OBJCXXFLAGS@ $(am__append_26)
 OBJDUMP = @OBJDUMP@
 OBJEXT = @OBJEXT@
 OTOOL = @OTOOL@
diff --git a/os/darwin/DarwinSpecific.mm b/os/darwin/DarwinSpecific.mm
index e0fb63d..28033c8 100644
--- a/os/darwin/DarwinSpecific.mm
+++ b/os/darwin/DarwinSpecific.mm
@@ -26,6 +26,7 @@ void DarwinSpecific::GetSystemName(char* buf, size_t len){
 void DarwinSpecific::SetCurrentThreadPriority(int priority){
 	NSThread* thread=[NSThread currentThread];
 	if([thread respondsToSelector:@selector(setQualityOfService:)]){
+#if __MAC_OS_X_VERSION_MAX_ALLOWED >= 101000
 		NSQualityOfService qos;
 		switch(priority){
 			case THREAD_PRIO_USER_INTERACTIVE:
@@ -46,6 +47,7 @@ void DarwinSpecific::SetCurrentThreadPriority(int priority){
 				break;
 		}
 		[thread setQualityOfService:qos];
+#endif
 	}else{
 		double p;
 		switch(priority){
diff --git a/os/darwin/SampleBufferDisplayLayerRenderer.mm b/os/darwin/SampleBufferDisplayLayerRenderer.mm
index 2df98ba..6bad967 100644
--- a/os/darwin/SampleBufferDisplayLayerRenderer.mm
+++ b/os/darwin/SampleBufferDisplayLayerRenderer.mm
@@ -44,6 +44,7 @@ void SampleBufferDisplayLayerRenderer::Reset(uint32_t codec, unsigned int width,
 		CGRect rect=CMVideoFormatDescriptionGetCleanAperture(formatDesc, true);
 		LOGI("size from formatDesc: %f x %f", rect.size.width, rect.size.height);
 	}else if(codec==CODEC_HEVC){
+#if __MAC_OS_X_VERSION_MAX_ALLOWED >= 101300
 		if(@available(iOS 11.0, *)){
     		if(csd.size()!=1){
     			LOGE("HEVC requires exactly 1 CSD buffer");
@@ -72,7 +73,9 @@ void SampleBufferDisplayLayerRenderer::Reset(uint32_t codec, unsigned int width,
 			}
     		CGRect rect=CMVideoFormatDescriptionGetCleanAperture(formatDesc, true);
     		LOGI("size from formatDesc: %f x %f", rect.size.width, rect.size.height);
-		}else{
+		}else
+#endif
+		{
 			LOGE("HEVC not available on this OS");
 		}
 	}
@@ -135,10 +138,12 @@ int SampleBufferDisplayLayerRenderer::GetMaximumResolution(){
 std::vector<uint32_t> SampleBufferDisplayLayerRenderer::GetAvailableDecoders(){
 	std::vector<uint32_t> res;
 	res.push_back(CODEC_AVC);
+#if __MAC_OS_X_VERSION_MAX_ALLOWED >= 101300
 	if(@available(iOS 11.0, *)){
 		if(VTIsHardwareDecodeSupported(kCMVideoCodecType_HEVC)){
 			res.push_back(CODEC_HEVC);
 		}
 	}
+#endif
 	return res;
 }
diff --git a/os/darwin/TGVVideoRenderer.mm b/os/darwin/TGVVideoRenderer.mm
index f2ccbbf..859d01f 100644
--- a/os/darwin/TGVVideoRenderer.mm
+++ b/os/darwin/TGVVideoRenderer.mm
@@ -4,6 +4,7 @@
 // you should have received with this source code distribution.
 //
 
+#import <AVFoundation/AVAnimation.h>
 #import "TGVVideoRenderer.h"
 #include "SampleBufferDisplayLayerRenderer.h"
 #include "../../logging.h"
diff --git a/os/darwin/VideoToolboxEncoderSource.mm b/os/darwin/VideoToolboxEncoderSource.mm
index dc996c6..6797975 100644
--- a/os/darwin/VideoToolboxEncoderSource.mm
+++ b/os/darwin/VideoToolboxEncoderSource.mm
@@ -5,6 +5,7 @@
 //
 
 #import <Foundation/Foundation.h>
+#import <VideoToolbox/VTVideoEncoderList.h>
 #include "VideoToolboxEncoderSource.h"
 #include "../../PrivateDefines.h"
 #include "../../logging.h"
@@ -47,9 +48,11 @@ void VideoToolboxEncoderSource::Reset(uint32_t codec, int maxResolution){
 	case CODEC_AVC:
 		codecType=kCMVideoCodecType_H264;
 		break;
+#if __MAC_OS_X_VERSION_MAX_ALLOWED >= 101300
 	case CODEC_HEVC:
 		codecType=kCMVideoCodecType_HEVC;
 		break;
+#endif
 	default:
 		LOGE("VideoToolboxEncoder: Unsupported codec");
 		return;
@@ -172,7 +175,9 @@ void VideoToolboxEncoderSource::EncoderCallback(OSStatus status, CMSampleBufferR
 				b.CopyFrom(startCode, 0, 4);
 				csd.push_back(std::move(b));
 			}
-		}else if(codec==CODEC_HEVC){
+		}
+#if __MAC_OS_X_VERSION_MAX_ALLOWED >= 101300
+		else if(codec==CODEC_HEVC){
 			LOGD("here1");
 			BufferOutputStream csdBuf(1024);
 			for(size_t i=0;i<3;i++){
@@ -185,6 +190,7 @@ void VideoToolboxEncoderSource::EncoderCallback(OSStatus status, CMSampleBufferR
 			}
 			csd.push_back(std::move(csdBuf));
 		}
+#endif
 		needUpdateStreamParams=false;
 	}
 	CMBlockBufferRef blockBuffer=CMSampleBufferGetDataBuffer(buffer);
@@ -245,10 +251,12 @@ std::vector<uint32_t> VideoToolboxEncoderSource::GetAvailableEncoders(){
 		//NSString* name=(NSString*)CFDictionaryGetValue(v, kVTVideoEncoderList_EncoderName);
 		uint32_t codecType=[(NSNumber*)encoder[(NSString*)kVTVideoEncoderList_CodecType] intValue];
 		//LOGV("Encoders[%u]: %s, %c%c%c%c", i, [(NSString*)encoder[(NSString*)kVTVideoEncoderList_EncoderName] cStringUsingEncoding:NSUTF8StringEncoding], PRINT_FOURCC(codecType));
+#if __MAC_OS_X_VERSION_MAX_ALLOWED >= 101300
 		if(codecType==kCMVideoCodecType_HEVC){
 			res.push_back(CODEC_HEVC);
 			break;
 		}
+#endif
 	}
 	CFRelease(encoders);
 	return res;
diff --git a/os/posix/NetworkSocketPosix.cpp b/os/posix/NetworkSocketPosix.cpp
index 52eef76..4269eab 100644
--- a/os/posix/NetworkSocketPosix.cpp
+++ b/os/posix/NetworkSocketPosix.cpp
@@ -58,7 +58,7 @@ NetworkSocketPosix::~NetworkSocketPosix(){
 }
 
 void NetworkSocketPosix::SetMaxPriority(){
-#ifdef __APPLE__
+#if defined(__APPLE__) && defined(SO_NET_SERVICE_TYPE)
 	int prio=NET_SERVICE_TYPE_VO;
 	int res=setsockopt(fd, SOL_SOCKET, SO_NET_SERVICE_TYPE, &prio, sizeof(prio));
 	if(res<0){
