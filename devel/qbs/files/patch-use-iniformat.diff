diff --git src/lib/corelib/tools/settingscreator.cpp src/lib/corelib/tools/settingscreator.cpp
index 51c0207788bcda7782998e560ed9587cec13f453..1f162ecd200b3bf57365d62964da897059efb2cd 100644
--- src/lib/corelib/tools/settingscreator.cpp
+++ src/lib/corelib/tools/settingscreator.cpp
@@ -52,13 +52,15 @@ namespace Internal {
 
 static QSettings::Format format()
 {
-    return HostOsInfo::isWindowsHost() ? QSettings::IniFormat : QSettings::NativeFormat;
+//     return HostOsInfo::isWindowsHost() ? QSettings::IniFormat : QSettings::NativeFormat;
+    return QSettings::IniFormat;
 }
 
 
 SettingsCreator::SettingsCreator(const QString &baseDir)
     : m_settingsBaseDir(baseDir), m_qbsVersion(Version::fromString(QLatin1String(QBS_VERSION)))
 {
+    QSettings::setDefaultFormat(QSettings::IniFormat);
 }
 
 QSettings *SettingsCreator::getQSettings()
diff --git tests/auto/tools/tst_tools.cpp tests/auto/tools/tst_tools.cpp
index 0073f9e6830f1fd22f090485f6691f68de7127fb..e65555fc8a6d362bc6b60c52f4827ef8b3b05f71 100644
--- tests/auto/tools/tst_tools.cpp
+++ tests/auto/tools/tst_tools.cpp
@@ -348,7 +348,7 @@ QString TestTools::setupSettingsDir1()
     for (const Version &v : versions) {
         const QString settingsDir = baseDir->path() + "/qbs/" + v.toString();
         QSettings s(settingsDir + "/qbs.conf",
-                    HostOsInfo::isWindowsHost() ? QSettings::IniFormat : QSettings::NativeFormat);
+                    /*HostOsInfo::isWindowsHost() ? QSettings::IniFormat : QSettings::NativeFormat*/ QSettings::IniFormat);
         const QString profilesDir = settingsDir + "/profiles";
         QDir::root().mkpath(profilesDir);
         const QString magicString = v == predecessor ? "right" : "wrong";
@@ -366,7 +366,7 @@ QString TestTools::setupSettingsDir2()
     m_tmpDirs.push_back(baseDir);
     const QString settingsDir = baseDir->path();
     QSettings s(settingsDir + QLatin1String("/qbs.conf"),
-                HostOsInfo::isWindowsHost() ? QSettings::IniFormat : QSettings::NativeFormat);
+                /*HostOsInfo::isWindowsHost() ? QSettings::IniFormat : QSettings::NativeFormat*/ QSettings::IniFormat);
     const QString profilesDir = settingsDir + QLatin1String("/qbs/profiles");
     QDir::root().mkpath(profilesDir);
     QFile f(profilesDir + "/right.txt");
diff --git tests/fuzzy-test/fuzzytester.cpp tests/fuzzy-test/fuzzytester.cpp
index 37a6c56fe95d019ccc7360011a4fed7e89034a80..475840afdda9590fe4bbede7be45a31b53580e66 100644
--- tests/fuzzy-test/fuzzytester.cpp
+++ tests/fuzzy-test/fuzzytester.cpp
@@ -289,14 +289,14 @@ static QString buildableCommitsKey() { return "buildable-commits"; }
 
 void FuzzyTester::loadSettings()
 {
-    QSettings s(organization(), app());
+    QSettings s(QSettings::IniFormat, QSettings::UserScope, organization(), app());
     m_unbuildableCommits = s.value(unbuildableCommitsKey()).toStringList();
     m_buildableCommits = s.value(buildableCommitsKey()).toStringList();
 }
 
 void FuzzyTester::storeSettings() const
 {
-    QSettings s(organization(), app());
+    QSettings s(QSettings::IniFormat, QSettings::UserScope, organization(), app());
     s.setValue(unbuildableCommitsKey(), m_unbuildableCommits);
     s.setValue(buildableCommitsKey(), m_buildableCommits);
 }
