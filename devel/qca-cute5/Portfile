# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id: Portfile 128101 2014-11-13 09:19:56Z ryandesign@macports.org $

PortSystem          1.0
PortGroup           qt5 1.0
PortGroup           active_variants 1.0

#!! this should become qt5 of course
set Qt_Suffix       cute5
name                qca-${Qt_Suffix}

pre-fetch {
    ui_error "This port cannot be installed"
    return -error "not for installation"
}

# Qt version handling logic
global Qt_Major

version             2.1.0.3
set Qt_Major        5

master_sites        http://download.kde.org/stable/qca-qt5/${version}/src
checksums           rmd160  cc4040d013170ca5f21fbcefd0607daa8191d333 \
                    sha256  ab0170696a8ff87588d38a72d36d0b4b42db9080c991d1a40ceb3f8311d289f9
use_xz              yes
distname            "qca-${Qt_Suffix}-${version}"
livecheck.regex     "qca-${Qt_Suffix}-(\\d+(?:\\.\\d+)*)"

PortGroup           cmake 1.1
cmake.out_of_source yes

categories          devel crypto security
maintainers         gmail.com:rjvbertin openmaintainer
license             LGPL-2.1
description         Qt Cryptographic Architecture for Qt5
long_description \
Qt Cryptographic Architecture (for Qt5) provides an easy API for the following \
features: SSL/TLS, X509, SASL, RSA, Hashing (SHA1, MD5), Ciphers \
(BlowFish, 3DES, AES).  Functionality is supplied via plugins.\n\
This port is an alternative for port:qca+qt5 and can be coinstalled with port:qca+qt4 .

platforms           darwin

homepage            http://delta.affinix.com/qca/

# we can't co-exist with port:qca+qt5 of course
proc check_conflict {alt} {
    if {![catch {set result [active_variants ${alt} qt5 ""]}]} {
        if {${result}} {
            conflicts-append \
                    ${alt}
        }
    }
}

if {${subport} eq ${name}} {
    check_conflict  qca
    foreach virtual {"botan" "gcrypt" "logger" "nss" "softstore"} {
        check_conflict \
                    qca-${virtual}
    }
}

depends_lib-append  port:botan \
                    port:libgcrypt \
                    port:nss

# # check for standard port:qt4-mac and/or port:qt5 instead of port:qt5-kde
# if {![file exists ${prefix}/lib/pkgconfig/QtCore.pc] && ![info exists qt5.using_kde] && !${qt5.using_kde}} {
# }

# remove unnecessary Carbon #include, which fails on 10.8
patchfiles-append   patch-src_qac_systemstore_mac.cpp.diff

patchfiles-append   patch-qca-ossl.diff

# 1) it seems that configure.pre_args --prefix=${qt_dir} has the desired effect, but
# I don't know to what extent that uses an undocumented cmake feature, so use
# the exhaustive list of install variables.
# 2) the QCA plugins have been rolled into the main source tarball and are built by default
# when their dependencies are available. Allow this for all plugins that were not already
# available through an individual port; no reason to impose new dependencies on our dependents.
configure.args          -DCMAKE_INSTALL_PREFIX:PATH=${qt_dir} \
                        -DQCA_PLUGINS_INSTALL_DIR:PATH=${qt_plugins_dir} \
                        -DQCA_LIBRARY_INSTALL_DIR:PATH=${qt_libs_dir} \
                        -DQCA_BINARY_INSTALL_DIR:PATH=${qt_bins_dir} \
                        -DQCA_FEATURE_INSTALL_DIR:PATH=${qt_mkspecs_dir}/features \
                        -DQCA_INCLUDE_INSTALL_DIR:PATH=${qt_includes_dir} \
                        -DQCA_PRIVATE_INCLUDE_INSTALL_DIR:PATH=${qt_includes_dir} \
                        -DQCA_DOC_INSTALL_DIR:PATH=${qt_docs_dir} \
                        -DQCA_MAN_INSTALL_DIR:PATH=${prefix}/share/man \
                        -DPKGCONFIG_INSTALL_PREFIX:PATH=${qt_pkg_config_dir} \
                        -DOSX_FRAMEWORK:BOOL=OFF \
                        -DBUILD_PLUGINS:STRING="botan\;gcrypt\;logger\;nss\;softstore"

if {${Qt_Major} eq "5"} {
    patchfiles-append   patch-qca210-qt550.diff \
                        patch-qca210-qt56x.diff
    # makes us co-installable with the Qt4 versions
    configure.args-append \
                        -DQCA_SUFFIX:STRING="${Qt_Suffix}"
}

# allow ccache, if specified by the user
pre-build {
    if {[tbool configure.ccache]} {
        build.post_args "CCACHE=ccache"
    }
}

post-destroot {
    if {${subport} eq ${name}} {
        # install docs
        xinstall -d -m 755 ${destroot}${prefix}/share/doc/${subport}
        xinstall -m 644 -W ${worksrcpath} COPYING README TODO \
            ${destroot}${prefix}/share/doc/${subport}
    }
}

# NB: it doesn't seem possible to build this way with the new cmake-based approach
variant debug description {Build both release and debug library} {
    ui_msg "this variant is obsolete; use configure.optflags=\"-g\""
    PortGroup   obsolete 1.0
}

# avoid installing the examples into Qt's binary tree
variant examples description {Include examples in install} {
    post-destroot {
        xinstall -d -m 755 ${destroot}${prefix}/share/${subport}/examples/
        eval file copy [glob ${worksrcpath}/examples/*] \
            ${destroot}${prefix}/share/${subport}/examples/
    }
}

# NB: I haven't yet tested universal variants; those may require the muniversal portgroup
# variant universal {
#     # Add the universal flag understood by qmake
#     configure.universal_args-append --universal
# }

### The ossl, cyrus-sasl and gnupg plugins that used to be standalone ports.
### It makes more sense IMHO to implement them as subports. The other plugins
### are built together with the main port; I don't see a reason to introduce
### new subports for components that used to be built along with the main ports,
### only to impose new dependencies on the ports that require qca.
    subport ${name}-ossl {
        check_conflict          qca-ossl
        description             OpenSSL plugin for qca-qt5
        long_description        ${description}.
        license                 LGPL-2.1+
        depends_lib-append      port:${name} port:openssl
        configure.args-delete   -DBUILD_PLUGINS:STRING="botan\;gcrypt\;logger\;nss\;softstore"
        configure.args-append   -DBUILD_PLUGINS:STRING="ossl"
        build.dir               ${workpath}/build/plugins/qca-ossl
    }
    subport ${name}-cyrus-sasl {
        check_conflict          qca-cyrus-sasl
        description             Cyrus-SASL plugin for qca-qt5
        long_description        ${description}.
        license                 LGPL-2.1+
        depends_lib-append      port:${name} port:cyrus-sasl2
        configure.args-delete   -DBUILD_PLUGINS:STRING="botan\;gcrypt\;logger\;nss\;softstore"
        configure.args-append   -DBUILD_PLUGINS:STRING="cyrus-sasl"
        build.dir               ${workpath}/build/plugins/qca-cyrus-sasl
    }
    subport ${name}-gnupg {
        check_conflict          qca-gnupg
        description             GnuPG plugin for qca-qt5
        long_description        ${description}.
        license                 LGPL-2.1+
        depends_lib-append      port:${name}
        configure.args-delete   -DBUILD_PLUGINS:STRING="botan\;gcrypt\;logger\;nss\;softstore"
        configure.args-append   -DBUILD_PLUGINS:STRING="gnupg"
        build.dir               ${workpath}/build/plugins/qca-gnupg
    }
    foreach virtual {"botan" "gcrypt" "logger" "nss" "softstore"} {
        subport ${name}-${virtual} {
            description             Stub port: the ${virtual} plugin is included with ${name}
            long_description        ${description}.
            archive_sites
            distfiles
            depends_lib         port:${name}
            use_configure       no
            supported_archs     noarch
            patchfiles
            build {}
            destroot {
                set stubdir ${destroot}${prefix}/share/doc/${subport}
                xinstall -d -m 755 ${stubdir}
                system "touch ${stubdir}/this.is.a.stubport"
            }
        }
    }

livecheck.type  regex
livecheck.url   ${master_sites}
