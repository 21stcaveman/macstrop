diff --git src/plugins/coreplugin/actionmanager/actionmanager.cpp src/plugins/coreplugin/actionmanager/actionmanager.cpp
index 9b2bec82dca61a3f54f58ea420bac97b82382140..5b0cd212ed262e4eb713cbefb8c675e3227c59e5 100644
--- src/plugins/coreplugin/actionmanager/actionmanager.cpp
+++ src/plugins/coreplugin/actionmanager/actionmanager.cpp
@@ -219,6 +219,11 @@ ActionContainer *ActionManager::createMenuBar(Id id)
     if (it !=  d->m_idContainerMap.constEnd())
         return it.value();
 
+    if (!QGuiApplication::platformName().contains(QLatin1String("cocoa"))) {
+        QCoreApplication::setAttribute(Qt::AA_DontUseNativeMenuBar);
+        QCoreApplication::setAttribute(Qt::AA_MacDontSwapCtrlAndMeta);
+    }
+    QCoreApplication::setAttribute(Qt::AA_DontShowIconsInMenus);
     auto mb = new QMenuBar; // No parent (System menu bar on macOS)
     mb->setObjectName(id.toString());
 
diff --git src/plugins/coreplugin/mainwindow.cpp src/plugins/coreplugin/mainwindow.cpp
index 94bc49a7e9272720bd51997e4f758837d0b33e9e..c483658a086ac4c6b15dbba132146954e60e88b3 100644
--- src/plugins/coreplugin/mainwindow.cpp
+++ src/plugins/coreplugin/mainwindow.cpp
@@ -124,8 +124,10 @@ MainWindow::MainWindow() :
     HistoryCompleter::setSettings(PluginManager::settings());
 
     setWindowTitle(Constants::IDE_DISPLAY_NAME);
-    if (HostOsInfo::isLinuxHost())
+    if (HostOsInfo::isLinuxHost()
+            || (HostOsInfo::isMacHost() && !QGuiApplication::platformName().contains(QLatin1String("cocoa"))) ){
         QApplication::setWindowIcon(Icons::QTCREATORLOGO_BIG.icon());
+    }
     QCoreApplication::setApplicationName(QLatin1String(Constants::IDE_CASED_ID));
     QCoreApplication::setApplicationVersion(QLatin1String(Constants::IDE_VERSION_LONG));
     QCoreApplication::setOrganizationName(QLatin1String(Constants::IDE_SETTINGSVARIANT_STR));
@@ -369,6 +371,11 @@ void MainWindow::registerDefaultContainers()
 
     if (!HostOsInfo::isMacHost()) // System menu bar on Mac
         setMenuBar(menubar->menuBar());
+    else if (!QGuiApplication::platformName().contains(QLatin1String("cocoa"))){
+        setMenuBar(menubar->menuBar());
+        QCoreApplication::setAttribute(Qt::AA_MacDontSwapCtrlAndMeta);
+//        qDebug() << "Mac host which isn't using the cocoa platform: setMenuBar(" << menubar->menuBar() << ")";
+    }
     menubar->appendGroup(Constants::G_FILE);
     menubar->appendGroup(Constants::G_EDIT);
     menubar->appendGroup(Constants::G_VIEW);
