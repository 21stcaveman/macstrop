# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           qt5 1.0
PortGroup           cmake 1.1
PortGroup           github 1.0

set module          qtwebkit
set versiontag      5.212.0-alpha2
github.setup        annulen webkit ${module}-5.212.0-alpha2
github.tarball_from releases
name                qt5-webkit
# set a numeric version for "5.212.0-alpha2"
version             5.211.92

categories          devel
description         QtWebKit Reloaded
long_description    This port provides QtWebKit upgraded to the modern WebKit code base.
homepage            https://github.com/annulen/webkit/wiki
universal_variant   no

maintainers         gmail.com:rjvbertin openmaintainer
platforms           darwin linux
license             LGPL-2

# subport ${name}-devel {
#     description-append This port follows the development branch.
#     long_description-append This port follows the development branch.
# }
# 
if {${subport} eq "${name}"} {
    conflicts-append \
                    ${name}-devel

    distname        ${module}-${versiontag}
    use_xz          yes
    checksums       rmd160  33c3f7c68090fa16f72950ef85c20978432cc058 \
                    sha256  f8f901de567e11fc5659402b6b827eac75505ff9c5072d8e919aa306003f8f8a
} else {
    fetch.type      git
    git.branch      f53b6b8cfef091770dd3dccd8371420b63d89f83
    version         5.211.92.53
    distname        ${module}-git
    conflicts-append \
                    ${name}
}

# a convenience procedure to register conflicts among the different Qt5 ports:
# for instance: [qt5_port_conflicts {qtbase x11}]
# adapted from port:qt5-kde
proc qt5_port_conflicts {components} {
    global available_qt5_versions available_qt_versions name
    set cnfls {}
    if {![info exists available_qt5_versions]} {
        ui_debug "set available_qt5_versions ${available_qt_versions}"
        set available_qt5_versions ${available_qt_versions}
    }
    foreach suffix {"" "-devel"} {
        foreach comp ${components} {
            foreach v ${available_qt5_versions} {
                if {"${v}-${comp}" ne "${name}"} {
                    if {${comp} ne "" && ${comp} ne "qtbase"} {
                        set cnfls [lappend cnfls ${v}-${comp}]
                        set cnfls [lappend cnfls ${v}-kde${suffix}-${comp}]
                    } else {
                        set cnfls [lappend cnfls ${v}-qtbase]
                        set cnfls [lappend cnfls ${v}-kde${suffix}]
                    }
                }
            }
        }
    }
    return ${cnfls}
}

conflicts-append        [qt5_port_conflicts qtwebkit]

depends_lib-append      port:icu \
                        port:leveldb \
                        port:webp \
                        port:libxml2 \
                        port:libxslt \
                        port:zlib \
                        port:sqlite3
platform darwin {
    depends_lib-append  port:fontconfig \
                        port:hyphen
    depends_build-append \
                        port:bison \
                        port:perl5 \
                        port:gperf
    # we need ruby during the build; the system copy will do just
    # fine as long as it's at least v1.9 .
    depends_build-append \
                        bin:ruby:ruby19
}

qt5.depends_component   qtdeclarative \
                        qtxmlpatterns
if {![variant_isset minimal]} {
    qt5.depends_component \
                        qtlocation \
                        qtmultimedia \
                        qtsensors \
                        qtwebchannel
}

patch.pre_args          -Np1

patchfiles-append       patch-allow-osx109.diff \
                        patch-use-icu.diff

if {[info proc cmake.save_configure_cmd] ne ""} {
    cmake.save_configure_cmd "log too"
}

configure.args-append   -DENABLE_API_TESTS=OFF \
                        -DENABLE_PRINT_SUPPORT=ON \
                        -DENABLE_DEVICE_ORIENTATION=ON \
                        -DENABLE_GEOLOCATION=ON \
                        -DENABLE_JIT=ON \
                        -DENABLE_OPENGL=ON \
                        -DENABLE_WEBKIT2=ON \
                        -DENABLE_QT_WEBCHANNEL=ON \
                        -DUSE_QT_MULTIMEDIA=ON \
                        -DUSE_LIBHYPHEN=ON \
                        -DPORT=Qt

variant docs description {build the API documentation} {}
if {[variant_isset docs]} {
    configure.args-append \
                        -DGENERATE_DOCUMENTATION=ON
}

variant minimal description {build a lean & mean variant, sufficient for documentation viewing} {}
if {[variant_isset minimal]} {
    configure.args-replace \
                        -DENABLE_DEVICE_ORIENTATION=ON \
                        -DENABLE_DEVICE_ORIENTATION=OFF
    configure.args-replace \
                        -DENABLE_GEOLOCATION=ON \
                        -DENABLE_GEOLOCATION=OFF
    configure.args-replace \
                        -DENABLE_JIT=ON \
                        -DENABLE_JIT=OFF
    configure.args-replace \
                        -DENABLE_WEBKIT2=ON \
                        -DENABLE_WEBKIT2=OFF
    configure.args-replace \
                        -DENABLE_QT_WEBCHANNEL=ON \
                        -DENABLE_QT_WEBCHANNEL=OFF
    configure.args-replace \
                        -DUSE_QT_MULTIMEDIA=ON \
                        -DUSE_QT_MULTIMEDIA=OFF
    
}

if {[variant_exists qt5kde] && [variant_isset qt5kde]} {
    variant x11 description {build the X11 target} {}
    if {[variant_isset x11]} {
        configure.args-append \
                        -DENABLE_X11_TARGET=ON
        depends_lib-append \
                        path:${qt_frameworks_dir}/QtX11Extras.framework/QtX11Extras:qt5-kde-x11
    }
}

configure.args-append   -DCMAKE_MACOSX_RPATH=ON

platform darwin 13 {
    set macosx_deployment_target 10.10
    if {[catch {configure.sdkroot [exec xcrun --show-sdk-path -sdk macosx10.10]} result]} {
        ui_error "The SDK macosx10.10 is required on Mac OS X 10.9: ${result}"
        return -code error "Missing 10.10 SDK"
    } else {
        ui_debug "Using SDK macosx10.10 (${configure.sdkroot}): ${result}"
    }
}
