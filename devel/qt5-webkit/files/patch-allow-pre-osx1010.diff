diff --git a/Source/WTF/wtf/OSObjectPtr.h b/Source/WTF/wtf/OSObjectPtr.h
index ed7eceb92c4d445767cff2379b1ab9539f38692b..3bfd1edf1ea7fca1519bb29070b9822b683ee84f 100644
--- a/Source/WTF/wtf/OSObjectPtr.h
+++ b/Source/WTF/wtf/OSObjectPtr.h
@@ -30,6 +30,11 @@
 #include <wtf/Assertions.h>
 #include <wtf/StdLibExtras.h>
 
+#if (defined(__MAC_OS_X_VERSION_MIN_REQUIRED) && __MAC_OS_X_VERSION_MIN_REQUIRED < 101000) \
+        || (defined(__IPHONE_OS_VERSION_MIN_REQUIRED) && __IPHONE_OS_VERSION_MIN_REQUIRED < 80000)
+#include <CoreFoundation/CoreFoundation.h>
+#endif
+
 namespace WTF {
 
 template<typename T> class OSObjectPtr;
@@ -38,13 +43,25 @@ template<typename T> OSObjectPtr<T> adoptOSObject(T);
 template<typename T>
 static inline void retainOSObject(T ptr)
 {
+#if (defined(__MAC_OS_X_VERSION_MIN_REQUIRED) && __MAC_OS_X_VERSION_MIN_REQUIRED < 101000) \
+        || (defined(__IPHONE_OS_VERSION_MIN_REQUIRED) && __IPHONE_OS_VERSION_MIN_REQUIRED < 80000)
+    if (ptr)
+        CFRetain(ptr);
+#else
     os_retain(ptr);
+#endif
 }
 
 template<typename T>
 static inline void releaseOSObject(T ptr)
 {
+#if (defined(__MAC_OS_X_VERSION_MIN_REQUIRED) && __MAC_OS_X_VERSION_MIN_REQUIRED < 101000) \
+        || (defined(__IPHONE_OS_VERSION_MIN_REQUIRED) && __IPHONE_OS_VERSION_MIN_REQUIRED < 80000)
+    if (ptr)
+        CFRelease(ptr);
+#else
     os_release(ptr);
+#endif
 }
 
 template<typename T> class OSObjectPtr {
--- qtwebkit-5.212.0-alpha2/Source/cmake/orig.OptionsQt.cmake	2017-06-16 01:36:48.000000000 +0200
+++ qtwebkit-5.212.0-alpha2/Source/cmake/OptionsQt.cmake	2017-11-12 02:37:35.000000000 +0100
@@ -317,9 +317,9 @@
     message(FATAL_ERROR "MSVC 2015 is required to build QtWebKit, use a newer MSVC version")
 endif ()
 
-if (APPLE AND CMAKE_SYSTEM_VERSION VERSION_LESS 14.0.0)
-    message(FATAL_ERROR "macOS 10.10 or higher is required to build and run QtWebKit")
-endif ()
+# if (APPLE AND CMAKE_SYSTEM_VERSION VERSION_LESS 14.0.0)
+#     message(FATAL_ERROR "macOS 10.10 or higher is required to build and run QtWebKit")
+# endif ()
 
 set(ENABLE_WEBKIT ON)
 set(WTF_USE_UDIS86 1)
@@ -505,7 +504,7 @@
 
 # Mach ports and Unix sockets are currently used by WK2, but their USE() values
 # affect building WorkQueue
-if (APPLE)
+if (APPLE AND NOT USE_UNIX_DOMAIN_SOCKETS)
     SET_AND_EXPOSE_TO_BUILD(USE_MACH_PORTS 1) # Qt-specific
 elseif (UNIX)
     SET_AND_EXPOSE_TO_BUILD(USE_UNIX_DOMAIN_SOCKETS 1)
@@ -578,8 +577,10 @@
     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fno-keep-inline-dllexport")
 endif ()
 
-if (APPLE)
+if (APPLE AND CMAKE_SYSTEM_VERSION VERSION_GREATER_EQUAL 14.0.0)
     SET_AND_EXPOSE_TO_BUILD(HAVE_QOS_CLASSES 1)
+else ()
+    SET_AND_EXPOSE_TO_BUILD(HAVE_QOS_CLASSES 0)
 endif ()
 
 if (ENABLE_MATHML)
diff --git a/Source/WTF/wtf/OSObjectPtr.h b/Source/WTF/wtf/OSObjectPtr.h
index ed7eceb92c4d445767cff2379b1ab9539f38692b..535b4d1196cef4460efc1b47f48f31d1f4f2f931 100644
--- a/Source/WTF/wtf/OSObjectPtr.h
+++ b/Source/WTF/wtf/OSObjectPtr.h
@@ -38,13 +38,25 @@ template<typename T> OSObjectPtr<T> adoptOSObject(T);
 template<typename T>
 static inline void retainOSObject(T ptr)
 {
+#if (defined(__MAC_OS_X_VERSION_MIN_REQUIRED) && __MAC_OS_X_VERSION_MIN_REQUIRED < 101000) \
+        || (defined(__IPHONE_OS_VERSION_MIN_REQUIRED) && __IPHONE_OS_VERSION_MIN_REQUIRED < 80000)
+    if (ptr)
+        CFRetain(ptr);
+#else
     os_retain(ptr);
+#endif
 }
 
 template<typename T>
 static inline void releaseOSObject(T ptr)
 {
+#if (defined(__MAC_OS_X_VERSION_MIN_REQUIRED) && __MAC_OS_X_VERSION_MIN_REQUIRED < 101000) \
+        || (defined(__IPHONE_OS_VERSION_MIN_REQUIRED) && __IPHONE_OS_VERSION_MIN_REQUIRED < 80000)
+    if (ptr)
+        CFRelease(ptr);
+#else
     os_release(ptr);
+#endif
 }
 
 template<typename T> class OSObjectPtr {
