diff --git a/src/libs/core/application.cpp b/src/libs/core/application.cpp
index 4083599987c0156514df57547d1d8fe927084fc2..b2ad2cf99c633353fb84a7a5f6c724cd9bc938b0 100644
--- a/src/libs/core/application.cpp
+++ b/src/libs/core/application.cpp
@@ -183,9 +183,9 @@ void Application::checkForUpdates(bool quiet)
         const QJsonObject latestVersionInfo = jsonDoc.array().first().toObject();
         const Util::Version latestVersion = latestVersionInfo[QStringLiteral("version")].toString();
         if (latestVersion > Util::Version(QCoreApplication::applicationVersion()))
-            emit updateCheckDone(latestVersion.toString());
+            emit updateCheckDone(latestVersion.toString(), quiet);
         else if (!quiet)
-            emit updateCheckDone();
+            emit updateCheckDone(QString(), quiet);
     });
 }
 
diff --git a/src/libs/core/application.h b/src/libs/core/application.h
index 1a90d590a0cce31db1630eaf9a90525f8a7feb6f..704e36837951e4f27b90b9a09f391cffbae3017c 100644
--- a/src/libs/core/application.h
+++ b/src/libs/core/application.h
@@ -70,7 +70,7 @@ signals:
     void extractionCompleted(const QString &filePath);
     void extractionError(const QString &filePath, const QString &errorString);
     void extractionProgress(const QString &filePath, qint64 extracted, qint64 total);
-    void updateCheckDone(const QString &version = QString());
+    void updateCheckDone(const QString &version = QString(), bool quiet = false);
     void updateCheckError(const QString &message);
 
 private slots:
diff --git a/src/libs/ui/mainwindow.cpp b/src/libs/ui/mainwindow.cpp
index b970a0fd7997fbebe9591e712bb239e7a3db20e3..1e8dfeb128c3e6beeeb5e730e68c3c1f95f50be0 100644
--- a/src/libs/ui/mainwindow.cpp
+++ b/src/libs/ui/mainwindow.cpp
@@ -230,22 +230,26 @@ MainWindow::MainWindow(Core::Application *app, QWidget *parent) :
         QMessageBox::warning(this, QStringLiteral("Zeal"), message);
     });
 
-    connect(m_application, &Core::Application::updateCheckDone, [this](const QString &version) {
+    connect(m_application, &Core::Application::updateCheckDone, [this](const QString &version, bool quiet) {
         if (version.isEmpty()) {
             QMessageBox::information(this, QStringLiteral("Zeal"),
-                                     tr("You are using the latest version."));
+                                     tr("You are using the latest version (%1).").arg(QCoreApplication::applicationVersion()));
             return;
         }
 
-        const int ret
+        if (quiet) {
+            qInfo() << tr("Zeal %1 is available.").arg(version);
+        } else {
+            const int ret
                 = QMessageBox::information(this, QStringLiteral("Zeal"),
                                            tr("Zeal <b>%1</b> is available. Open download page?").arg(version),
                                            QMessageBox::Yes | QMessageBox::Default,
                                            QMessageBox::No | QMessageBox::Escape,
                                            QMessageBox::NoButton);
-        if (ret == QMessageBox::Yes)
-            QDesktopServices::openUrl(QUrl(QStringLiteral("https://zealdocs.org/download.html")));
-    });
+            if (ret == QMessageBox::Yes)
+                QDesktopServices::openUrl(QUrl(QStringLiteral("https://zealdocs.org/download.html")));
+        }
+     });
 
     m_backMenu = new QMenu(ui->backButton);
     connect(m_backMenu, &QMenu::aboutToShow, this, [this]() {
