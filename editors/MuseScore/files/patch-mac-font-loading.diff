diff --git a/libmscore/mscore.cpp b/libmscore/mscore.cpp
index 1ddd0e45d481b158f80923f527abe60627b8d0df..5530f87cd9894410b4689e3c0f53a92406cd9ab7 100644
--- a/libmscore/mscore.cpp
+++ b/libmscore/mscore.cpp
@@ -57,6 +57,10 @@
 #include "barline.h"
 #include "skyline.h"
 
+#ifdef Q_OS_MAC
+#include <QDir>
+#endif
+
 namespace Ms {
 
 bool MScore::debugMode = false;
@@ -377,6 +381,26 @@ void MScore::init()
                         exit(-1);
                   }
             }
+#else
+    // load the fonts from Contents/Resources/fonts
+    // so that we get normal function with all font engines as well as with the XCB QPA
+
+      extern QString getSharePath();
+      const auto fontsDir = getSharePath() + QStringLiteral("fonts/");
+      const auto fontsList = QDir(fontsDir).entryList(
+              {QStringLiteral("*.ttf"), QStringLiteral("*.otf")}, QDir::Files);
+      for (const auto &fnt : fontsList) {
+            int id;
+            if (-1 == (id = QFontDatabase::addApplicationFont(fontsDir + fnt))) {
+                  qWarning() << "Mscore: fatal error: cannot load internal font" << fontsDir + fnt;
+                  if (!MScore::debugMode && !MScore::testMode) {
+                        exit(-1);
+                  }
+            } else if (MScore::debugMode || MScore::testMode) {
+                qDebug() << "Families in" << fontsDir + fnt << ":"
+                    << QFontDatabase::applicationFontFamilies(id);
+            }
+      }
 #endif
 // Workaround for QTBUG-73241 (solved in Qt 5.12.2) in Windows 10, see https://musescore.org/en/node/280244
 #if defined(Q_OS_WIN) && (QT_VERSION < QT_VERSION_CHECK(5, 12, 2))
diff --git a/libmscore/sym.cpp b/libmscore/sym.cpp
index 4bec1e4d1b4caf9b8b233e9efb338ff0092dd9ea..59e64518cf83666127ea6c15029b37634e0f0198 100644
--- a/libmscore/sym.cpp
+++ b/libmscore/sym.cpp
@@ -17,6 +17,8 @@
 #include "xml.h"
 #include "mscore.h"
 
+#include <QFontDatabase>
+
 #include FT_GLYPH_H
 #include FT_IMAGE_H
 #include FT_BBOX_H
@@ -5703,17 +5705,30 @@ void ScoreFont::draw(SymId id, QPainter* painter, const QSizeF& mag, const QPoin
             }
       int rv = FT_Load_Glyph(face, sym(id).index(), FT_LOAD_DEFAULT);
       if (rv) {
-            qDebug("load glyph id %d, failed: 0x%x", int(id), rv);
+            qCritical("load glyph id %d (family %s, filename %s) failed: 0x%x",
+                      int(id), qPrintable(_family), qPrintable(_filename), rv);
             return;
             }
 
       if (MScore::pdfPrinting) {
             if (font == 0) {
+#ifdef Q_OS_MAC
+                  // On Mac we add the application font from the Resources/fonts directory
+                  // (addApplicationFont() can crash when loading a font from the embedded Qt resource)
+                  extern QString getSharePath();
+                  QString s(getSharePath() + QStringLiteral("fonts/") + _filename);
+#else
                   QString s(_fontPath+_filename);
-                  if (-1 == QFontDatabase::addApplicationFont(s)) {
-                        qDebug("Mscore: fatal error: cannot load internal font <%s>", qPrintable(s));
+#endif
+                  int id;
+                  if (-1 == (id = QFontDatabase::addApplicationFont(s))) {
+                        qCritical("Mscore: fatal error: cannot load internal font <%s>", qPrintable(s));
                         return;
                         }
+                    else if (MScore::debugMode || MScore::testMode) {
+                        qDebug() << "Looking for family" << _family << "; found in" << s << ":"
+                            << QFontDatabase::applicationFontFamilies(id);
+                    }
                   font = new QFont;
                   font->setWeight(QFont::Normal);
                   font->setItalic(false);
@@ -5916,7 +5931,7 @@ void ScoreFont::computeMetrics(Sym* sym, int code)
                         }
                   }
             else
-                  qDebug("load glyph failed");
+                  qWarning("load glyph failed");
             }
 //      else
 //            qDebug("no index");
@@ -5928,16 +5943,22 @@ void ScoreFont::computeMetrics(Sym* sym, int code)
 
 void ScoreFont::load()
       {
+#ifdef Q_OS_MAC
+      // On Mac the application fonts are in the Resources/fonts directory
+      extern QString getSharePath();
+      QString facePath(getSharePath() + QStringLiteral("fonts/") + _filename);
+#else
       QString facePath = _fontPath + _filename;
+#endif
       QFile f(facePath);
       if (!f.open(QIODevice::ReadOnly)) {
-            qDebug("ScoreFont::load(): open failed <%s>", qPrintable(facePath));
+            qWarning("ScoreFont::load(): open failed <%s>", qPrintable(facePath));
             return;
             }
       fontImage = f.readAll();
       int rval = FT_New_Memory_Face(ftlib, (FT_Byte*)fontImage.data(), fontImage.size(), 0, &face);
       if (rval) {
-            qDebug("freetype: cannot create face <%s>: %d", qPrintable(facePath), rval);
+            qWarning("freetype: cannot create face <%s>: %d", qPrintable(facePath), rval);
             return;
             }
       cache = new QCache<GlyphKey, GlyphPixmap>(100);
@@ -5957,10 +5978,10 @@ void ScoreFont::load()
       QJsonParseError error;
       QFile fi(_fontPath + "metadata.json");
       if (!fi.open(QIODevice::ReadOnly))
-            qDebug("ScoreFont: open glyph metadata file <%s> failed", qPrintable(fi.fileName()));
+            qWarning("ScoreFont: open glyph metadata file <%s> failed", qPrintable(fi.fileName()));
       QJsonObject metadataJson = QJsonDocument::fromJson(fi.readAll(), &error).object();
       if (error.error != QJsonParseError::NoError)
-            qDebug("Json parse error in <%s>(offset: %d): %s", qPrintable(fi.fileName()),
+            qWarning("Json parse error in <%s>(offset: %d): %s", qPrintable(fi.fileName()),
                error.offset, qPrintable(error.errorString()));
 
       QJsonObject oo = metadataJson.value("glyphsWithAnchors").toObject();
diff --git a/main/CMakeLists.txt b/main/CMakeLists.txt
index 9cb14c94047b53fdf3cb7b76e3f3835e81844ca8..be9b09397bdc44e42fda4c213b5489620f0eff5a 100644
--- a/main/CMakeLists.txt
+++ b/main/CMakeLists.txt
@@ -492,18 +492,22 @@ endif (MINGW)
 
 if (APPLE)
      install (FILES
-      ../fonts/gootville/GootvilleText.otf
-      ../fonts/mscore/MScoreText.ttf
-      ../fonts/musejazz/MuseJazzText.otf
+      ../fonts/bravura/Bravura.otf
+      ../fonts/bravura/BravuraText.otf
       ../fonts/campania/Campania.otf
       ../fonts/FreeSerif.ttf
       ../fonts/FreeSerifBold.ttf
       ../fonts/FreeSerifItalic.ttf
       ../fonts/FreeSerifBoldItalic.ttf
       ../fonts/FreeSans.ttf
+      ../fonts/gootville/Gootville.otf
+      ../fonts/gootville/GootvilleText.otf
+      ../fonts/mscore/mscore.ttf
+      ../fonts/mscore/MScoreText.ttf
       ../fonts/mscoreTab.ttf
       ../fonts/mscore-BC.ttf
-      ../fonts/bravura/BravuraText.otf
+      ../fonts/musejazz/MuseJazz.otf
+      ../fonts/musejazz/MuseJazzText.otf
      DESTINATION ${Mscore_SHARE_NAME}${Mscore_INSTALL_NAME}fonts
      )
      install(DIRECTORY
diff --git a/main/main.cpp b/main/main.cpp
index 1a5b79f6a578791b9d47b37dc4ea43b70c950baa..30004cc31f0fd642df9b2e912f355c6875065496 100644
--- a/main/main.cpp
+++ b/main/main.cpp
@@ -32,7 +32,8 @@ static void initResources()
 #ifdef Q_OS_MAC
       Q_INIT_RESOURCE(musescore);
       Q_INIT_RESOURCE(qml);
-      Q_INIT_RESOURCE(musescorefonts_Mac);
+      // All fonts are installed in the Resources/fonts folder of the app bundle
+//       Q_INIT_RESOURCE(musescorefonts_Mac);
       Q_INIT_RESOURCE(shortcut_Mac);
 #else
       Q_INIT_RESOURCE(musescore);
diff --git a/mscore/CMakeLists.txt b/mscore/CMakeLists.txt
index a2e1dce4e28dc12f3855720887232d76f74ac8ac..5c006ea47af7abd68f0cf94a8b7a6cabf9fc768d 100644
--- a/mscore/CMakeLists.txt
+++ b/mscore/CMakeLists.txt
@@ -99,7 +99,9 @@ QT5_WRAP_UI (ui_headers
 if (APPLE)
       QT5_ADD_RESOURCES (qrc_files musescore.qrc
             qml.qrc # TODO: replace with qtquick_compiler_add_resources on Qt >= 5.11
-            musescorefonts-Mac.qrc shortcut-Mac.qrc
+            # all fonts are now installed in the app bundle's Resources/fonts folder
+            #musescorefonts-Mac.qrc
+            shortcut-Mac.qrc
             )
 else (APPLE)
       QT5_ADD_RESOURCES (qrc_files musescore.qrc
