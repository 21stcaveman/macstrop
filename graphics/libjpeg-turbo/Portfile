# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
PortSystem          1.0
PortGroup           cmake 1.1
cmake.save_configure_cmd "log too"
PortGroup           github 1.0
PortGroup           muniversal 1.0

github.setup        libjpeg-turbo libjpeg-turbo 2.0.4
checksums           rmd160  83f073615a13198f6fedf0a1cdfb4b1713c858d1 \
                    sha256  63366c34a89e0739a87d4aa36a473b5a5d98f8c8ab77cc027e5f1181f4997a7e
#                     size    2161945
# revision            0


name                libjpeg-turbo
conflicts           mozjpeg
# port:jpeg from MacStrop can co-install with libjpeg-turbo (which will
# then be used for linking any new software built).
if {![catch {set result [active_variants jpeg "" transitional]}]} {
    if {!${result}} {
        conflicts-append \
                    jpeg
    }
}

version             2.0.4
categories          graphics
platforms           darwin linux
license             BSD
maintainers         {larryv @larryv}

description         SIMD-accelerated libjpeg-compatible JPEG codec \
                    library
long_description    libjpeg-turbo is a JPEG image codec that uses SIMD \
                    instructions (MMX, SSE2, NEON) to accelerate \
                    baseline JPEG compression and decompression on \
                    x86, x86-64, and ARM systems. On such systems, \
                    libjpeg-turbo is generally 2-6x as fast as \
                    libjpeg, all else being equal. On other types of \
                    systems, libjpeg-turbo can still outperform \
                    libjpeg by a significant amount, by virtue of its \
                    highly-optimized Huffman coding routines. In many \
                    cases, the performance of libjpeg-turbo rivals \
                    that of proprietary high-speed JPEG codecs.
homepage            http://www.${name}.org

platform darwin {
    depends_build-append \
                    port:nasm
    configure.env   ASM_NASM=${prefix}/bin/nasm
}

# give libjpeg the same compatibility version as it had in the autoconf builds (i.e. 10 instead of 8)
patchfiles-append   patch-libjpeg-compatversion.diff

configure.args      -DWITH_JPEG8=1

post-destroot {
    if {${os.platform} eq "darwin"} {
        ln -s libjpeg.10.dylib ${destroot}${prefix}/lib/libjpeg.8.dylib
    } else {
        ln -s libjpeg.so.10 ${destroot}${prefix}/lib/libjpeg.so.8
    }
}

# disabled because tests fail with linking problems and MD5 failure
test.run            no
test.env            CTEST_OUTPUT_ON_FAILURE=1
