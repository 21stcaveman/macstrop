diff --git gtk2/common/config_file.c gtk2/common/config_file.c
index f8ed1ba..ac900d5 100644
--- gtk2/common/config_file.c
+++ gtk2/common/config_file.c
@@ -31,7 +31,7 @@
 #define OLD_CONFIG_FILE           "qtcurvestylerc"
 #define VERSION_KEY               "version"
 
-#if defined(__MACH__) || defined(darwin)
+#if defined(__MACH__) || defined(__APPLE__)
 /* This code is public domain -- Will Hartung 4/9/09 */
 // http://stackoverflow.com/questions/735126/are-there-alternate-implementations-of-gnu-getline-interface
 #include <stdio.h>
diff --git gtk2/style/qt_settings.c gtk2/style/qt_settings.c
index 00bc7c5..e4671eb 100644
--- gtk2/style/qt_settings.c
+++ gtk2/style/qt_settings.c
@@ -49,7 +49,7 @@ Options opts;
 #define qtc_gtkrc_printf(args...)                       \
     gtk_rc_parse_string(QTC_LOCAL_BUFF_PRINTF(args))
 
-#if defined(__MACH__) || defined(darwin)
+    #if defined(__MACH__) || defined(__APPLE__)
 /* This code is public domain -- Will Hartung 4/9/09 */
 // http://stackoverflow.com/questions/735126/are-there-alternate-implementations-of-gnu-getline-interface
 #include <stdio.h>
diff --git lib/utils/color.h lib/utils/color.h
index 2c7081f..b8aae3c 100644
--- lib/utils/color.h
+++ lib/utils/color.h
@@ -25,6 +25,12 @@
 
 #include "utils.h"
 #include "options.h"
+#ifdef Q_OS_MAC
+#include <math.h>
+#if QT_VERSION >= 0x050000
+#define isnan(x)  std::isnan(x)
+#endif //QT_VERSION
+#endif // Q_OS_MAC
 
 QTC_BEGIN_DECLS
 
diff --git lib/utils/map.c lib/utils/map.c
index a829e9e..136a7d7 100644
--- lib/utils/map.c
+++ lib/utils/map.c
@@ -21,6 +21,16 @@
 
 #include "map.h"
 
+#if defined(__MACH__) || defined(__APPLE__)
+qtcStrMapItemCompare(void *_map, const void *_left, const void *_right)
+{
+    const char **left = (const char**)_left;
+    const char **right = (const char**)_right;
+    QtcStrMap *map = (QtcStrMap*)_map;
+    return (map->case_sensitive ? strcmp(*left, *right) :
+                strcasecmp(*left, *right));
+}
+#else
 static int
 qtcStrMapItemCompare(const void *_left, const void *_right, void *_map)
 {
@@ -30,13 +40,19 @@ qtcStrMapItemCompare(const void *_left, const void *_right, void *_map)
     return (map->case_sensitive ? strcmp(*left, *right) :
             strcasecmp(*left, *right));
 }
+#endif
 
 QTC_EXPORT void
 qtcStrMapInit(QtcStrMap *map)
 {
     QTC_RET_IF_FAIL(map && !map->inited && map->items && map->size && map->num);
+#if defined(__MACH__) || defined(__APPLE__)
+    qsort_r(map->items, map->num, map->size,
+            map, qtcStrMapItemCompare);
+#else
     qsort_r(map->items, map->num, map->size,
             qtcStrMapItemCompare, map);
+#endif
     map->inited = true;
 }
 
diff --git lib/utils/timer.c lib/utils/timer.c
index 84d058f..4687ea7 100644
--- lib/utils/timer.c
+++ lib/utils/timer.c
@@ -35,14 +35,14 @@
 static mach_timebase_info_data_t sTimebaseInfo;
 static double calibrator= 0;
 
-#include <stdio.h>
+// #include <stdio.h>
 __attribute__((constructor)) static void init_HRTime()
 {
     if( !calibrator ){
         mach_timebase_info(&sTimebaseInfo);
         /* go from absolute time units to nanoseconds: */
         calibrator= ((double)sTimebaseInfo.numer / (double)sTimebaseInfo.denom);
-        fprintf( stderr, "init_HRTime(): calibrator=%g\n", calibrator );
+//         fprintf( stderr, "init_HRTime(): calibrator=%g\n", calibrator );
     }
 }
 
diff --git qt4/style/qtcurve.cpp qt4/style/qtcurve.cpp
index fa2036a..e7129ba 100644
--- qt4/style/qtcurve.cpp
+++ qt4/style/qtcurve.cpp
@@ -581,6 +581,8 @@ setOpacityProp(QWidget *w, unsigned short opacity)
     if (WId wid = qtcGetWid(w->window())) {
 #ifdef Q_WS_X11
         qtcX11SetOpacity(wid, opacity);
+#else
+        w->setWindowOpacity( 0.01 * opacity );
 #endif
     }
 }
diff --git qt5/CMakeLists.txt qt5/CMakeLists.txt
index 1d0359e..226210d 100644
--- qt5/CMakeLists.txt
+++ qt5/CMakeLists.txt
@@ -13,7 +13,9 @@ if(ENABLE_QT5)
     set(QTC_QT5_DEFS ${QTC_QT5_DEFS} ${${QtModule}_DEFINITIONS})
     set(QTC_QT5_INCLUDES ${QTC_QT5_INCLUDES} ${${QtModule}_INCLUDE_DIRS})
   endforeach()
+if(NOT APPLE)
   set(QTC_QT5_OPT_MODULES Qt5X11Extras)
+endif(NOT APPLE)
   foreach(QtModule ${QTC_QT5_OPT_MODULES})
     find_package(${QtModule})
     if(${QtModule}_FOUND)
