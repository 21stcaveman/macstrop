diff --git qt4/style/qtcurve.cpp qt4/style/qtcurve.cpp
index 059d906..208d115 100644
--- qt4/style/qtcurve.cpp
+++ qt4/style/qtcurve.cpp
@@ -138,6 +138,13 @@ extern QString (*qt_filedialog_save_filename_hook)(
     const QString &filter, QString *selectedFilter,
     QFileDialog::Options options);
 
+#ifndef Q_OS_MAC
+#define POPUP_MENUS_SQUARE(opts)    ((opts).square & SQUARE_POPUP_MENUS)
+#else
+// prevent a rendering glitch in popup menus:
+#define POPUP_MENUS_SQUARE(opts)    true
+#endif
+
 namespace QtCurve {
 
 #if defined FIX_DISABLED_ICONS && defined QTC_QT4_ENABLE_KDE
@@ -1875,7 +1882,7 @@ Style::polish(QWidget *widget)
                 QPalette pal(widget->palette());
                 QColor col(popupMenuCols()[ORIGINAL_SHADE]);
 
-                if(!qtcIsFlatBgnd(opts.menuBgndAppearance) || 100!=opts.menuBgndOpacity || !(opts.square&SQUARE_POPUP_MENUS))
+                if(!qtcIsFlatBgnd(opts.menuBgndAppearance) || 100!=opts.menuBgndOpacity || !POPUP_MENUS_SQUARE(opts))
                     col.setAlphaF(0);
 
                 pal.setBrush(QPalette::Active, QPalette::Base, col);
@@ -1889,7 +1896,7 @@ Style::polish(QWidget *widget)
     if (qobject_cast<QMenu*>(widget)) {
         if (!qtcIsFlatBgnd(opts.menuBgndAppearance) ||
             opts.menuBgndOpacity != 100 ||
-            !(opts.square & SQUARE_POPUP_MENUS)) {
+            !POPUP_MENUS_SQUARE(opts)) {
             widget->installEventFilter(this);
             // Set WA_NoSystemBackground or a square background will be drawn.
             widget->setAttribute(Qt::WA_NoSystemBackground);
@@ -1909,7 +1916,7 @@ Style::polish(QWidget *widget)
     }
 
     if ((!qtcIsFlatBgnd(opts.menuBgndAppearance) ||
-         opts.menuBgndOpacity != 100 || !(opts.square & SQUARE_POPUP_MENUS)) &&
+         opts.menuBgndOpacity != 100 || !POPUP_MENUS_SQUARE(opts)) &&
         widget->inherits("QComboBoxPrivateContainer")) {
         widget->installEventFilter(this);
         // Set WA_NoSystemBackground or a square background will be drawn.
@@ -2296,7 +2303,7 @@ void Style::unpolish(QWidget *widget)
     }
 
     if ((!qtcIsFlatBgnd(opts.menuBgndAppearance) ||
-         100 != opts.menuBgndOpacity || !(opts.square & SQUARE_POPUP_MENUS)) &&
+         100 != opts.menuBgndOpacity || !POPUP_MENUS_SQUARE(opts)) &&
         widget->inherits("QComboBoxPrivateContainer")) {
         widget->setAttribute(Qt::WA_NoSystemBackground, false);
         widget->clearMask();
@@ -2453,7 +2460,7 @@ bool Style::eventFilter(QObject *object, QEvent *event)
         case QEvent::Move:
             return false; // just for performance - they can occur really often
         case QEvent::Resize:
-            if (!(opts.square & SQUARE_POPUP_MENUS) &&
+            if (!POPUP_MENUS_SQUARE(opts) &&
                 object->inherits("QComboBoxPrivateContainer")) {
                 QWidget *widget = static_cast<QWidget*>(object);
                 if (Utils::hasAlphaChannel(widget)) {
@@ -2521,7 +2528,7 @@ bool Style::eventFilter(QObject *object, QEvent *event)
             if ((!qtcIsFlatBgnd(opts.menuBgndAppearance) ||
                  opts.menuBgndImage.type != IMG_NONE ||
                  opts.menuBgndOpacity != 100 ||
-                 !(opts.square & SQUARE_POPUP_MENUS)) &&
+                 !POPUP_MENUS_SQUARE(opts)) &&
                 (qobject_cast<QMenu*>(object) ||
                  (object->inherits("QComboBoxPrivateContainer")))) {
                 QWidget *widget = qtcToWidget(object);
@@ -2542,7 +2549,7 @@ bool Style::eventFilter(QObject *object, QEvent *event)
                     p.drawPath(buildPath(r, WIDGET_OTHER, ROUNDED_ALL, radius));
                     p.setRenderHint(QPainter::Antialiasing, false);
                 }
-                if (!(opts.square & SQUARE_POPUP_MENUS)) // && !isCombo)
+                if (!POPUP_MENUS_SQUARE(opts)) // && !isCombo)
                     p.setClipRegion(windowMask(r, opts.round > ROUND_SLIGHT),
                                     Qt::IntersectClip);
 
@@ -2560,7 +2567,7 @@ bool Style::eventFilter(QObject *object, QEvent *event)
                     p.setPen(use[QTC_STD_BORDER]);
                     // For now dont round combos - getting weird effects with
                     // shadow/clipping in Gtk2 style :-(
-                    if (opts.square & SQUARE_POPUP_MENUS) {
+                    if (POPUP_MENUS_SQUARE(opts)) {
                         drawRect(&p, r);
                     } else {
                         p.setRenderHint(QPainter::Antialiasing, true);
@@ -2574,11 +2581,11 @@ bool Style::eventFilter(QObject *object, QEvent *event)
 
                         p.setPen(use[0]);
                         if (border == GB_LIGHT) {
-                            if(opts.square&SQUARE_POPUP_MENUS) // || isCombo)
+                            if(POPUP_MENUS_SQUARE(opts)) // || isCombo)
                                 drawRect(&p, ri);
                             else
                                 p.drawPath(buildPath(ri, WIDGET_OTHER, ROUNDED_ALL, radius-1.0));
-                        } else if (opts.square & SQUARE_POPUP_MENUS) {
+                        } else if (POPUP_MENUS_SQUARE(opts)) {
                             if (GB_3D != border) {
                                 p.drawLine(ri.x(), ri.y(),
                                            ri.x() + ri.width() - 1,  ri.y());
@@ -2680,7 +2687,7 @@ bool Style::eventFilter(QObject *object, QEvent *event)
                     m_timer.start();
                     m_progressBarAnimateTimer = startTimer(1000 / constProgressBarFps);
                 }
-            } else if(!(opts.square & SQUARE_POPUP_MENUS) &&
+            } else if(!POPUP_MENUS_SQUARE(opts) &&
                       object->inherits("QComboBoxPrivateContainer")) {
                 QWidget *widget = static_cast<QWidget*>(object);
                 if (Utils::hasAlphaChannel(widget)) {
@@ -2928,7 +2935,7 @@ int Style::pixelMetric(PixelMetric metric, const QStyleOption *option, const QWi
             return 0;
         case PM_DefaultFrameWidth:
             if ((/*!opts.popupBorder || */opts.gtkComboMenus) && widget && widget->inherits("QComboBoxPrivateContainer"))
-                return opts.gtkComboMenus ? (opts.borderMenuitems || !(opts.square&SQUARE_POPUP_MENUS) ? 2 : 1) : 0;
+                return opts.gtkComboMenus ? (opts.borderMenuitems || !POPUP_MENUS_SQUARE(opts) ? 2 : 1) : 0;
 
             if ((!opts.gtkScrollViews || (opts.square&SQUARE_SCROLLVIEW)) && isKateView(widget))
                 return (opts.square&SQUARE_SCROLLVIEW) ? 1 : 0;
@@ -2942,7 +2949,7 @@ int Style::pixelMetric(PixelMetric metric, const QStyleOption *option, const QWi
                     (!opts.highlightScrollViews) ? 1 : 2;
 
             if (!qtcDrawMenuBorder(opts) && !opts.borderMenuitems &&
-                opts.square & SQUARE_POPUP_MENUS &&
+                POPUP_MENUS_SQUARE(opts) &&
                 qobject_cast<const QMenu*>(widget)) {
                 return 1;
             }
@@ -3114,7 +3121,7 @@ int Style::styleHint(StyleHint hint, const QStyleOption *option, const QWidget *
         case SH_ToolTip_Mask:
         case SH_Menu_Mask:
             if ((SH_ToolTip_Mask == hint && (opts.square & SQUARE_TOOLTIPS)) ||
-                (SH_Menu_Mask == hint && (opts.square & SQUARE_POPUP_MENUS))) {
+                (SH_Menu_Mask == hint && POPUP_MENUS_SQUARE(opts))) {
                 return BaseStyle::styleHint(hint, option, widget, returnData);
             } else {
                 if (!Utils::hasAlphaChannel(widget) &&
@@ -3177,7 +3184,7 @@ int Style::styleHint(StyleHint hint, const QStyleOption *option, const QWidget *
         case SH_ToolButton_PopupDelay:
             return 250;
         case SH_ComboBox_PopupFrameStyle:
-            return opts.popupBorder || !(opts.square&SQUARE_POPUP_MENUS) ? QFrame::StyledPanel|QFrame::Plain : QFrame::NoFrame;
+            return opts.popupBorder || !POPUP_MENUS_SQUARE(opts) ? QFrame::StyledPanel|QFrame::Plain : QFrame::NoFrame;
         case SH_TabBar_Alignment:
             return Qt::AlignLeft;
         case SH_Header_ArrowAlignment:
@@ -3883,7 +3890,7 @@ void Style::drawPrimitive(PrimitiveElement element, const QStyleOption *option,
                        qobject_cast<const QComboBox*>(widget->parent())) {
                 if(opts.gtkComboMenus && !((QComboBox*)(widget->parent()))->isEditable())
                     drawPrimitive(PE_FrameMenu, option, painter, widget);
-                else if(opts.square&SQUARE_POPUP_MENUS)
+                else if(POPUP_MENUS_SQUARE(opts))
                 {
                     const QColor *use(APP_KRUNNER==theThemedApp ? m_backgroundCols : backgroundColors(option));
 
@@ -4116,7 +4123,7 @@ void Style::drawPrimitive(PrimitiveElement element, const QStyleOption *option,
             if(!opts.drawStatusBarFrames)
                 break;
         case PE_FrameMenu:
-            if((opts.square&SQUARE_POPUP_MENUS) &&
+            if(POPUP_MENUS_SQUARE(opts) &&
                 (qtcIsFlatBgnd(opts.menuBgndAppearance) ||
                 (opts.gtkComboMenus && widget && widget->parent() && qobject_cast<const QComboBox*>(widget->parent()))))
             {
@@ -6054,7 +6061,7 @@ void Style::drawControl(ControlElement element, const QStyleOption *option, QPai
                 }
 
                 if(active)
-                    drawMenuItem(painter, !opts.roundMbTopOnly && !(opts.square&SQUARE_POPUP_MENUS) ? r.adjusted(1, 1, -1, -1) : r,
+                    drawMenuItem(painter, !opts.roundMbTopOnly && !POPUP_MENUS_SQUARE(opts) ? r.adjusted(1, 1, -1, -1) : r,
                                  option, MENU_BAR,
                                  (down || APP_OPENOFFICE==theThemedApp) && opts.roundMbTopOnly ? ROUNDED_TOP : ROUNDED_ALL,
                                  opts.useHighlightForMenu && (opts.colorMenubarMouseOver || down || APP_OPENOFFICE==theThemedApp)
@@ -12016,7 +12023,7 @@ void Style::drawMenuItem(QPainter *p, const QRect &r, const QStyleOption *option
     else
     {
         // For now dont round combos - getting weird effects with shadow/clipping in Gtk2 style :-(
-        if(/*MENU_COMBO==type || */opts.square&SQUARE_POPUP_MENUS)
+        if(/*MENU_COMBO==type || */POPUP_MENUS_SQUARE(opts))
             drawBevelGradient(cols[fill], p, r, true, false, opts.menuitemAppearance, WIDGET_MENU_ITEM);
         else
         {
