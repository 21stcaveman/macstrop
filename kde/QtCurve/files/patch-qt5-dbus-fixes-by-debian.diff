diff --git qt5/style/qtcurve.cpp qt5/style/qtcurve.cpp
index 9e4b3aaa97b240ca8d4151d075c2b1c92acb4303..cbccef211b4b35c3d9fc774e14b3f3cd299ab911 100644
--- qt5/style/qtcurve.cpp
+++ qt5/style/qtcurve.cpp
@@ -21,7 +21,6 @@
  *****************************************************************************/
 
 #include "qtcurve_p.h"
-#include "qtcurve_plugin.h"
 #include <qtcurve-utils/qtprops.h>
 
 #include <QDBusConnection>
@@ -348,7 +347,7 @@ Style::Style() :
     m_windowManager(new WindowManager(this)),
     m_blurHelper(new BlurHelper(this)),
     m_shortcutHandler(new ShortcutHandler(this)),
-    m_dbusConnected(nullptr)
+    m_dbusConnected(false)
 {
     const char *env = getenv(QTCURVE_PREVIEW_CONFIG);
 #ifdef QTC_QT5_ENABLE_KDE
@@ -664,30 +663,36 @@ void Style::connectDBus()
 {
     if (m_dbusConnected)
         return;
-    m_dbusConnected = registerCleanup([] (void *data) {
-            reinterpret_cast<Style*>(data)->disconnectDBus();
-        }, this);
     auto bus = QDBusConnection::sessionBus();
-    bus.connect(QString(), "/KGlobalSettings", "org.kde.KGlobalSettings",
-                "notifyChange", this, SLOT(kdeGlobalSettingsChange(int, int)));
+    if (bus.isConnected()) {
+        m_dbusConnected = true;
+        if (QCoreApplication::instance()) {
+            bool ok = connect(QCoreApplication::instance(), &QCoreApplication::aboutToQuit, this, &Style::disconnectDBus);
+            // qWarning() << Q_FUNC_INFO << this << "connected to QCoreApplication::aboutToQuit from"
+            //     << QCoreApplication::instance() << ":" << ok;
+        }
+        bus.connect(QString(), "/KGlobalSettings", "org.kde.KGlobalSettings",
+                    "notifyChange", this, SLOT(kdeGlobalSettingsChange(int, int)));
 #ifndef QTC_QT5_ENABLE_KDE
-    bus.connect("org.kde.kwin", "/KWin", "org.kde.KWin", "compositingToggled",
-                this, SLOT(compositingToggled()));
+        bus.connect("org.kde.kwin", "/KWin", "org.kde.KWin", "compositingToggled",
+                    this, SLOT(compositingToggled()));
 #endif
 
-    QString arg0 = qApp? qApp->arguments()[0] : QString();
-    if (!qApp || (arg0 != "kwin" && arg0 != "kwin_x11" && arg0 != "kwin_wayland")) {
-        bus.connect("org.kde.kwin", "/QtCurve", "org.kde.QtCurve",
-                    "borderSizesChanged", this, SLOT(borderSizesChanged()));
-        if (opts.menubarHiding & HIDE_KWIN)
+        QString arg0 = qApp? qApp->arguments()[0] : QString();
+        if (!qApp || (arg0 != "kwin" && arg0 != "kwin_x11" && arg0 != "kwin_wayland")) {
+            // don't connect to signals if we know we're sending them out ourselves
             bus.connect("org.kde.kwin", "/QtCurve", "org.kde.QtCurve",
-                        "toggleMenuBar",
-                        this, SLOT(toggleMenuBar(unsigned int)));
-
-        if (opts.statusbarHiding & HIDE_KWIN) {
-            bus.connect("org.kde.kwin", "/QtCurve", "org.kde.QtCurve",
-                        "toggleStatusBar",
-                        this, SLOT(toggleStatusBar(unsigned int)));
+                        "borderSizesChanged", this, SLOT(borderSizesChanged()));
+            if (opts.menubarHiding & HIDE_KWIN)
+                bus.connect("org.kde.kwin", "/QtCurve", "org.kde.QtCurve",
+                            "toggleMenuBar",
+                            this, SLOT(toggleMenuBar(unsigned int)));
+
+            if (opts.statusbarHiding & HIDE_KWIN) {
+                bus.connect("org.kde.kwin", "/QtCurve", "org.kde.QtCurve",
+                            "toggleStatusBar",
+                            this, SLOT(toggleStatusBar(unsigned int)));
+            }
         }
     }
 }
@@ -696,10 +701,9 @@ void Style::disconnectDBus()
 {
     if (!m_dbusConnected)
         return;
-    void *cb = m_dbusConnected;
-    m_dbusConnected = nullptr;
-    unregisterCleanup(cb);
+    m_dbusConnected = false;
     auto bus = QDBusConnection::sessionBus();
+    // qWarning() << Q_FUNC_INFO << this << "Disconnecting from" << bus.name() << "/" << bus.baseService();
     bus.disconnect(QString(), "/KGlobalSettings", "org.kde.KGlobalSettings",
                    "notifyChange",
                    this, SLOT(kdeGlobalSettingsChange(int, int)));
@@ -708,19 +712,27 @@ void Style::disconnectDBus()
                    this, SLOT(compositingToggled()));
 #endif
 
-    bus.disconnect("org.kde.kwin", "/QtCurve", "org.kde.QtCurve",
-                   "borderSizesChanged", this, SLOT(borderSizesChanged()));
-    bus.disconnect("org.kde.kwin", "/QtCurve", "org.kde.QtCurve",
-                   "toggleMenuBar",
-                   this, SLOT(toggleMenuBar(unsigned int)));
-    bus.disconnect("org.kde.kwin", "/QtCurve", "org.kde.QtCurve",
-                   "toggleStatusBar",
-                   this, SLOT(toggleStatusBar(unsigned int)));
+    QString arg0 = qApp? qApp->arguments()[0] : QString();
+    if (!qApp || (arg0 != "kwin" && arg0 != "kwin_x11" && arg0 != "kwin_wayland")) {
+        bus.disconnect("org.kde.kwin", "/QtCurve", "org.kde.QtCurve",
+                    "borderSizesChanged", this, SLOT(borderSizesChanged()));
+        if (opts.menubarHiding & HIDE_KWIN)
+            bus.disconnect("org.kde.kwin", "/QtCurve", "org.kde.QtCurve",
+                           "toggleMenuBar",
+                           this, SLOT(toggleMenuBar(unsigned int)));
+
+        if (opts.statusbarHiding & HIDE_KWIN) {
+            bus.disconnect("org.kde.kwin", "/QtCurve", "org.kde.QtCurve",
+                           "toggleStatusBar",
+                           this, SLOT(toggleStatusBar(unsigned int)));
+        }
+    }
 }
 
 Style::~Style()
 {
-    disconnectDBus();
+    // qWarning() << Q_FUNC_INFO << this;
+//     disconnectDBus();
     freeColors();
     if (m_dBus) {
         delete m_dBus;
diff --git qt5/style/qtcurve.h qt5/style/qtcurve.h
index aedcd16a015d2f830879b4523fb19a78a1beda36..be9e485f624e1ae1db7bddfe9e814f7b5a7b7892 100644
--- qt5/style/qtcurve.h
+++ qt5/style/qtcurve.h
@@ -184,7 +184,6 @@ public:
 private:
     void init(bool initial);
     void connectDBus();
-    void disconnectDBus();
     void freeColor(QSet<QColor*> &freedColors, QColor **cols);
     void freeColors();
     void polishFormLayout(QFormLayout *layout);
@@ -359,6 +358,7 @@ private:
     int getFrameRound(const QWidget *widget) const;
 
 private Q_SLOTS:
+    void disconnectDBus();
     void kdeGlobalSettingsChange(int type, int);
     void borderSizesChanged();
     void toggleMenuBar(unsigned int xid);
@@ -519,7 +519,6 @@ private:
                                       const QStyleOption *option,
                                       QPainter *painter,
                                       const QWidget *widget) const;
-    static void dbusCleanupCallback(void*);
 
 private:
     mutable Options opts;
@@ -570,7 +569,7 @@ private:
     WindowManager *m_windowManager;
     BlurHelper *m_blurHelper;
     ShortcutHandler *m_shortcutHandler;
-    void *m_dbusConnected;
+    bool m_dbusConnected;
 #ifdef QTC_QT5_ENABLE_KDE
     KSharedConfigPtr m_configFile;
     KSharedConfigPtr m_kdeGlobals;
diff --git qt5/style/qtcurve_plugin.cpp qt5/style/qtcurve_plugin.cpp
index 8af8933c0f16150e62e58cb814a0af3984e828c7..d6a22eabf9e8e644ccdc0c8f639b0793e9577b30 100644
--- qt5/style/qtcurve_plugin.cpp
+++ qt5/style/qtcurve_plugin.cpp
@@ -27,7 +27,6 @@
 #include <qtcurve-utils/qtprops.h>
 #include <qtcurve-utils/x11shadow.h>
 #include <qtcurve-utils/x11blur.h>
-#include <qtcurve-utils/log.h>
 
 #include <QApplication>
 
@@ -44,49 +43,6 @@
 
 namespace QtCurve {
 
-// Using a `std::set` somehow result in a segfault in glibc (maybe realated to
-// this function being called in the exit handler?) so use a home made solution
-// instead...
-struct CleanupCallback {
-    void (*func)(void*);
-    void *data;
-    CleanupCallback *next;
-    CleanupCallback **prev;
-};
-
-static CleanupCallback *cleanup_callbacks = nullptr;
-
-void*
-registerCleanup(void (*func)(void*), void *data)
-{
-    auto cb = new CleanupCallback{func, data, cleanup_callbacks,
-                                  &cleanup_callbacks};
-    if (cleanup_callbacks)
-        cleanup_callbacks->prev = &cb->next;
-    cleanup_callbacks = cb;
-    return cb;
-}
-
-void
-unregisterCleanup(void *_cb)
-{
-    auto cb = (CleanupCallback*)_cb;
-    if (cb->next)
-        cb->next->prev = cb->prev;
-    *cb->prev = cb->next;
-    delete cb;
-}
-
-static void
-runAllCleanups()
-{
-    while (cleanup_callbacks) {
-        auto func = cleanup_callbacks->func;
-        auto data = cleanup_callbacks->data;
-        func(data);
-    }
-}
-
 __attribute__((hot)) static void
 polishQuickControl(QObject *obj)
 {
@@ -164,7 +120,7 @@ StylePlugin::create(const QString &key)
 
 StylePlugin::~StylePlugin()
 {
-    runAllCleanups();
+    // qWarning() << Q_FUNC_INFO << this;
     if (m_eventNotifyCallbackInstalled) {
         QInternal::unregisterCallback(QInternal::EventNotifyCallback,
                                     qtcEventCallback);
@@ -188,5 +144,4 @@ StylePlugin::init()
 #endif
         });
 }
-
 }
diff --git qt5/style/qtcurve_plugin.h qt5/style/qtcurve_plugin.h
index 1a0cf1d89e73d15ad41cd9d0553d62721b382261..06ef609250accd2834b4433222f460777f0b164e 100644
--- qt5/style/qtcurve_plugin.h
+++ qt5/style/qtcurve_plugin.h
@@ -37,10 +37,6 @@ private:
     bool m_eventNotifyCallbackInstalled = false;
     std::once_flag m_ref_flag;
 };
-
-void *registerCleanup(void (*func)(void*), void *data);
-void unregisterCleanup(void *handle);
-
 }
 
 #endif
