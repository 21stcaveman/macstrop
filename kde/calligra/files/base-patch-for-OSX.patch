diff --git CMakeLists.txt CMakeLists.txt
index facb5f9..faaf060 100644
--- CMakeLists.txt
+++ CMakeLists.txt
@@ -400,12 +400,12 @@ if(HAVE_VC)
     if(Vc_VERSION_MAJOR GREATER 0 OR Vc_VERSION_MINOR GREATER 7)
         message(STATUS "Vc version is greater than 0.7, enabling AVX2 support")
 
-        if(Vc_COMPILER_IS_GCC)
+        if(Vc_COMPILER_IS_GCC OR Vc_COMPILER_IS_CLANG)
             AddCompilerFlag("-std=c++11" _ok)
             if(NOT _ok)
                 AddCompilerFlag("-std=c++0x" _ok)
             endif()
-        endif(Vc_COMPILER_IS_GCC)
+        endif(Vc_COMPILER_IS_GCC OR Vc_COMPILER_IS_CLANG)
 
         macro(ko_compile_for_all_implementations_no_scalar _objs _src)
         if(PACKAGERS_BUILD)
diff --git cmake/modules/FindOpenJPEG.cmake cmake/modules/FindOpenJPEG.cmake
index 6bfd93c..d1d0e0b 100644
--- cmake/modules/FindOpenJPEG.cmake
+++ cmake/modules/FindOpenJPEG.cmake
@@ -11,6 +11,7 @@
 
 FIND_PATH(OPENJPEG_INCLUDE_DIR openjpeg.h
 PATHS
+    //opt//local//include/openjpeg-1.5
     /usr/local/include/openjpeg
     /usr/local/include
     /usr/include/openjpeg
@@ -22,7 +23,7 @@ PATH_SUFFIXES openjpeg
 SET(OPENJPEG_NAMES ${OPENJPEG_NAMES} openjpeg)
 FIND_LIBRARY(OPENJPEG_LIBRARY
   NAMES ${OPENJPEG_NAMES}
-  PATHS /usr/lib /usr/local/lib
+  PATHS //opt//local//lib /usr/lib /usr/local/lib
   )
 
 IF (OPENJPEG_LIBRARY AND OPENJPEG_INCLUDE_DIR)
diff --git cmake/modules/FindPqxx.cmake cmake/modules/FindPqxx.cmake
index 3e24a0c..f2115f3 100644
--- cmake/modules/FindPqxx.cmake
+++ cmake/modules/FindPqxx.cmake
@@ -6,6 +6,7 @@
 #  PQXX_FOUND, If false, do not try to use libpqxx.
 
 find_path(PQXX_INCLUDE_DIR pqxx
+   //opt//local//include/pqxx
    /usr/include/pqxx
    /usr/local/include/pqxx
 )
diff --git cmake/modules/FindVc.cmake cmake/modules/FindVc.cmake
index bb9823f..66d237b 100644
--- cmake/modules/FindVc.cmake
+++ cmake/modules/FindVc.cmake
@@ -26,7 +26,8 @@
 # Vc_SSE_INTRINSICS_BROKEN
 # Vc_AVX_INTRINSICS_BROKEN
 
-find_package(Vc ${Vc_FIND_VERSION} QUIET NO_MODULE PATHS $ENV{HOME} /opt/Vc)
+# RJVB 20140313: added //opt//local//
+find_package(Vc ${Vc_FIND_VERSION} QUIET NO_MODULE PATHS $ENV{HOME} /opt/Vc //opt//local//)
 
 include(FindPackageHandleStandardArgs)
 find_package_handle_standard_args(Vc CONFIG_MODE)
diff --git cmake/productsets/osx.cmake cmake/productsets/osx.cmake
index 1fe8f1c..41504de 100644
--- cmake/productsets/osx.cmake
+++ cmake/productsets/osx.cmake
@@ -1,17 +1,27 @@
 #defines the set of products commonly wanted for classic Desktop environment with OS X
 # TODO: platform specific things should be handled in toplevel CMakeLists.txt
 
-calligra_define_productset(OSX "Calligra for OSX"
+calligra_define_productset(OSX "Calligra for OS X Desktop"
     OPTIONAL
         # apps
+        AUTHOR
+        BRAINDUMP
         FLOW
+        KARBON
         KRITA
-        #SHEETS
+        PLAN
+        SHEETS
         STAGE
         WORDS
-        KARBON
+        KEXI
+        # features
+        FEATURE_SCRIPTING
+        FEATURE_RDF
         # extras
         APP_CALLIGRA
         APP_CONVERTER
         FILEMANAGER
+        OKULAR
+        # docs
+        DOC
 )
