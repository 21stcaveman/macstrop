diff --git libs/flake/CMakeLists.txt libs/flake/CMakeLists.txt
index 7a97edc..b927d1d 100644
--- libs/flake/CMakeLists.txt
+++ libs/flake/CMakeLists.txt
@@ -102,6 +102,7 @@ set(flake_SRCS
     KoSnapData.cpp
     SnapGuideConfigWidget.cpp
     KoShapeShadow.cpp
+    KoSharedLoadingData.cpp
     KoSharedSavingData.cpp
     KoViewConverter.cpp
     KoInputDeviceHandler.cpp
diff --git libs/flake/KoSharedLoadingData.cpp libs/flake/KoSharedLoadingData.cpp
new file mode 100644
index 0000000..4af8dc2
--- /dev/null
+++ libs/flake/KoSharedLoadingData.cpp
@@ -0,0 +1,28 @@
+/* This file is part of the KDE project
+   Copyright (C) 2007 Thorsten Zachmann <zachmann@kde.org>
+
+   This library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Library General Public
+   License as published by the Free Software Foundation; either
+   version 2 of the License, or (at your option) any later version.
+
+   This library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Library General Public License for more details.
+
+   You should have received a copy of the GNU Library General Public License
+   along with this library; see the file COPYING.LIB.  If not, write to
+   the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
+ * Boston, MA 02110-1301, USA.
+*/
+
+#include "KoSharedLoadingData.h"
+
+KoSharedLoadingData::KoSharedLoadingData()
+{
+}
+
+KoSharedLoadingData::~KoSharedLoadingData()
+{
+}
diff --git libs/flake/KoSharedLoadingData.h libs/flake/KoSharedLoadingData.h
index 0d9ed71..ce0372c 100644
--- libs/flake/KoSharedLoadingData.h
+++ libs/flake/KoSharedLoadingData.h
@@ -20,16 +20,18 @@
 #ifndef KOSHAREDLOADINGDATA_H
 #define KOSHAREDLOADINGDATA_H
 
+#include "flake_export.h"
+
 /**
  * The KoSharedLoadingData class is used to share data between shapes during loading.
  * These data can be added to the KoShapeLoadingContext using KoShapeLoadingContext::addSharedData().
  * A different shape can then get the data from the context using KoShapeLoadingContext::sharedData().
  */
-class KoSharedLoadingData
+class FLAKE_EXPORT KoSharedLoadingData
 {
 public:
-    KoSharedLoadingData() {}
-    virtual ~KoSharedLoadingData() {}
+    KoSharedLoadingData();
+    virtual ~KoSharedLoadingData();
 };
 
 #endif /* KOSHAREDLOADINGDATA_H */
