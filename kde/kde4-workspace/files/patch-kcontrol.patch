diff --git kcontrol/CMakeLists.txt kcontrol/CMakeLists.txt
index fc666b1..8dc0a1f 100644
--- kcontrol/CMakeLists.txt
+++ kcontrol/CMakeLists.txt
@@ -19,13 +19,15 @@ if(X11_Xkb_FOUND)
 endif(X11_Xkb_FOUND)
 
 if(NOT WIN32)
-add_subdirectory( bell )
 add_subdirectory( input )
+endif(NOT WIN32)
+if(NOT WIN32 AND NOT APPLE)
+add_subdirectory( bell )
 add_subdirectory( access )
 add_subdirectory( screensaver )
 add_subdirectory( dateandtime )
 add_subdirectory( autostart )
-endif(NOT WIN32)
+endif(NOT WIN32 AND NOT APPLE)
 
 add_subdirectory( launch )
 add_subdirectory( colors )
@@ -43,9 +45,9 @@ add_subdirectory( hardware )
 add_subdirectory( desktoppaths )
 
 if( FREETYPE_FOUND )
-    if( WIN32 OR FONTCONFIG_FOUND )
+    if( WIN32 OR APPLE OR FONTCONFIG_FOUND )
         add_subdirectory( fonts )
-    endif( WIN32 OR FONTCONFIG_FOUND )
+    endif( WIN32 OR APPLE OR FONTCONFIG_FOUND )
 endif( FREETYPE_FOUND )
 if(FONTCONFIG_FOUND AND FREETYPE_FOUND AND NOT WIN32)
     add_subdirectory( kfontinst )
diff --git kcontrol/input/CMakeLists.txt kcontrol/input/CMakeLists.txt
index 394c551..388a8fc 100644
--- kcontrol/input/CMakeLists.txt
+++ kcontrol/input/CMakeLists.txt
@@ -41,19 +41,20 @@ endif(X11_Xcursor_FOUND)
 
 ########### next target ###############
 
-set(kapplymousetheme_SRCS kapplymousetheme.cpp )
+if(NOT APPLE)
+    set(kapplymousetheme_SRCS kapplymousetheme.cpp )
 
 
-kde4_add_executable(kapplymousetheme ${kapplymousetheme_SRCS})
+    kde4_add_executable(kapplymousetheme ${kapplymousetheme_SRCS})
 
-target_link_libraries(kapplymousetheme
-${KDE4_KDEUI_LIBS} ${X11_Xrender_LIB} ${X11_X11_LIB})
-if (X11_Xcursor_FOUND)
-   target_link_libraries(kapplymousetheme ${X11_Xcursor_LIB})
-endif (X11_Xcursor_FOUND)
-
-install(TARGETS kapplymousetheme ${INSTALL_TARGETS_DEFAULT_ARGS})
+    target_link_libraries(kapplymousetheme
+    ${KDE4_KDEUI_LIBS} ${X11_Xrender_LIB} ${X11_X11_LIB})
+    if (X11_Xcursor_FOUND)
+       target_link_libraries(kapplymousetheme ${X11_Xcursor_LIB})
+    endif (X11_Xcursor_FOUND)
 
+    install(TARGETS kapplymousetheme ${INSTALL_TARGETS_DEFAULT_ARGS})
+endif(NOT APPLE)
 
 ########### next target ###############
 
@@ -81,22 +82,24 @@ install(TARGETS kcm_input  DESTINATION ${PLUGIN_INSTALL_DIR} )
 
 ########### next target ###############
 
-set(kcm_cursortheme_PART_SRCS kcmcursortheme.cpp ${libnoinst_SRCS})
+if(NOT APPLE)
 
-kde4_add_plugin(kcm_cursortheme ${kcm_cursortheme_PART_SRCS})
+    set(kcm_cursortheme_PART_SRCS kcmcursortheme.cpp ${libnoinst_SRCS})
 
+    kde4_add_plugin(kcm_cursortheme ${kcm_cursortheme_PART_SRCS})
 
-target_link_libraries(kcm_cursortheme ${KDE4_KIO_LIBS} ${KDE4_KNEWSTUFF3_LIBS} ${X11_LIBRARIES})
 
-if (X11_Xcursor_FOUND)
-   target_link_libraries(kcm_cursortheme ${X11_Xcursor_LIB})
-endif (X11_Xcursor_FOUND)
-if (X11_Xfixes_FOUND)
-   target_link_libraries(kcm_cursortheme ${X11_Xfixes_LIB})
-endif (X11_Xfixes_FOUND)
+    target_link_libraries(kcm_cursortheme ${KDE4_KIO_LIBS} ${KDE4_KNEWSTUFF3_LIBS} ${X11_LIBRARIES})
 
-install(TARGETS kcm_cursortheme  DESTINATION ${PLUGIN_INSTALL_DIR} )
+    if (X11_Xcursor_FOUND)
+       target_link_libraries(kcm_cursortheme ${X11_Xcursor_LIB})
+    endif (X11_Xcursor_FOUND)
+    if (X11_Xfixes_FOUND)
+       target_link_libraries(kcm_cursortheme ${X11_Xfixes_LIB})
+    endif (X11_Xfixes_FOUND)
 
+    install(TARGETS kcm_cursortheme  DESTINATION ${PLUGIN_INSTALL_DIR} )
+endif(NOT APPLE)
 
 ########### install files ###############
 
diff --git kcontrol/input/main.cpp kcontrol/input/main.cpp
index 0f9f33a..f4baded 100644
--- kcontrol/input/main.cpp
+++ kcontrol/input/main.cpp
@@ -21,7 +21,9 @@
  *  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
  */
 
-#include <config-X11.h>
+#ifdef Q_WS_X11
+#   include <config-X11.h>
+#endif
 
 #include <klocale.h>
 #include <kglobal.h>
diff --git kcontrol/input/mouse.cpp kcontrol/input/mouse.cpp
index cebb174..6f07ce9 100644
--- kcontrol/input/mouse.cpp
+++ kcontrol/input/mouse.cpp
@@ -69,11 +69,14 @@
 
 #include "mouse.h"
 
-#include <X11/X.h>
-#include <X11/Xlib.h>
-#include <X11/Xutil.h>
+#ifdef Q_WS_X11
+#   include <X11/X.h>
+#   include <X11/Xlib.h>
+#   include <X11/Xutil.h>
+#   include <QX11Info>
+#endif
 #include <kglobalsettings.h>
-#include <QX11Info>
+
 
 #undef Below
 
@@ -164,7 +167,7 @@ MouseConfig::MouseConfig(QWidget *parent, const QVariantList &args)
     connect( generalTab->cbAutoSelect, SIGNAL(clicked()), this, SLOT(slotClick()) );
     connect(generalTab->cbAutoSelect, SIGNAL(clicked()), this, SLOT(slotSmartSliderEnabling()));
 
-
+#ifdef Q_WS_X11
     // Only allow setting reversing scroll polarity if we have scroll buttons
     unsigned char map[20];
     if ( XGetPointerMapping(QX11Info::display(), map, 20) >= 5 )
@@ -173,6 +176,7 @@ MouseConfig::MouseConfig(QWidget *parent, const QVariantList &args)
       generalTab->cbScrollPolarity->show();
     }
     else
+#endif
     {
       generalTab->cbScrollPolarity->setEnabled( false );
       generalTab->cbScrollPolarity->hide();
@@ -452,8 +456,13 @@ void MouseConfig::load()
   KConfig config( "kcminputrc" );
   settings->load(&config);
 
+#ifdef Q_OS_MAC
+  generalTab->rightHanded->hide();
+  generalTab->leftHanded->hide();
+#else
   generalTab->rightHanded->setEnabled(settings->handedEnabled);
   generalTab->leftHanded->setEnabled(settings->handedEnabled);
+#endif
   if ( generalTab->cbScrollPolarity->isEnabled() )
     generalTab->cbScrollPolarity->setEnabled(settings->handedEnabled);
   generalTab->cbScrollPolarity->setChecked( settings->reverseScrollPolarity );
@@ -602,16 +611,25 @@ void MouseConfig::slotHandedChanged(int val){
 
 void MouseSettings::load(KConfig *config)
 {
-  int accel_num, accel_den, threshold;
+  int threshold = 0;
   double accel;
+#ifdef Q_WS_X11
+  int accel_num, accel_den;
   XGetPointerControl( QX11Info::display(),
               &accel_num, &accel_den, &threshold );
   accel = float(accel_num) / float(accel_den);
+#else
+  accel = 0;
+#endif
 
   // get settings from X server
   int h = RIGHT_HANDED;
   unsigned char map[20];
+#ifdef Q_WS_X11
   num_buttons = XGetPointerMapping(QX11Info::display(), map, 20);
+#else
+  num_buttons = 1;
+#endif
 
   handedEnabled = true;
 
@@ -700,14 +718,16 @@ void MouseConfig::slotWheelScrollLinesChanged(int value)
 
 void MouseSettings::apply(bool force)
 {
+  unsigned char map[256];
+#ifdef Q_WS_X11
   XChangePointerControl( QX11Info::display(),
                          true, true, int(qRound(accelRate*10)), 10, thresholdMove);
 
   // 256 might seems extreme, but X has already been known to return 32, 
   // and we don't want to truncate things. Xlib limits the table to 256 bytes,
   // so it's a good uper bound..
-  unsigned char map[256];
   num_buttons = XGetPointerMapping(QX11Info::display(), map, 256);
+#endif
 
   int remap=(num_buttons>=1);
   if (handedEnabled && (m_handedNeedsApply || force)) {
@@ -759,12 +779,14 @@ void MouseSettings::apply(bool force)
               }
           }
       }
+#ifdef Q_WS_X11
       int retval;
       if (remap)
           while ((retval=XSetPointerMapping(QX11Info::display(), map,
                                             num_buttons)) == MappingBusy)
               /* keep trying until the pointer is free */
           { };
+#endif
       m_handedNeedsApply = false;
   }
 
diff --git kcontrol/krdb/krdb.cpp kcontrol/krdb/krdb.cpp
index 36fc99c..b49993e 100644
--- kcontrol/krdb/krdb.cpp
+++ kcontrol/krdb/krdb.cpp
@@ -518,6 +518,7 @@ void runRdb( uint flags )
 
     if( cfgfonts.readEntry( "forceFontDPI", 0 ) != 0 )
       contents += "Xft.dpi: " + cfgfonts.readEntry( "forceFontDPI" ) + '\n';
+#ifdef Q_WS_X11
     else
     {
       KProcess proc;
@@ -530,6 +531,7 @@ void runRdb( uint flags )
         proc.waitForFinished();
       }
     }
+#endif // Q_WS_X11
   }
 
   if (contents.length() > 0)
@@ -537,6 +539,7 @@ void runRdb( uint flags )
 
   tmpFile.flush();
 
+#ifdef Q_WS_X11
   KProcess proc;
 #ifndef NDEBUG
   proc << "xrdb" << "-merge" << tmpFile.fileName();
@@ -544,6 +547,7 @@ void runRdb( uint flags )
   proc << "xrdb" << "-quiet" << "-merge" << tmpFile.fileName();
 #endif
   proc.execute();
+#endif // Q_WS_X11
 
   applyGtkStyles(exportColors, 1);
   applyGtkStyles(exportColors, 2);
diff --git kcontrol/style/CMakeLists.txt kcontrol/style/CMakeLists.txt
index d832b20..7c84cf9 100644
--- kcontrol/style/CMakeLists.txt
+++ kcontrol/style/CMakeLists.txt
@@ -18,9 +18,9 @@ kde4_add_plugin(kcm_style ${kcm_style_PART_SRCS})
 
 target_link_libraries(kcm_style ${KDE4_KIO_LIBS} ${X11_LIBRARIES}
     ${KDE4_PLASMA_LIBS} ${KDE4_KNEWSTUFF3_LIBS})
-if(NOT WIN32)
+if(NOT WIN32 AND NOT APPLE)
     target_link_libraries(kcm_style kdecorations)
-endif(NOT WIN32)
+endif(NOT WIN32 AND NOT APPLE)
 
 install(TARGETS kcm_style  DESTINATION ${PLUGIN_INSTALL_DIR})
 
