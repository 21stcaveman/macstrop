diff --git a/qml/kde/kdeintegrationplugin.cpp b/qml/kde/kdeintegrationplugin.cpp
index c1360b4..eaa934f 100644
--- a/qml/kde/kdeintegrationplugin.cpp
+++ b/qml/kde/kdeintegrationplugin.cpp
@@ -27,8 +27,7 @@
 
 KDEIntegrationPlugin::KDEIntegrationPlugin(QObject* parent) : QDeclarativeExtensionPlugin( parent )
 {
-  qDebug() << Q_FUNC_INFO;
-  kDebug(); 
+  kDebug() << Q_FUNC_INFO;
 }
 
 void KDEIntegrationPlugin::registerTypes(const char* uri)
diff --git a/qml/kde/tests/qml_moves/dynamictreemodel.cpp b/qml/kde/tests/qml_moves/dynamictreemodel.cpp
index 5537bb7..964ccc6 100644
--- a/qml/kde/tests/qml_moves/dynamictreemodel.cpp
+++ b/qml/kde/tests/qml_moves/dynamictreemodel.cpp
@@ -195,7 +195,7 @@ bool DynamicTreeModel::dropMimeData(const QMimeData* data, Qt::DropAction action
   {
     id = ba.toInt(&ok);
     if (!ok)
-      qDebug() << ba;
+      kDebug() << ba;
     Q_ASSERT(ok);
 
     _row = -1;
diff --git a/qml/kde/tests/qml_moves/mainwindow.cpp b/qml/kde/tests/qml_moves/mainwindow.cpp
index 1324575..75dc78f 100644
--- a/qml/kde/tests/qml_moves/mainwindow.cpp
+++ b/qml/kde/tests/qml_moves/mainwindow.cpp
@@ -72,7 +72,7 @@ MainWindow::MainWindow(QWidget *parent, Qt::WindowFlags f )
 
 void MainWindow::doMove()
 {
-  qDebug() << "MOV";
+  kDebug() << "MOV";
   ModelMoveCommand *command = new ModelMoveCommand(m_treeModel, this);
   command->setStartRow(0);
   command->setEndRow(0);
diff --git a/qml/kde/tests/qmlbreadcrumbnavigation/checkableitemproxymodel.cpp b/qml/kde/tests/qmlbreadcrumbnavigation/checkableitemproxymodel.cpp
index f61485a..9e5fb03 100644
--- a/qml/kde/tests/qmlbreadcrumbnavigation/checkableitemproxymodel.cpp
+++ b/qml/kde/tests/qmlbreadcrumbnavigation/checkableitemproxymodel.cpp
@@ -87,7 +87,7 @@ bool CheckableItemProxyModel::setData(const QModelIndex& index, const QVariant&
     Qt::CheckState state = static_cast<Qt::CheckState>(value.toInt());
     const QModelIndex srcIndex = mapToSource(index);
     bool result = select(QItemSelection(srcIndex, srcIndex), state == Qt::Checked ? QItemSelectionModel::Select : QItemSelectionModel::Deselect);
-    qDebug() << "DC";
+    kDebug() << "DC";
     emit dataChanged(srcIndex, srcIndex);
     return result;
   }
@@ -102,7 +102,7 @@ void CheckableItemProxyModel::setSourceModel(QAbstractItemModel* sourceModel)
 
 void CheckableItemProxyModelPrivate::selectionChanged(const QItemSelection &selected, const QItemSelection &deselected)
 {
-  qDebug()<< "SEL CH" << selected << deselected;
+  kDebug()<< "SEL CH" << selected << deselected;
   Q_Q(CheckableItemProxyModel);
   foreach (const QItemSelectionRange &range, q->mapSelectionFromSource(selected))
     q->dataChanged(range.topLeft(), range.bottomRight());
diff --git a/qml/kde/tests/qmlbreadcrumbnavigation/kmodelindexproxymapper.cpp b/qml/kde/tests/qmlbreadcrumbnavigation/kmodelindexproxymapper.cpp
index c464938..21f8e38 100644
--- a/qml/kde/tests/qmlbreadcrumbnavigation/kmodelindexproxymapper.cpp
+++ b/qml/kde/tests/qmlbreadcrumbnavigation/kmodelindexproxymapper.cpp
@@ -215,7 +215,7 @@ QItemSelection KModelIndexProxyMapper::mapSelectionRightToLeft(const QItemSelect
     return QItemSelection();
 
   if (selection.first().model() != d->m_rightModel.data())
-    qDebug() << selection.first().model() << d->m_rightModel.data();
+    kDebug() << selection.first().model() << d->m_rightModel.data();
   Q_ASSERT(selection.first().model() == d->m_rightModel.data());
 
   QItemSelection seekSelection = selection;
diff --git a/qml/kde/tests/qmlbreadcrumbnavigation/kproxyitemselectionmodel.cpp b/qml/kde/tests/qmlbreadcrumbnavigation/kproxyitemselectionmodel.cpp
index 6d176fb..41518e6 100644
--- a/qml/kde/tests/qmlbreadcrumbnavigation/kproxyitemselectionmodel.cpp
+++ b/qml/kde/tests/qmlbreadcrumbnavigation/kproxyitemselectionmodel.cpp
@@ -132,7 +132,7 @@ void KLinkItemSelectionModelPrivate::createProxyChain()
 
 bool KLinkItemSelectionModelPrivate::assertValid()
 {
-  qDebug() << m_proxyChainDown << m_proxyChainUp;
+  kDebug() << m_proxyChainDown << m_proxyChainUp;
   if ( m_proxyChainDown.isEmpty())
   {
     Q_ASSERT( !m_proxyChainUp.isEmpty() );
diff --git a/qml/kde/tests/qmlbreadcrumbnavigation/qmllistselectionmodel.cpp b/qml/kde/tests/qmlbreadcrumbnavigation/qmllistselectionmodel.cpp
index dbc794e..1b21bfb 100644
--- a/qml/kde/tests/qmlbreadcrumbnavigation/qmllistselectionmodel.cpp
+++ b/qml/kde/tests/qmlbreadcrumbnavigation/qmllistselectionmodel.cpp
@@ -51,12 +51,12 @@ QList< int > QMLListSelectionModel::selection() const
 
 void QMLListSelectionModel::select(int row, int command)
 {
-  qDebug() << row << command;
+  kDebug() << row << command;
   Q_ASSERT(row >= 0);
   static const int column = 0;
   const QModelIndex idx = m_selectionModel->model()->index(row, column);
   Q_ASSERT(idx.isValid());
-  qDebug() << idx << idx.data();
+  kDebug() << idx << idx.data();
   QItemSelection sel(idx, idx);
   QItemSelectionModel::SelectionFlags flags = static_cast<QItemSelectionModel::SelectionFlags>(command);
   m_selectionModel->select(sel, flags);
diff --git a/resources/imap/tests/testsubscriptiondialog.cpp b/resources/imap/tests/testsubscriptiondialog.cpp
index 9653b76..5da9cba 100644
--- a/resources/imap/tests/testsubscriptiondialog.cpp
+++ b/resources/imap/tests/testsubscriptiondialog.cpp
@@ -23,13 +23,14 @@
 
 #include "imapaccount.h"
 #include "subscriptiondialog.h"
+#include <kdebug.h>
 
 int main( int argc, char **argv )
 {
   QApplication app( argc, argv );
 
   if ( app.arguments().size() < 5 ) {
-    qWarning( "Not enough parameters, expecting: <server> <port> <user> <password>" );
+    kWarning() << "Not enough parameters, expecting: <server> <port> <user> <password>";
     return 1;
   }
 
@@ -38,8 +39,8 @@ int main( int argc, char **argv )
   QString user = app.arguments().at( 3 );
   QString password = app.arguments().at( 4 );
 
-  qDebug() << "Querying:" << server << port << user << password;
-  qDebug();
+  kDebug() << "Querying:" << server << port << user << password;
+  kDebug();
 
   ImapAccount account;
   account.setServer( server );
@@ -53,7 +54,7 @@ int main( int argc, char **argv )
 
   int retcode = app.exec();
 
-  qDebug() << "Subscription changed?" << dialog->isSubscriptionChanged();
+  kDebug() << "Subscription changed?" << dialog->isSubscriptionChanged();
 
   return retcode;
 }
diff --git a/resources/kolabproxy/kolabhandler.cpp b/resources/kolabproxy/kolabhandler.cpp
index 0574464..6b87b8c 100644
--- a/resources/kolabproxy/kolabhandler.cpp
+++ b/resources/kolabproxy/kolabhandler.cpp
@@ -55,7 +55,7 @@ KolabHandler::Ptr KolabHandler::createHandler( Kolab::FolderType type,
   case Kolab::NoteType:
     return Ptr( new NotesHandler( imapCollection ) );
   default:
-    qWarning() << "invalid type";
+    kWarning() << "invalid type";
   }
   return KolabHandler::Ptr();
 }
@@ -90,7 +90,7 @@ KolabHandler::Ptr KolabHandler::createHandler( const KolabV2::FolderType &type,
   case KolabV2::Note:
     return Ptr( new NotesHandler( imapCollection ) );
   default:
-    qWarning() << "invalid type";
+    kWarning() << "invalid type";
   }
   return KolabHandler::Ptr();
 }
diff --git a/resources/kolabproxy/upgradejob.cpp b/resources/kolabproxy/upgradejob.cpp
index 74f80fe..67799b5 100644
--- a/resources/kolabproxy/upgradejob.cpp
+++ b/resources/kolabproxy/upgradejob.cpp
@@ -112,7 +112,7 @@ void UpgradeJob::itemFetchResult( KJob *job )
   }
   Akonadi::ItemFetchJob *j = static_cast<Akonadi::ItemFetchJob*>( job );
   if ( j->items().isEmpty() ) {
-    qWarning() << "no items fetched ";
+    kWarning() << "no items fetched ";
     checkResult();
     return;
   }
@@ -120,7 +120,7 @@ void UpgradeJob::itemFetchResult( KJob *job )
   const Akonadi::Collection imapCollection =
     j->property( IMAP_COLLECTION ).value<Akonadi::Collection>();
   if ( !imapCollection.isValid() ) {
-    qWarning() << "invalid imap collection";
+    kWarning() << "invalid imap collection";
     checkResult();
     return;
   }
@@ -131,7 +131,7 @@ void UpgradeJob::itemFetchResult( KJob *job )
   KolabHandler::Ptr handler = KolabHandler::createHandler( folderType, imapCollection );
 
   if ( !handler ) {
-    qWarning() << "invalid handler";
+    kWarning() << "invalid handler";
     checkResult();
     return;
   }
@@ -139,7 +139,7 @@ void UpgradeJob::itemFetchResult( KJob *job )
 
   foreach ( Akonadi::Item imapItem, j->items() ) { //krazy:exclude=foreach
     if ( !imapItem.isValid() ) {
-      qWarning() << "invalid item";
+      kWarning() << "invalid item";
       continue;
     }
     kDebug() << "updating item " << imapItem.id();
@@ -147,7 +147,7 @@ void UpgradeJob::itemFetchResult( KJob *job )
       handler->translateItems( Akonadi::Item::List() << imapItem );
 
     if ( translatedItems.size() != 1 ) {
-      qWarning() << "failed to translateItems" << translatedItems.size();
+      kWarning() << "failed to translateItems" << translatedItems.size();
       continue;
     }
     handler->toKolabFormat( translatedItems.first(), imapItem );
diff --git a/resources/maildir/libmaildir/maildir.cpp b/resources/maildir/libmaildir/maildir.cpp
index 9ad4a66..8c4cf32 100644
--- a/resources/maildir/libmaildir/maildir.cpp
+++ b/resources/maildir/libmaildir/maildir.cpp
@@ -475,7 +475,7 @@ QByteArray Maildir::readEntry( const QString& key ) const
     QString realKey( d->findRealKey( key ) );
     if ( realKey.isEmpty() ) {
         // FIXME error handling?
-        qWarning() << "Maildir::readEntry unable to find: " << key;
+        kWarning() << "Maildir::readEntry unable to find: " << key;
         d->lastError = i18n( "Cannot locate mail file %1." ,key );
         return result;
     }
@@ -496,7 +496,7 @@ qint64 Maildir::size( const QString& key ) const
     QString realKey( d->findRealKey( key ) );
     if ( realKey.isEmpty() ) {
         // FIXME error handling?
-        qWarning() << "Maildir::size unable to find: " << key;
+        kWarning() << "Maildir::size unable to find: " << key;
         d->lastError = i18n( "Cannot locate mail file %1." , key );
         return -1;
     }
@@ -514,7 +514,7 @@ QDateTime Maildir::lastModified(const QString& key) const
 {
     const QString realKey( d->findRealKey( key ) );
     if ( realKey.isEmpty() ) {
-        qWarning() << "Maildir::lastModified unable to find: " << key;
+        kWarning() << "Maildir::lastModified unable to find: " << key;
         d->lastError = i18n( "Cannot locate mail file %1." , key );
         return QDateTime();
     }
@@ -533,7 +533,7 @@ QByteArray Maildir::readEntryHeadersFromFile( const QString& file ) const
     QFile f( file );
     if ( !f.open( QIODevice::ReadOnly ) ) {
         // FIXME error handling?
-        qWarning() << "Maildir::readEntryHeaders unable to find: " << file;
+        kWarning() << "Maildir::readEntryHeaders unable to find: " << file;
         d->lastError = i18n( "Cannot locate mail file %1." , file );
         return result;
     }
@@ -551,7 +551,7 @@ QByteArray Maildir::readEntryHeaders( const QString& key ) const
 {
     const QString realKey( d->findRealKey( key ) );
     if ( realKey.isEmpty() ) {
-        qWarning() << "Maildir::readEntryHeaders unable to find: " << key;
+        kWarning() << "Maildir::readEntryHeaders unable to find: " << key;
         d->lastError = i18n( "Cannot locate mail file %1." , key );
         return QByteArray();
     }
@@ -576,7 +576,7 @@ bool Maildir::writeEntry( const QString& key, const QByteArray& data )
     QString realKey( d->findRealKey( key ) );
     if ( realKey.isEmpty() ) {
         // FIXME error handling?
-        qWarning() << "Maildir::writeEntry unable to find: " << key;
+        kWarning() << "Maildir::writeEntry unable to find: " << key;
         d->lastError = i18n( "Cannot locate mail file %1." ,key );
         return false;
     }
@@ -625,7 +625,7 @@ QString Maildir::addEntry( const QByteArray& data )
      * For reference: http://trolltech.com/developer/task-tracker/index_html?method=entry&id=211215
      */
     if ( !f.rename( finalKey ) ) {
-        qWarning() << "Maildir: Failed to add entry: " << finalKey  << "! Error: " << f.errorString();
+        kWarning() << "Maildir: Failed to add entry: " << finalKey  << "! Error: " << f.errorString();
         d->lastError = i18n( "Failed to create mail file %1. The error was: %2" , finalKey, f.errorString() );
         return QString();
     }
@@ -639,7 +639,7 @@ bool Maildir::removeEntry( const QString& key )
 {
     QString realKey( d->findRealKey( key ) );
     if ( realKey.isEmpty() ) {
-        qWarning() << "Maildir::removeEntry unable to find: " << key;
+        kWarning() << "Maildir::removeEntry unable to find: " << key;
         return false;
     }
     KeyCache *keyCache = KeyCache::self();
@@ -651,7 +651,7 @@ QString Maildir::changeEntryFlags(const QString& key, const Akonadi::Item::Flags
 {
     QString realKey( d->findRealKey( key ) );
     if ( realKey.isEmpty() ) {
-        qWarning() << "Maildir::changeEntryFlags unable to find: " << key;
+        kWarning() << "Maildir::changeEntryFlags unable to find: " << key;
         d->lastError = i18n( "Cannot locate mail file %1." , key );
         return QString();
     }
@@ -717,7 +717,7 @@ QString Maildir::changeEntryFlags(const QString& key, const Akonadi::Item::Flags
     }
 
     if ( !f.rename( finalKey ) ) {
-        qWarning() << "Maildir: Failed to rename entry: " << f.fileName() << " to "  << finalKey  << "! Error: " << f.errorString();
+        kWarning() << "Maildir: Failed to rename entry: " << f.fileName() << " to "  << finalKey  << "! Error: " << f.errorString();
         d->lastError = i18n( "Failed to update the file name %1 to %2 on the disk. The error was: %3." , f.fileName(), finalKey, f.errorString() );
         return QString();
      }
diff --git a/resources/mixedmaildir/kmindexreader/tests/testidxreader.cpp b/resources/mixedmaildir/kmindexreader/tests/testidxreader.cpp
index d51cc9d..3a67f95 100644
--- a/resources/mixedmaildir/kmindexreader/tests/testidxreader.cpp
+++ b/resources/mixedmaildir/kmindexreader/tests/testidxreader.cpp
@@ -31,6 +31,7 @@ using Akonadi::MessageStatus;
 #include <qtest_kde.h>
 #include <QtTest/QTest>
 #include <QDebug>
+#include <kdebug.h>
 
 #include <boost/shared_ptr.hpp>
 
@@ -49,7 +50,7 @@ void TestIdxReader::testError() {
 void TestIdxReader::testReadHeader() {
     QTemporaryFile tmp;
     if ( !tmp.open() ) {
-        qDebug() << "Could not open temp file.";
+        kWarning() << "Could not open temp file.";
         return;
     }
     tmp.write ( QByteArray::fromBase64 ( mailDirOneEmail ) );
@@ -70,7 +71,7 @@ void TestIdxReader::testReadHeader() {
 void TestIdxReader::testRead() {
     QTemporaryFile tmp;
     if ( !tmp.open() ) {
-        qDebug() << "Could not open temp file.";
+        kWarning() << "Could not open temp file.";
         return;
     }
     tmp.write ( QByteArray::fromBase64 ( mailDirTwoEmailOneTagFlags ) );
diff --git a/resources/mixedmaildir/tests/itemfetchtest.cpp b/resources/mixedmaildir/tests/itemfetchtest.cpp
index 5372ce5..a21fe10 100644
--- a/resources/mixedmaildir/tests/itemfetchtest.cpp
+++ b/resources/mixedmaildir/tests/itemfetchtest.cpp
@@ -1104,7 +1104,7 @@ void ItemFetchTest::testSingleItemFetchMBox()
     QVERIFY( msgPtr != 0 );
 
     const QSet<QByteArray> parts = messageParts( msgPtr );
-    qDebug() << msgPtr->messageID()->identifier();
+    kDebug() << msgPtr->messageID()->identifier();
     QVERIFY( !parts.isEmpty() );
     QVERIFY( parts.contains( MessagePart::Header ) );
     if ( msgPtr->messageID()->identifier() == messageIdOfEmptyBodyMsg )
diff --git a/resources/openxchange/openxchangeresource.cpp b/resources/openxchange/openxchangeresource.cpp
index 377b908..74cdbbf 100644
--- a/resources/openxchange/openxchangeresource.cpp
+++ b/resources/openxchange/openxchangeresource.cpp
@@ -938,7 +938,7 @@ void OpenXchangeResource::onFoldersRequestJobFinished( KJob *job )
     } else {
       // we have to wait until the parent folder has been created
       folders.append( folder );
-      qDebug() << "Error: parent folder id" << folder.folderId() << "of folder" << folder.title() << "is unknown";
+      kWarning() << "Error: parent folder id" << folder.folderId() << "of folder" << folder.title() << "is unknown";
     }
   }
 
@@ -981,7 +981,7 @@ void OpenXchangeResource::onFoldersRequestDeltaJobFinished( KJob *job )
     } else {
       // we have to wait until the parent folder has been created
       modifiedFolders.append( folder );
-      qDebug() << "Error: parent folder id" << folder.folderId() << "of folder" << folder.title() << "is unknown";
+      kWarning() << "Error: parent folder id" << folder.folderId() << "of folder" << folder.title() << "is unknown";
     }
   }
 
@@ -1122,7 +1122,7 @@ void OpenXchangeResource::syncCollectionsRemoteIdCache()
 void OpenXchangeResource::onFetchResourceCollectionsFinished( KJob *job )
 {
   if ( job->error() ) {
-    qDebug() << "Error: Unable to fetch resource collections:" << job->errorText();
+    kWarning() << "Error: Unable to fetch resource collections:" << job->errorText();
     return;
   }
 
diff --git a/resources/openxchange/oxa/incidenceutils.cpp b/resources/openxchange/oxa/incidenceutils.cpp
index 1f0592b..8a8b1d2 100644
--- a/resources/openxchange/oxa/incidenceutils.cpp
+++ b/resources/openxchange/oxa/incidenceutils.cpp
@@ -33,6 +33,7 @@
 
 #include <QtCore/QBitArray>
 #include <QtCore/QDebug>
+#include <kdebug.h>
 
 using namespace OXA;
 
@@ -173,7 +174,7 @@ static void parseTodoAttribute( const QDomElement &element,
   } else if ( tagName == QLatin1String( "priority" ) ) {
     const int priorityNumber = OXUtils::readNumber( element.text() );
     if ( priorityNumber < 1 || priorityNumber > 3 ) {
-      qDebug() << "Unknown priority:" << text;
+      kWarning() << "Unknown priority:" << text;
     } else {
       int priority;
       switch ( priorityNumber ) {
@@ -465,7 +466,8 @@ static void createRecurrenceAttributes( QDomDocument &document, QDomElement &par
       }
       break;
     default:
-      qDebug() << "unsupported recurrence type:" << recurrence->recurrenceType();
+      kWarning() << "unsupported recurrence type:" << recurrence->recurrenceType();
+      break;
   }
 
   if ( recurrence->endDateTime().isValid() )
diff --git a/resources/pop3/tests/fakeserver/fakeserver.cpp b/resources/pop3/tests/fakeserver/fakeserver.cpp
index 2201045..1acf109 100644
--- a/resources/pop3/tests/fakeserver/fakeserver.cpp
+++ b/resources/pop3/tests/fakeserver/fakeserver.cpp
@@ -93,7 +93,7 @@ QByteArray FakeServer::parseDeleteMark( const QByteArray &expectedData,
         return substituted;
       }
     }
-    qWarning() << "Received:" << dataReceived.data()
+    kWarning() << "Received:" << dataReceived.data()
                << "\nExpected:" << expectedData.data();
     Q_ASSERT_X( false, "FakeServer::parseDeleteMark", "Unable to substitute data!" );
     return QByteArray();
@@ -117,7 +117,7 @@ QByteArray FakeServer::parseRetrMark( const QByteArray &expectedData,
         return substituted;
       }
     }
-    qWarning() << "Received:" << dataReceived.data()
+    kWarning() << "Received:" << dataReceived.data()
                << "\nExpected:" << expectedData.data();
     Q_ASSERT_X( false, "FakeServer::parseRetrMark", "Unable to substitute data!" );
     return QByteArray();
diff --git a/resources/pop3/tests/pop3test.cpp b/resources/pop3/tests/pop3test.cpp
index f6b0f2a..d4da42d 100644
--- a/resources/pop3/tests/pop3test.cpp
+++ b/resources/pop3/tests/pop3test.cpp
@@ -156,7 +156,7 @@ void Pop3Test::cleanupTestCase()
   // is finished (it finishes when the event loop finishes)
   QMetaObject::invokeMethod( mFakeServerThread, "quit", Qt::QueuedConnection );
   if ( !mFakeServerThread->wait( 10000 ) )
-    qWarning() << "The fake server thread has not yet finished, what is wrong!?";
+    kWarning() << "The fake server thread has not yet finished, what is wrong!?";
 }
 
 static const QByteArray simpleMail1 =
