diff --git a/resources/google/common/googleaccountmanager.cpp b/resources/google/common/googleaccountmanager.cpp
index 2e715b6..f2b70b7 100644
--- a/resources/google/common/googleaccountmanager.cpp
+++ b/resources/google/common/googleaccountmanager.cpp
@@ -43,10 +43,23 @@ GoogleAccountManager::~GoogleAccountManager()
     delete m_wallet;
 }
 
+#ifndef Q_OS_MACX
 bool GoogleAccountManager::isReady() const
 {
+    return m_wallet && m_isReady;
+}
+#else
+bool GoogleAccountManager::isReady()
+{
+    if (!m_isReady && m_wallet) {
+        // This can possibly happen on OS X when using the OS X keychain wallet backend.
+        // It could lead to posting a redundant unlock dialog.
+        qDebug() << Q_FUNC_INFO << "wallet enabled=" << m_wallet->isEnabled() << "open=" << m_wallet->isOpen();
+        m_isReady = (m_wallet->isEnabled() && m_wallet->isOpen());
+    }
     return m_isReady;
 }
+#endif
 
 void GoogleAccountManager::initManager()
 {
@@ -55,6 +68,7 @@ void GoogleAccountManager::initManager()
     // FIXME: Don't use synchronous wallet
     // With asynchronous wallet however we are unable to read any data from it
     // in when slotWalletOpened() is called on walletOpened() signal
+    qDebug() << Q_FUNC_INFO << "creating new connection to wallet" << KWallet::Wallet::NetworkWallet();
     m_wallet = KWallet::Wallet::openWallet( KWallet::Wallet::NetworkWallet(),
                                             0, KWallet::Wallet::Synchronous );
     slotWalletOpened( m_wallet != 0 );
@@ -104,6 +118,7 @@ void GoogleAccountManager::slotWalletClosed()
 {
     m_isReady = false;
     delete m_wallet;
+    m_wallet = NULL;
 }
 
 void GoogleAccountManager::slotFolderUpdated(const QString& folder)
@@ -142,9 +157,13 @@ void GoogleAccountManager::slotFolderUpdated(const QString& folder)
     }
 }
 
+#ifndef Q_OS_MACX
 AccountPtr GoogleAccountManager::findAccount( const QString& accountName ) const
+#else
+AccountPtr GoogleAccountManager::findAccount( const QString& accountName )
+#endif
 {
-    if ( !m_isReady ) {
+    if ( !isReady() ) {
         kWarning() << "Manager is not ready!";
         return AccountPtr();
     }
@@ -162,9 +181,18 @@ AccountPtr GoogleAccountManager::findAccount( const QString& accountName ) const
     return account;
 }
 
+#ifndef Q_OS_MACX
 AccountPtr GoogleAccountManager::findAccountInWallet(const QString& accountName) const
+#else
+AccountPtr GoogleAccountManager::findAccountInWallet(const QString& accountName)
+#endif
 {
-  if ( !m_wallet->entryList().contains( accountName ) ) {
+    if ( !isReady() ) {
+        kWarning() << "Manager is not ready!";
+        return AccountPtr();
+    }
+
+    if ( !m_wallet->entryList().contains( accountName ) ) {
         kDebug() << "Account" << accountName << "not found in KWallet";
         return AccountPtr();
     }
@@ -187,7 +215,7 @@ AccountPtr GoogleAccountManager::findAccountInWallet(const QString& accountName)
 
 bool GoogleAccountManager::storeAccount(const AccountPtr& account)
 {
-    if ( !m_isReady ) {
+    if ( !isReady() ) {
         kWarning() << "Manager is not ready!";
         return false;
     }
@@ -213,7 +241,7 @@ bool GoogleAccountManager::storeAccount(const AccountPtr& account)
 
 bool GoogleAccountManager::removeAccount(const QString& accountName)
 {
-    if ( !m_isReady ) {
+    if ( !isReady() ) {
         kWarning() << "Manager is not ready";
         return false;
     }
@@ -231,9 +259,13 @@ bool GoogleAccountManager::removeAccount(const QString& accountName)
     return true;
 }
 
+#ifndef Q_OS_MACX
 AccountsList GoogleAccountManager::listAccounts() const
+#else
+AccountsList GoogleAccountManager::listAccounts()
+#endif
 {
-    if ( !m_isReady ) {
+    if ( !isReady() ) {
         kWarning() << "Manager is not ready";
         return AccountsList();
     }
diff --git a/resources/google/common/googleaccountmanager.h b/resources/google/common/googleaccountmanager.h
index 514f666..f5ebb36 100644
--- a/resources/google/common/googleaccountmanager.h
+++ b/resources/google/common/googleaccountmanager.h
@@ -38,12 +38,24 @@ class GoogleAccountManager : public QObject
     explicit GoogleAccountManager( QObject* parent = 0 );
     virtual ~GoogleAccountManager();
 
+#ifndef Q_OS_MACX
     bool isReady() const;
+#else
+    bool isReady();
+#endif
 
     bool storeAccount( const KGAPI2::AccountPtr &account );
+#ifndef Q_OS_MACX
     KGAPI2::AccountPtr findAccount( const QString &accountName ) const;
+#else
+    KGAPI2::AccountPtr findAccount( const QString &accountName );
+#endif
     bool removeAccount( const QString &accountName );
+#ifndef Q_OS_MACX
     KGAPI2::AccountsList listAccounts() const;
+#else
+    KGAPI2::AccountsList listAccounts();
+#endif
 
     void cleanup(const QString &accountName);
 
@@ -58,7 +70,11 @@ class GoogleAccountManager : public QObject
     void slotWalletOpened( bool success );
     void slotWalletClosed();
     void slotFolderUpdated( const QString &folder );
+#ifndef Q_OS_MACX
     KGAPI2::AccountPtr findAccountInWallet( const QString &accountName ) const;
+#else
+    KGAPI2::AccountPtr findAccountInWallet( const QString &accountName );
+#endif
 
   private:
     bool m_isReady;
