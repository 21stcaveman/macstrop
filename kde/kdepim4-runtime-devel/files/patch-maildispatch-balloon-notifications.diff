diff --git a/agents/maildispatcher/CMakeLists.txt b/agents/maildispatcher/CMakeLists.txt
index 1c8da31..042264b 100644
--- a/agents/maildispatcher/CMakeLists.txt
+++ b/agents/maildispatcher/CMakeLists.txt
@@ -11,6 +11,8 @@ set( maildispatcheragent_SRCS
 
 kde4_add_ui_files(maildispatcheragent_SRCS settings.ui)
 kde4_add_kcfg_files(maildispatcheragent_SRCS settings.kcfgc)
+kde4_add_app_icon(maildispatcheragent_SRCS ${CMAKE_INSTALL_PREFIX}/share/icons/oxygen/*/actions/mail-send.png)
+kde4_add_app_icon(maildispatcheragent_SRCS ${CMAKE_INSTALL_PREFIX}/share/icons/oxygen/base/*/actions/mail-send.png)
 kcfg_generate_dbus_interface(${CMAKE_CURRENT_SOURCE_DIR}/maildispatcheragent.kcfg org.kde.Akonadi.MailDispatcher.Settings)
 qt4_add_dbus_adaptor(maildispatcheragent_SRCS
   ${CMAKE_CURRENT_BINARY_DIR}/org.kde.Akonadi.MailDispatcher.Settings.xml settings.h Settings
diff --git a/agents/maildispatcher/maildispatcheragent.cpp b/agents/maildispatcher/maildispatcheragent.cpp
index 67a84cd..36a389c 100644
--- a/agents/maildispatcher/maildispatcheragent.cpp
+++ b/agents/maildispatcher/maildispatcheragent.cpp
@@ -46,6 +46,9 @@
 
 #include <QtCore/QTimer>
 #include <QtDBus/QDBusConnection>
+#include <QtGui>
+
+#include <QApplication>
 
 #ifdef KDEPIM_STATIC_LIBS
 extern bool ___MailTransport____INIT();
@@ -71,7 +74,8 @@ class MailDispatcherAgent::Private
         sentAnything( false ),
         errorOccurred( false ),
         sentItemsSize( 0 ),
-        sentActionHandler( 0 )
+        sentActionHandler( 0 ),
+        trayIcon( 0 )
     {
     }
 
@@ -90,6 +94,7 @@ class MailDispatcherAgent::Private
     bool errorOccurred;
     qulonglong sentItemsSize;
     SentActionHandler *sentActionHandler;
+    QSystemTrayIcon *trayIcon;
 
     // slots:
     void abort();
@@ -99,8 +104,28 @@ class MailDispatcherAgent::Private
     void sendPercent( KJob *job, unsigned long percent );
     void sendResult( KJob *job );
     void emitStatusReady();
+
+    bool BalloonMessage(const QIcon &, const QString &, const QString &, QSystemTrayIcon::MessageIcon, int);
 };
 
+bool MailDispatcherAgent::Private::BalloonMessage(const QIcon &icon, const QString &title, const QString &msg,
+                                                  QSystemTrayIcon::MessageIcon msgIcon, int durationMS)
+{
+    bool ret = false;
+    QSystemTrayIcon *trayIcon = new QSystemTrayIcon(icon);
+    if (trayIcon) {
+        trayIcon->show();
+        if (trayIcon->supportsMessages()) {
+            trayIcon->setToolTip(msg);
+            trayIcon->showMessage(title, msg, msgIcon, durationMS);
+            sleep(1);
+            ret = true;
+        }
+        trayIcon->deleteLater();
+        trayIcon = NULL;
+    }
+    return ret;
+}
 
 void MailDispatcherAgent::Private::abort()
 {
@@ -164,11 +189,15 @@ void MailDispatcherAgent::Private::dispatch()
         emit q->status( AgentBase::Idle, i18n( "Finished sending messages." ) );
 
         if ( !errorOccurred ) {
-          KNotification *notify = new KNotification( QLatin1String("emailsent") );
-          notify->setComponentData( q->componentData() );
-          notify->setTitle( i18nc( "Notification title when email was sent", "E-Mail Successfully Sent" ) );
-          notify->setText( i18nc( "Notification when the email was sent", "Your E-Mail has been sent successfully." ) );
-          notify->sendEvent();
+          QString title = i18nc( "Notification title when email was sent", "E-Mail Sent Successfully" );
+          QString msg = i18nc( "Notification when the email was sent", "Your E-Mail has been sent successfully." );
+          if (!BalloonMessage( QIcon::fromTheme(QLatin1String("kmail")), title, msg, QSystemTrayIcon::Information, 5000)) {
+            KNotification *notify = new KNotification( QLatin1String("emailsent") );
+            notify->setComponentData( q->componentData() );
+            notify->setTitle( title );
+            notify->setText( msg );
+            notify->sendEvent();
+          }
         }
       } else {
         // Empty queue.
@@ -192,6 +221,8 @@ MailDispatcherAgent::MailDispatcherAgent( const QString &id )
     ___MailTransport____INIT();
 #endif
 
+  qApp->setWindowIcon(QIcon::fromTheme(QLatin1String("mail-send")));
+
   KGlobal::locale()->insertCatalog( QLatin1String("libakonadi-kmime") ); // for special collection translation
 
   new SettingsAdaptor( Settings::self() );
@@ -333,11 +364,14 @@ void MailDispatcherAgent::Private::sendResult( KJob *job )
     // do anything.
     kDebug() << "Sending failed. error:" << job->errorString();
 
-    KNotification *notify = new KNotification( QLatin1String("sendingfailed") );
-    notify->setComponentData( q->componentData() );
-    notify->setTitle( i18nc( "Notification title when email sending failed", "E-Mail Sending Failed" ) );
-    notify->setText( job->errorString() );
-    notify->sendEvent();
+    const QString title = i18nc( "Notification title when email sending failed", "E-Mail Sending Failed" );
+    if (!BalloonMessage( QIcon::fromTheme(QLatin1String("kmail")), title, job->errorString(), QSystemTrayIcon::Warning, 10000)) {
+      KNotification *notify = new KNotification( QLatin1String("sendingfailed") );
+      notify->setComponentData( q->componentData() );
+      notify->setTitle( title );
+      notify->setText( job->errorString() );
+      notify->sendEvent();
+    }
 
     errorOccurred = true;
   } else {
