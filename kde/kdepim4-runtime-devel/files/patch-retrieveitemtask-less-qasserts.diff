diff --git a/resources/imap/retrieveitemtask.cpp b/resources/imap/retrieveitemtask.cpp
index 661b6c8..9a7b3e6 100644
--- a/resources/imap/retrieveitemtask.cpp
+++ b/resources/imap/retrieveitemtask.cpp
@@ -105,17 +105,23 @@ void RetrieveItemTask::onMessagesReceived( const QString &mailBox,
   Q_UNUSED( mailBox );
 
   KIMAP::FetchJob *fetch = qobject_cast<KIMAP::FetchJob*>( sender() );
-  Q_ASSERT( fetch!=0 );
-  Q_ASSERT( uids.size()==1 );
-  Q_ASSERT( messages.size()==1 );
+  bool ok = (fetch!=0) && (uids.size()==1) && (messages.size()==1);
 
+  if (!ok) {
+    kWarning() << "Cannot retrieve message " << uids;
+    cancelTask( i18n( "No valid message to retrieve" ) );
+    return;
+  }
   Akonadi::Item i = item();
 
   kDebug( 5327 ) << "MESSAGE from Imap server" << item().remoteId();
-  Q_ASSERT( item().isValid() );
+  if (!item().isValid()){
+    kWarning() << "Invalid item retrieved " << uids;
+    cancelTask( i18n( "Invalid item retrieved" ) );
+    return;
+  }
 
   const qint64 number = uids.keys().first();
-  bool ok;
   const Akonadi::Item remoteItem = resourceState()->messageHelper()->createItemFromMessage(messages[number], uids[number], 0, attrs.values(number), QList<QByteArray>(), fetch->scope(), ok);
   if (!ok) {
     kWarning() << "Failed to retrieve message " << uids[number];
