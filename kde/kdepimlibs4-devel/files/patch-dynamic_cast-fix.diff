diff --git akonadi/itempayloadinternals_p.h akonadi/itempayloadinternals_p.h
index 7236a97..f42b507 100644
--- akonadi/itempayloadinternals_p.h
+++ akonadi/itempayloadinternals_p.h
@@ -32,6 +32,8 @@
 #include <boost/mpl/identity.hpp>
 #include <boost/utility/enable_if.hpp>
 
+#include <kdemacros.h>
+
 #include <typeinfo>
 
 #include "exception.h"
@@ -315,13 +317,24 @@ template <typename T> struct PayloadTrait<QSharedPointer<T> >
 
 }
 
+#if defined(KDEPIM_STATIC_LIBS)
+# define PAYLOAD_EXPORT
+#else
+# define PAYLOAD_EXPORT    KDE_EXPORT
+#endif
+
 /**
  * @internal
  * Non-template base class for the payload container.
  * @note Move to Internal namespace for KDE5
  */
-struct PayloadBase
+class PAYLOAD_EXPORT PayloadBase
 {
+public:
+    // RJVB 20161008: add an explicit constructor
+    PayloadBase()
+    {
+    }
     virtual ~PayloadBase()
     {
     }
@@ -335,8 +348,9 @@ struct PayloadBase
  * @note Move to Internal namespace for KDE5
  */
 template <typename T>
-struct Payload : public PayloadBase
+class PAYLOAD_EXPORT Payload : public PayloadBase
 {
+public:
     Payload()
     {
     }
@@ -344,6 +358,9 @@ struct Payload : public PayloadBase
         : payload(p)
     {
     }
+    virtual ~Payload()
+    {
+    }
 
     PayloadBase *clone() const
     {
@@ -363,7 +380,7 @@ struct Payload : public PayloadBase
  * abstract, will therefore always fail to compile for pointer payloads
  */
 template <typename T>
-struct Payload<T *> : public PayloadBase
+class PAYLOAD_EXPORT Payload<T *> : public PayloadBase
 {
 };
 
