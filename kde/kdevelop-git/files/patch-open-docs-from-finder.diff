diff --git app/Info.plist.in app/Info.plist.in
index ca6c7de..5847b73 100644
--- app/Info.plist.in
+++ app/Info.plist.in
@@ -34,7 +34,171 @@
     <true/>
     <key>NSSupportsAutomaticTermination</key>
     <false/>
+    <key>NSPrincipalClass</key>
+    <string>NSApplication</string>
+    <key>NSHighResolutionCapable</key>
+    <string>True</string>
     <key>NSHumanReadableCopyright</key>
     <string>${MACOSX_BUNDLE_COPYRIGHT}</string>
+    <key>LSMultipleInstancesProhibited</key>
+    <false/>
+    <key>CFBundleDocumentTypes</key>
+    <array>
+        <dict>
+            <key>CFBundleTypeExtensions</key>
+            <array>
+                <string>h</string>
+            </array>
+            <key>CFBundleTypeName</key>
+            <string>C Header Source</string>
+            <key>CFBundleTypeRole</key>
+            <string>Editor</string>
+            <key>LSItemContentTypes</key>
+            <array>
+                <string>public.c-header</string>
+            </array>
+        </dict>
+        <dict>
+            <key>CFBundleTypeExtensions</key>
+            <array>
+                <string>hh</string>
+                <string>hp</string>
+                <string>hpp</string>
+                <string>hxx</string>
+                <string>h++</string>
+            </array>
+            <key>CFBundleTypeName</key>
+            <string>C++ Header Source</string>
+            <key>CFBundleTypeRole</key>
+            <string>Editor</string>
+            <key>LSItemContentTypes</key>
+            <array>
+                <string>public.c-plus-plus-header</string>
+            </array>
+        </dict>
+        <dict>
+            <key>CFBundleTypeExtensions</key>
+            <array>
+                <string>c</string>
+            </array>
+            <key>CFBundleTypeName</key>
+            <string>C Source</string>
+            <key>CFBundleTypeRole</key>
+            <string>Editor</string>
+            <key>LSItemContentTypes</key>
+            <array>
+                <string>public.c-source</string>
+            </array>
+        </dict>
+        <dict>
+            <key>CFBundleTypeExtensions</key>
+            <array>
+                <string>cc</string>
+                <string>cp</string>
+                <string>cpp</string>
+                <string>cxx</string>
+                <string>c++</string>
+            </array>
+            <key>CFBundleTypeName</key>
+            <string>C++ Source</string>
+            <key>CFBundleTypeRole</key>
+            <string>Editor</string>
+            <key>LSItemContentTypes</key>
+            <array>
+                <string>public.c-plus-plus-source</string>
+            </array>
+        </dict>
+        <dict>
+            <key>CFBundleTypeExtensions</key>
+            <array>
+                <string>m</string>
+            </array>
+            <key>CFBundleTypeName</key>
+            <string>Objective-C Source</string>
+            <key>CFBundleTypeRole</key>
+            <string>Editor</string>
+            <key>LSItemContentTypes</key>
+            <array>
+                <string>public.objective-c-source</string>
+            </array>
+        </dict>
+        <dict>
+            <key>CFBundleTypeExtensions</key>
+            <array>
+                <string>mm</string>
+                <string>M</string>
+            </array>
+            <key>CFBundleTypeName</key>
+            <string>Objective-C++ Source</string>
+            <key>CFBundleTypeRole</key>
+            <string>Editor</string>
+            <key>LSItemContentTypes</key>
+            <array>
+                <string>public.objective-c-plus-plus-source</string>
+            </array>
+        </dict>
+        <dict>
+            <key>CFBundleTypeExtensions</key>
+            <array>
+                <string>make</string>
+            </array>
+            <key>CFBundleTypeName</key>
+            <string>Makefile</string>
+            <key>CFBundleTypeRole</key>
+            <string>Editor</string>
+            <key>LSItemContentTypes</key>
+            <array>
+                <string>com.apple.xcode.make-script</string>
+            </array>
+        </dict>
+        <dict>
+            <key>CFBundleTypeExtensions</key>
+            <array>
+                <string>plist</string>
+            </array>
+            <key>CFBundleTypeName</key>
+            <string>XML Property List</string>
+            <key>CFBundleTypeRole</key>
+            <string>Editor</string>
+            <key>LSItemContentTypes</key>
+            <array>
+                <string>com.apple.xml-property-list</string>
+            </array>
+        </dict>
+        <dict>
+            <key>CFBundleTypeName</key>
+            <string>Source Code</string>
+            <key>CFBundleTypeRole</key>
+            <string>Editor</string>
+            <key>LSItemContentTypes</key>
+            <array>
+                <string>public.source-code</string>
+            </array>
+        </dict>
+        <dict>
+            <key>CFBundleTypeName</key>
+            <string>Text Document</string>
+            <key>CFBundleTypeRole</key>
+            <string>Editor</string>
+            <key>LSItemContentTypes</key>
+            <array>
+                <string>public.text</string>
+            </array>
+        </dict>
+        <dict>
+            <key>CFBundleTypeExtensions</key>
+            <array>
+                <string>*</string>
+            </array>
+            <key>CFBundleTypeName</key>
+            <string>Anything</string>
+            <key>CFBundleTypeOSTypes</key>
+            <array>
+                <string>****</string>
+            </array>
+            <key>CFBundleTypeRole</key>
+            <string>Viewer</string>
+        </dict>
+    </array>
 </dict>
 </plist>
diff --git app/main.cpp app/main.cpp
index 05576ac..ea1dc65 100644
--- app/main.cpp
+++ app/main.cpp
@@ -67,6 +67,7 @@
 #include "splash.h"
 
 #ifdef Q_OS_MAC
+#include <QFileOpenEvent>
 #include <CoreFoundation/CoreFoundation.h>
 #endif
 
@@ -76,9 +77,14 @@ using KDevelop::Core;
 typedef QPair<QString, int> File;
 
 class KDevelopApplication: public KApplication {
+    Q_OBJECT
 public:
     explicit KDevelopApplication(bool GUIenabled = true): KApplication(GUIenabled) {}
 
+    void startFilteringEvents() {
+        installEventFilter(this);
+    }
+
     void saveState( QSessionManager& sm ) {
         if (KDevelop::Core::self() && KDevelop::Core::self()->sessionController()) {
             QString x11SessionId = QString("%1_%2").arg(sm.sessionId()).arg(sm.sessionKey());
@@ -89,6 +95,11 @@ public:
 
         KApplication::saveState(sm);
     }
+protected:
+    /**
+     * Event filter for QApplication to handle Mac OS X like file open
+     */
+    bool eventFilter(QObject *obj, QEvent *event);
 };
 
 /// Tries to find a session identified by @p data in @p sessions.
@@ -181,8 +192,33 @@ static int getRunningSessionPid()
     return KDevelop::SessionController::sessionRunInfo(sessionUuid).holderPid;
 }
 
+bool KDevelopApplication::eventFilter(QObject *obj, QEvent *event)
+{
+    if (event->type() == QEvent::FileOpen) {
+        QFileOpenEvent *foe = static_cast<QFileOpenEvent*>(event);
+        qDebug() << Q_FUNC_INFO << "FileOpen event for" << foe->url();
+        QVector<File> fileList;
+        fileList.append(parseFilename(foe->file()));
+        if ( ! fileList.isEmpty() )
+        {
+            int pid = getRunningSessionPid();
+            if ( pid > 0 ) {
+                openFilesInRunningInstance(fileList, pid);
+            }
+        }
+        // don't eat the event
+        return false;
+    }
+
+    /**
+     * else: pass over to default implementation
+     */
+    return QObject::eventFilter(obj, event);
+}
+
 int main( int argc, char *argv[] )
 {
+    bool simulatePS = false;
 #ifdef Q_OS_MAC
     CFBundleRef mainBundle = CFBundleGetMainBundle();
     if (mainBundle) {
@@ -195,6 +231,10 @@ int main( int argc, char *argv[] )
             CFDictionarySetValue(infoDict, CFSTR("NSSupportsAutomaticTermination"), kCFBooleanFalse);
         }
     }
+    if (argc == 2 && qstrncmp(argv[1], "-psn_", 5) == 0) {
+        // this is a pure start from the Finder or Dock, without any arguments to open.
+        simulatePS = true;
+    }
 #endif
 
     static const char description[] = I18N_NOOP( "The KDevelop Integrated Development Environment" );
@@ -391,7 +431,7 @@ int main( int argc, char *argv[] )
         }
     }
     
-    if(args->isSet("ps"))
+    if(args->isSet("ps") || simulatePS)
     {
         bool onlyRunning = args->isSet("pid");
         session = KDevelop::SessionController::showSessionChooserDialog(i18n("Select the session you would like to use"), onlyRunning);
@@ -579,5 +619,11 @@ int main( int argc, char *argv[] )
         trySetupWelcomePageView();
     }
 #endif
+
+    // start filtering events, so that on OS X we can handle file open requests
+    // sent through LaunchServices (i.e. the Finder)
+    app.startFilteringEvents();
     return app.exec();
 }
+
+#include "main.moc"
