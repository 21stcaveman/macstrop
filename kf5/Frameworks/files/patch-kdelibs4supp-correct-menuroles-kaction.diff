diff --git src/kdeui/kaction.cpp src/kdeui/kaction.cpp
index 2b48e1c..b3fbe74 100644
--- src/kdeui/kaction.cpp
+++ src/kdeui/kaction.cpp
@@ -36,6 +36,38 @@
 
 #include <kdebug.h>
 
+#ifdef Q_OS_OSX
+#include <kcmdlineargs.h>
+#include <k4aboutdata.h>
+
+static void setTextWithCorrectMenuRole( KAction *action, const QString &text )
+{
+    // texts containing "config, options, setup, settings or preferences" will get PreferencesRole
+    // from Qt unless they have a role set. We prevent that, because KDE has its own way of
+    // defining a the application preferences menu ("Configure <appName>") which should go under the OS X Preferences menu.
+    // But when a KAction is created with the standard preferences title ("Configure <appName>..."), this action
+    // is set to PreferencesRole .
+    action->setText(text);
+    if( text.contains("config", Qt::CaseInsensitive)
+        || text.contains("options", Qt::CaseInsensitive)
+        || text.contains("setup", Qt::CaseInsensitive)
+        || text.contains("settings", Qt::CaseInsensitive)
+        || text.contains("preferences", Qt::CaseInsensitive)
+    ){
+        const K4AboutData *aboutData = KCmdLineArgs::aboutData();
+        QString prefsText = i18n( "Configure %1...", (aboutData) ? aboutData->programName() : qApp->applicationName() );
+        if( text == prefsText || text == "&" % prefsText ){
+            qDebug() << "### Setting QAction::PreferencesRole from" << action->menuRole() << "for menuAction with text" << text;
+            action->setMenuRole(QAction::PreferencesRole);
+        }
+        else{
+            qDebug() << "### Setting QAction::NoRole from" << action->menuRole() << "for menuAction with text" << text;
+            action->setMenuRole(QAction::NoRole);
+        }
+    }
+}
+#endif //Q_OS_OSX
+
 //---------------------------------------------------------------------
 // KActionPrivate
 //---------------------------------------------------------------------
@@ -80,13 +112,20 @@ KAction::KAction(QObject *parent)
     : QWidgetAction(parent), d(new KActionPrivate)
 {
     d->init(this);
+    // effective only on OS X : don't let Qt guesstimate where (in what menu)
+    // an as yet unnamed menu item should be added.
+    setMenuRole(QAction::NoRole);
 }
 
 KAction::KAction(const QString &text, QObject *parent)
     : QWidgetAction(parent), d(new KActionPrivate)
 {
     d->init(this);
+#ifdef Q_OS_OSX
+    setTextWithCorrectMenuRole(this, text);
+#else
     setText(text);
+#endif
 }
 
 KAction::KAction(const QIcon &icon, const QString &text, QObject *parent)
@@ -94,7 +133,11 @@ KAction::KAction(const QIcon &icon, const QString &text, QObject *parent)
 {
     d->init(this);
     setIcon(icon);
+#ifdef Q_OS_OSX
+    setTextWithCorrectMenuRole(this, text);
+#else
     setText(text);
+#endif
 }
 
 KAction::~KAction()
