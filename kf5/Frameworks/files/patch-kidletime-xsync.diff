diff --git src/plugins/xsync/xsyncbasedpoller.cpp src/plugins/xsync/xsyncbasedpoller.cpp
index 48081c4..c0c9abc 100644
--- src/plugins/xsync/xsyncbasedpoller.cpp
+++ src/plugins/xsync/xsyncbasedpoller.cpp
@@ -70,7 +70,7 @@ XSyncBasedPoller::XSyncBasedPoller(QObject *parent)
 
     if (Q_UNLIKELY(!m_display)) {
         m_available = false;
-        qDebug() << "xcb sync could not find display";
+        qWarning() << "xcb sync could not find display";
         return;
     }
     m_xcb_connection = XGetXCBConnection(m_display);
@@ -79,7 +79,7 @@ XSyncBasedPoller::XSyncBasedPoller(QObject *parent)
 
     const xcb_query_extension_reply_t *sync_reply = xcb_get_extension_data(m_xcb_connection, &xcb_sync_id);
     if (!sync_reply || !sync_reply->present) {
-        qDebug() << "xcb sync extension not found";
+        qWarning() << "xcb sync extension not found";
         m_available = false;
         return;
     }
@@ -149,9 +149,9 @@ XSyncBasedPoller::XSyncBasedPoller(QObject *parent)
     }
 
     if (m_available) {
-        qDebug() << "XSync seems available and ready";
+//         qDebug() << "XSync seems available and ready";
     } else {
-        qDebug() << "XSync seems not available";
+        qWarning() << "XSync seems not available";
     }
 }
 
@@ -170,11 +170,11 @@ bool XSyncBasedPoller::setUpPoller()
         return false;
     }
 
-    qDebug() << "XSync Inited";
+//     qDebug() << "XSync Inited";
 
     s_globalXSyncBasedPoller()->isActive = true;
 
-    qDebug() << "Supported, init completed";
+//     qDebug() << "Supported, init completed";
 
     return true;
 }
@@ -330,7 +330,7 @@ void XSyncBasedPoller::setAlarm(Display *dpy, XSyncAlarm *alarm, XSyncCounter co
         XSyncChangeAlarm(dpy, *alarm, flags, &attr);
     } else {
         *alarm = XSyncCreateAlarm(dpy, flags, &attr);
-        qDebug() << "Created alarm" << *alarm;
+//         qDebug() << "Created alarm" << *alarm;
     }
 
     XFlush(m_display);
