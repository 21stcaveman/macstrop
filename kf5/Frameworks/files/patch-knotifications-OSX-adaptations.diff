diff --git CMakeLists.txt CMakeLists.txt
index 6d09051..c086471 100644
--- CMakeLists.txt
+++ CMakeLists.txt
@@ -53,6 +53,9 @@ set(HAVE_XTEST ${X11_XTest_FOUND})
 if(X11_FOUND)
    find_package(Qt5X11Extras ${REQUIRED_QT_VERSION} REQUIRED NO_MODULE)
 endif()
+if(APPLE)
+   find_package(Qt5MacExtras ${REQUIRED_QT_VERSION} REQUIRED NO_MODULE)
+endif()
 
 find_package(KF5WindowSystem ${KF5_DEP_VERSION} REQUIRED)
 find_package(KF5Config ${KF5_DEP_VERSION} REQUIRED)
diff --git src/CMakeLists.txt src/CMakeLists.txt
index 7eb3125..c835ee0 100644
--- src/CMakeLists.txt
+++ src/CMakeLists.txt
@@ -89,6 +89,10 @@ if(X11_FOUND)
    target_link_libraries(KF5Notifications PRIVATE ${X11_X11_LIB} Qt5::X11Extras)
 endif()
 
+if(APPLE)
+  target_link_libraries(KF5Notifications PRIVATE Qt5::MacExtras)
+endif()
+
 if(X11_XTest_FOUND)
   target_link_libraries(KF5Notifications PRIVATE ${X11_XTest_LIB})
 endif()
diff --git src/kstatusnotifieritem.cpp src/kstatusnotifieritem.cpp
index f9bf460..272e01e 100644
--- src/kstatusnotifieritem.cpp
+++ src/kstatusnotifieritem.cpp
@@ -33,6 +33,10 @@
 #include <QMovie>
 #include <QPainter>
 #include <qstandardpaths.h>
+#ifdef Q_OS_OSX
+#include <qfontdatabase.h>>
+#include <QtMac>
+#endif
 
 #include <kwindowinfo.h>
 #include <kwindowsystem.h>
@@ -268,6 +272,36 @@ QString KStatusNotifierItem::attentionMovieName() const
 
 //ToolTip
 
+#ifdef Q_OS_OSX
+static void setTrayToolTip(KStatusNotifierLegacyIcon *systemTrayIcon, const QString &title, const QString &subTitle)
+{
+    if (systemTrayIcon) {
+        bool tEmpty = title.isEmpty(),
+                    stEmpty = subTitle.isEmpty();
+                    if (tEmpty) {
+                        if (!stEmpty) {
+                            systemTrayIcon->setToolTip(subTitle);
+                        } else {
+                            systemTrayIcon->setToolTip(title);
+                        }
+                    } else {
+                        if (stEmpty) {
+                            systemTrayIcon->setToolTip(title);
+                        } else {
+                            systemTrayIcon->setToolTip(title + QStringLiteral("\n") + subTitle);
+                        }
+                    }
+    }
+}
+#else
+static void setTrayToolTip(KStatusNotifierLegacyIcon *systemTrayIcon, const QString &title, const QString &)
+{
+    if (systemTrayIcon) {
+        systemTrayIcon->setToolTip(title);
+    }
+}
+#endif
+
 void KStatusNotifierItem::setToolTip(const QString &iconName, const QString &title, const QString &subTitle)
 {
     if (d->toolTipIconName == iconName &&
@@ -280,10 +314,10 @@ void KStatusNotifierItem::setToolTip(const QString &iconName, const QString &tit
     d->toolTipIconName = iconName;
 
     d->toolTipTitle = title;
-    if (d->systemTrayIcon) {
-        d->systemTrayIcon->setToolTip(title);
-    }
-
+//     if (d->systemTrayIcon) {
+//         d->systemTrayIcon->setToolTip(title);
+//     }
+    setTrayToolTip(d->systemTrayIcon, title, subTitle);
     d->toolTipSubTitle = subTitle;
     emit d->statusNotifierItemDBus->NewToolTip();
 }
@@ -301,9 +335,10 @@ void KStatusNotifierItem::setToolTip(const QIcon &icon, const QString &title, co
     d->toolTipIcon = icon;
 
     d->toolTipTitle = title;
-    if (d->systemTrayIcon) {
-        d->systemTrayIcon->setToolTip(title);
-    }
+//     if (d->systemTrayIcon) {
+//         d->systemTrayIcon->setToolTip(title);
+//     }
+    setTrayToolTip(d->systemTrayIcon, title, subTitle);
 
     d->toolTipSubTitle = subTitle;
     emit d->statusNotifierItemDBus->NewToolTip();
@@ -350,9 +385,10 @@ void KStatusNotifierItem::setToolTipTitle(const QString &title)
 
     d->toolTipTitle = title;
     emit d->statusNotifierItemDBus->NewToolTip();
-    if (d->systemTrayIcon) {
-        d->systemTrayIcon->setToolTip(title);
-    }
+//     if (d->systemTrayIcon) {
+//         d->systemTrayIcon->setToolTip(title);
+//     }
+    setTrayToolTip(d->systemTrayIcon, title, d->toolTipSubTitle);
 }
 
 QString KStatusNotifierItem::toolTipTitle() const
@@ -367,6 +403,9 @@ void KStatusNotifierItem::setToolTipSubTitle(const QString &subTitle)
     }
 
     d->toolTipSubTitle = subTitle;
+#ifdef Q_OS_OSX
+    setTrayToolTip(d->systemTrayIcon, d->toolTipTitle, subTitle);
+#endif
     emit d->statusNotifierItemDBus->NewToolTip();
 }
 
@@ -515,7 +554,15 @@ void KStatusNotifierItem::showMessage(const QString &title, const QString &messa
     }
 
     uint id = 0;
-    d->notificationsClient->Notify(d->title, id, icon, title, message, QStringList(), QVariantMap(), timeout);
+#ifdef Q_OS_OSX
+    if (d->systemTrayIcon) {
+        // Growl is not needed anymore for QSystemTrayIcon::showMessage() since OS X 10.8
+        d->systemTrayIcon->showMessage(title, message, QSystemTrayIcon::Information, timeout);
+    } else
+#endif
+    {
+        d->notificationsClient->Notify(d->title, id, icon, title, message, QStringList(), QVariantMap(), timeout);
+    }
 }
 
 QString KStatusNotifierItem::title() const
@@ -529,6 +576,9 @@ void KStatusNotifierItem::activate(const QPoint &pos)
     //FIXME: always true?
     if (d->status == NeedsAttention) {
         d->status = Active;
+#ifdef Q_OS_OSX
+        QtMac::setBadgeLabelText(QString());
+#endif
         emit d->statusNotifierItemDBus->NewStatus(metaObject()->enumerator(metaObject()->indexOfEnumerator("ItemStatus")).valueToKey(d->status));
     }
 
@@ -701,8 +751,24 @@ void KStatusNotifierItemPrivate::init(const QString &extraId)
     if (title.isEmpty()) {
         title = QCoreApplication::applicationName();
     }
+#ifdef Q_OS_OSX
+    // OS X doesn't have texted separators so we emulate QAction::addSection():
+    // we first add an action with the desired text (title) and icon
+    titleAction = m->addAction(qApp->windowIcon(), title);
+    // this action should be disabled
+    titleAction->setEnabled(false);
+    // Give the titleAction a visible menu icon:
+    // Systray icon and menu ("menu extra") are often used by applications that provide no other interface.
+    // It is thus reasonable to show the application icon in the menu; Finder, Dock and App Switcher
+    // all show it in addition to the application name (and Apple's input "menu extra" also shows icons).
+    titleAction->setIconVisibleInMenu(true);
+    m->addAction(titleAction);
+    // now add a regular separator
+    m->addSeparator();
+#else
     titleAction = m->addSection(qApp->windowIcon(), title);
     m->setTitle(title);
+#endif
     q->setContextMenu(m);
 
     QAction *action = new QAction(q);
@@ -839,15 +905,52 @@ void KStatusNotifierItemPrivate::setLegacySystemTrayEnabled(bool enabled)
 void KStatusNotifierItemPrivate::syncLegacySystemTrayIcon()
 {
     if (status == KStatusNotifierItem::NeedsAttention) {
-        if (!movieName.isNull()) {
-            if (!movie) {
-                movie = new QMovie(movieName);
+        QtMac::setBadgeLabelText(QStringLiteral("!"));
+        if (attentionIconName.isNull() && attentionIcon.isNull()) {
+            // code adapted from kmail's KMSystemTray::updateCount()
+            int overlaySize = 22;
+            QIcon attnIcon = qApp->windowIcon();
+            if (!attnIcon.availableSizes().isEmpty()) {
+                overlaySize = attnIcon.availableSizes().at(0).width();
             }
-            systemTrayIcon->setMovie(movie);
-        } else if (!attentionIconName.isNull()) {
-            systemTrayIcon->setIcon(QIcon::fromTheme(attentionIconName));
+            QFont labelFont = QFontDatabase::systemFont(QFontDatabase::GeneralFont);
+            labelFont.setBold(true);
+            QFontMetrics qfm(labelFont);
+            float attnHeight = overlaySize * 0.667;
+            if (qfm.height() > attnHeight) {
+                float labelSize = attnHeight;
+                labelFont.setPointSizeF(labelSize);
+            }
+            // Paint the label in a pixmap
+            QPixmap overlayPixmap(overlaySize, overlaySize);
+            overlayPixmap.fill(Qt::transparent);
+
+            QPainter p(&overlayPixmap);
+            p.setFont(labelFont);
+            p.setBrush(Qt::NoBrush);
+            // this sort of badge/label is red on OS X
+            p.setPen(QColor(224,0,0));
+            p.setOpacity(1.0);
+            // use U+2022, the Unicode bullet
+            p.drawText(overlayPixmap.rect(), Qt::AlignRight|Qt::AlignTop, QString(QChar(0x2022)));
+            p.end();
+
+            QPixmap iconPixmap = attnIcon.pixmap(overlaySize, overlaySize);
+            QPainter pp(&iconPixmap);
+            pp.drawPixmap(0, 0, overlayPixmap);
+            pp.end();
+            systemTrayIcon->setIcon(iconPixmap);
         } else {
-            systemTrayIcon->setIcon(attentionIcon);
+            if (!movieName.isNull()) {
+                if (!movie) {
+                    movie = new QMovie(movieName);
+                }
+                systemTrayIcon->setMovie(movie);
+            } else if (!attentionIconName.isNull()) {
+                systemTrayIcon->setIcon(QIcon::fromTheme(attentionIconName));
+            } else {
+                systemTrayIcon->setIcon(attentionIcon);
+            }
         }
     } else {
         if (!iconName.isNull()) {
@@ -855,6 +958,9 @@ void KStatusNotifierItemPrivate::syncLegacySystemTrayIcon()
         } else {
             systemTrayIcon->setIcon(icon);
         }
+#ifdef Q_OS_OSX
+        QtMac::setBadgeLabelText(QString());
+#endif
     }
 
     systemTrayIcon->setToolTip(toolTipTitle);
diff --git tests/kstatusnotifieritemtest.cpp tests/kstatusnotifieritemtest.cpp
index 973fc85..3d57f72 100644
--- tests/kstatusnotifieritemtest.cpp
+++ tests/kstatusnotifieritemtest.cpp
@@ -91,6 +91,10 @@ int main(int argc, char **argv)
         iconName = parser.value(QStringLiteral("active-icon"));
     }
 
+    if (!iconName.isEmpty()) {
+        app.setWindowIcon(QIcon::fromTheme(iconName));
+    }
+
     QLabel *l = new QLabel(QStringLiteral("System Tray Main Window"), 0L);
     for (int x = 0; x < ksniCount; ++x) {
         KStatusNotifierItem *tray = new KStatusNotifierItem(l);
