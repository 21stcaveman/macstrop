diff --git src/notifybyaudio_canberra.cpp src/notifybyaudio_canberra.cpp
index c8e005197f0e7759ad2f9bc3eceff8162ddcca5e..f2012e932296fde3c5852355a628cde50a4037b1 100644
--- src/notifybyaudio_canberra.cpp
+++ src/notifybyaudio_canberra.cpp
@@ -24,6 +24,7 @@
 #include "debug_p.h"
 
 #include <QGuiApplication>
+#include <QApplication>
 #include <QFile>
 #include <QFileInfo>
 #include <QIcon>
@@ -68,12 +69,21 @@ void NotifyByAudio::notify(KNotification *notification, KNotifyConfig *config)
 {
     const QString soundFilename = config->readEntry(QStringLiteral("Sound"));
     if (soundFilename.isEmpty()) {
-        qCWarning(LOG_KNOTIFICATIONS) << "Audio notification requested, but no sound file provided in notifyrc file, aborting audio notification";
+        qCWarning(LOG_KNOTIFICATIONS) << "Audio notification requested because" << notification->text()
+            << "/" << config->eventid
+            << ", but no sound file provided in file" << config->configfile->name() << ", aborting audio notification";
+        QApplication::beep();
 
         finish(notification);
         return;
     }
 
+    if (soundFilename.compare(QStringLiteral("beep"), Qt::CaseInsensitive) == 0) {
+        QApplication::beep();
+        finish(notification);
+        return;
+    }
+
     QUrl soundURL;
     const auto dataLocations = QStandardPaths::standardLocations(QStandardPaths::GenericDataLocation);
     for (const QString &dataLocation : dataLocations) {
@@ -88,7 +98,10 @@ void NotifyByAudio::notify(KNotification *notification, KNotifyConfig *config)
         soundURL.clear();
     }
     if (soundURL.isEmpty()) {
-        qCWarning(LOG_KNOTIFICATIONS) << "Audio notification requested, but sound file from notifyrc file was not found, aborting audio notification";
+        qCWarning(LOG_KNOTIFICATIONS) << "Audio notification requested" << notification->text()
+            << ", but sound file" << soundURL.fileName() << "from file" << config->configfile->name()
+            << "was not found, aborting audio notification";
+        QApplication::beep();
         finish(notification);
         return;
     }
diff --git src/notifybyaudio_phonon.cpp src/notifybyaudio_phonon.cpp
index ae3c97a467f3457fd31123365f80582f4b16b5ea..0eab7116fa5e70e4f175a849c9122f4541845b55 100644
--- src/notifybyaudio_phonon.cpp
+++ src/notifybyaudio_phonon.cpp
@@ -22,6 +22,7 @@
 #include "notifybyaudio_phonon.h"
 #include "debug_p.h"
 
+#include <QApplication>
 #include <QDateTime>
 #include <QFile>
 #include <QTextStream>
@@ -49,17 +50,26 @@ NotifyByAudio::~NotifyByAudio()
 
 void NotifyByAudio::notify(KNotification *notification, KNotifyConfig *config)
 {
-    if (!m_audioOutput) {
-        m_audioOutput = new Phonon::AudioOutput(Phonon::NotificationCategory, this);
-    }
     const QString soundFilename = config->readEntry(QStringLiteral("Sound"));
     if (soundFilename.isEmpty()) {
-        qCWarning(LOG_KNOTIFICATIONS) << "Audio notification requested, but no sound file provided in notifyrc file, aborting audio notification";
+        qCWarning(LOG_KNOTIFICATIONS) << "Audio notification requested because" << notification->text()
+            << "/" << config->eventid
+            << ", but no sound file provided in file" << config->configfile->name() << ", aborting audio notification";
+        QApplication::beep();
+
+        finish(notification);
+        return;
+    }
 
+    if (soundFilename.compare(QStringLiteral("beep"), Qt::CaseInsensitive) == 0) {
+        QApplication::beep();
         finish(notification);
         return;
     }
 
+    if (!m_audioOutput) {
+        m_audioOutput = new Phonon::AudioOutput(Phonon::NotificationCategory, this);
+    }
     QUrl soundURL;
     const auto dataLocations = QStandardPaths::standardLocations(QStandardPaths::GenericDataLocation);
     for (const QString &dataLocation : dataLocations) {
@@ -74,7 +84,10 @@ void NotifyByAudio::notify(KNotification *notification, KNotifyConfig *config)
         soundURL.clear();
     }
     if (soundURL.isEmpty()) {
-        qCWarning(LOG_KNOTIFICATIONS) << "Audio notification requested, but sound file from notifyrc file was not found, aborting audio notification";
+        qCWarning(LOG_KNOTIFICATIONS) << "Audio notification requested" << notification->text()
+            << ", but sound file" << soundURL.fileName() << "from file" << config->configfile->name()
+            << "was not found, aborting audio notification";
+        QApplication::beep();
         finish(notification);
         return;
     }
