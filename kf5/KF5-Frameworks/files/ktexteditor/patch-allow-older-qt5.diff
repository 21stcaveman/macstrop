# This replaces QStringView with a QStringViewStub == QString
# the "variable_test" autotest passes.
# It will undoubtedly require changes in dependent code that makes use of the functionality

diff --git autotests/src/variable_test.cpp autotests/src/variable_test.cpp
index 335dccabfcbb33ccd6dd5e76380d24acd0e452d0..fd10bb822cb6cff8987d1de7f6d71727cd6f4d60 100644
--- autotests/src/variable_test.cpp
+++ autotests/src/variable_test.cpp
@@ -28,6 +28,10 @@
 #include <QtTest>
 #include <QUuid>
 
+#ifdef KTEXTEDITOR_QStringViewIsStub
+#define QStringView QStringViewStub
+#endif
+
 using namespace KTextEditor;
 
 QTEST_MAIN(VariableTest)
diff --git src/include/ktexteditor/editor.h src/include/ktexteditor/editor.h
index da2cab51ddd37bb8c5201748f676b0ea0de13ac8..664f66cfbc76b0aecc8811e049009fa9c2a9f2bc 100644
--- src/include/ktexteditor/editor.h
+++ src/include/ktexteditor/editor.h
@@ -27,6 +27,11 @@
 class KAboutData;
 class KConfig;
 
+#if QT_VERSION < QT_VERSION_CHECK(5, 10, 0) && !defined(KTEXTEDITOR_QStringViewIsStub)
+using QStringViewStub = QString;
+#define KTEXTEDITOR_QStringViewIsStub
+#endif
+
 /**
  * The KTextEditor namespace contains all the public API that is required
  * to use the KTextEditor component. Using the KTextEditor interfaces is
@@ -252,7 +257,11 @@ public:
     /**
      * Function that is called to expand a variable in @p text.
      */
+#ifndef KTEXTEDITOR_QStringViewIsStub
     using ExpandFunction = QString (*)(const QStringView& text, KTextEditor::View* view);
+#else
+    using ExpandFunction = QString (*)(const QStringViewStub& text, KTextEditor::View* view);
+#endif
 
     /**
      * Registers a variable called @p name for exact matches.
diff --git src/utils/kateglobal.cpp src/utils/kateglobal.cpp
index 283de62aa536c96e5cf1b28a2512de0d438e1b1b..15e025d10b6d4187eba733032135d01362a8ce7c 100644
--- src/utils/kateglobal.cpp
+++ src/utils/kateglobal.cpp
@@ -67,6 +67,10 @@
 #include <git2.h>
 #endif
 
+#ifdef KTEXTEDITOR_QStringViewIsStub
+#define QStringView QStringViewStub
+#endif
+
 namespace {
 
 void registerVariables(KTextEditor::Editor * editor)
@@ -159,12 +163,20 @@ void registerVariables(KTextEditor::Editor * editor)
 
     editor->registerVariablePrefix(QStringLiteral("JS:"), i18n("Evaluate simple JavaScript statements."), [](const QStringView& str, KTextEditor::View*) {
         QJSEngine jsEngine;
+#ifndef KTEXTEDITOR_QStringViewIsStub
         const QJSValue out = jsEngine.evaluate(str.toString());
+#else
+        const QJSValue out = jsEngine.evaluate(str);
+#endif
         return out.toString();
     });
 
     editor->registerVariableMatch(QStringLiteral("UUID"), i18n("Generate a new UUID."), [](const QStringView&, KTextEditor::View*) {
+#ifndef KTEXTEDITOR_QStringViewIsStub
         return QUuid::createUuid().toString(QUuid::WithoutBraces);
+#else
+        return QUuid::createUuid().toString().remove(QLatin1Char('{')).remove(QLatin1Char('}'));
+#endif
     });
 }
 }
diff --git src/utils/katemacroexpander.cpp src/utils/katemacroexpander.cpp
index 364cf7801022bfbc1ec93bf216c9df7bf9c241c0..ad0eb7362e5e944cf24c0dd902ab2c1c456b1124 100644
--- src/utils/katemacroexpander.cpp
+++ src/utils/katemacroexpander.cpp
@@ -21,6 +21,10 @@
 
 #include <KTextEditor/Editor>
 
+#ifdef KTEXTEDITOR_QStringViewIsStub
+#define QStringView QStringViewStub
+#endif
+
 /**
  * Find closing bracket for @p str starting a position @p pos.
  */
diff --git src/utils/variable.cpp src/utils/variable.cpp
index 07690782da69ff50ef6041be8162664dcd47b35e..58d7ccd3a40dc6382e092d2e93e2c38cb1365cad 100644
--- src/utils/variable.cpp
+++ src/utils/variable.cpp
@@ -18,6 +18,10 @@
 */
 #include "variable.h"
 
+#ifdef KTEXTEDITOR_QStringViewIsStub
+#define QStringView QStringViewStub
+#endif
+
 namespace KTextEditor
 {
 
diff --git src/utils/variable.h src/utils/variable.h
index 22d02348b86e58274286103dd03b094fae614d1d..cac3e71f3a30c1d5ed6e12f69558f44106f9fadd 100644
--- src/utils/variable.h
+++ src/utils/variable.h
@@ -23,6 +23,11 @@
 #include <QStringList>
 #include <QVariant>
 
+#if QT_VERSION < QT_VERSION_CHECK(5, 10, 0) && !defined(KTEXTEDITOR_QStringViewIsStub)
+using QStringViewStub = QString;
+#define KTEXTEDITOR_QStringViewIsStub
+#endif
+
 namespace KTextEditor
 {
     class View;
@@ -51,7 +56,11 @@ public:
      * Function that is called to expand a variable in @p text.
      * @param text
      */
+#ifndef KTEXTEDITOR_QStringViewIsStub
     using ExpandFunction = QString (*)(const QStringView& text, KTextEditor::View* view);
+#else
+    using ExpandFunction = QString (*)(const QStringViewStub& text, KTextEditor::View* view);
+#endif
 
     /**
      * Constructor defining a Variable by its @p name, its @p description, and
@@ -94,7 +103,11 @@ public:
      *
      * @return the expanded variable.
      */
+#ifndef KTEXTEDITOR_QStringViewIsStub
     QString evaluate(const QStringView& prefix, KTextEditor::View * view) const;
+#else
+    QString evaluate(const QStringViewStub& prefix, KTextEditor::View * view) const;
+#endif
 
 private:
     QString m_name;
