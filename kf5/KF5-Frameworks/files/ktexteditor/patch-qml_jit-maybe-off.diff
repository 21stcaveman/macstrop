diff --git src/script/katescript.cpp src/script/katescript.cpp
index 56d90013949855191b603c06cbc221d29cb9a0bf..5160fd6811587a7d8a429a5c4db64465d9fabdb6 100644
--- src/script/katescript.cpp
+++ src/script/katescript.cpp
@@ -40,6 +40,51 @@
 
 //END
 
+class V4JITDisabler
+{
+public:
+    V4JITDisabler()
+        : m_hasCache(false)
+    {
+#if QT_VERSION < QT_VERSION_CHECK(5, 9, 1)
+        if (qEnvironmentVariableIsSet("QV4_FORCE_INTERPRETER")) {
+            m_cachedValue = qgetenv("QV4_FORCE_INTERPRETER");
+            m_hasCache = true;
+        }
+        // disable the JIT for this call as it may trigger a bug in QML
+        // that would crash the application. Crude but effective.
+        qputenv("QV4_FORCE_INTERPRETER", QByteArrayLiteral("1"));
+        qCDebug(LOG_KTE) << "QV4_FORCE_INTERPRETER set to" << qgetenv("QV4_FORCE_INTERPRETER");
+#endif
+    }
+
+    ~V4JITDisabler()
+    {
+#if QT_VERSION < QT_VERSION_CHECK(5, 9, 1)
+        if (m_hasCache) {
+            // restore
+            qputenv("QV4_FORCE_INTERPRETER", m_cachedValue);
+            qCWarning(LOG_KTE) << "QV4_FORCE_INTERPRETER reset to" << qgetenv("QV4_FORCE_INTERPRETER");
+        } else {
+            qunsetenv("QV4_FORCE_INTERPRETER");
+            qCDebug(LOG_KTE) << "QV4_FORCE_INTERPRETER unset";
+            if (!s_infoPrinted) {
+                QTextStream info(stderr);
+                info << i18n("Please disregard any warnings about JIT being disabled for QML; "
+                    "this applies only to KTextEditor scripts.\n");
+                s_infoPrinted = true;
+            }
+        }
+#endif
+    }
+
+    QByteArray m_cachedValue;
+    bool m_hasCache;
+    static bool s_infoPrinted;
+};
+
+bool V4JITDisabler::s_infoPrinted = false;
+
 KateScript::KateScript(const QString &urlOrScript, enum InputType inputType)
     : m_loaded(false)
     , m_loadSuccessful(false)
@@ -118,6 +163,11 @@ bool KateScript::load()
     m_loaded = true;
     m_loadSuccessful = false; // here set to false, and at end of function to true
 
+    // disable the JIT for this call as it may trigger a bug in QML
+    // that would crash the application. V4JITDisabler disables the JIT
+    // in affected Qt versions, and restores it before exitting from this function.
+    V4JITDisabler maybeDisableQMLJITCompiler;
+
     // read the script file into memory
     QString source;
     if (m_inputType == InputURL) {
