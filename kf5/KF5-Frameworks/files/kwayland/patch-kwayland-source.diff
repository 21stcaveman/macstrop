diff --git src/client/plasmawindowmanagement.cpp src/client/plasmawindowmanagement.cpp
index 2f95802d87eff0ec8d2e68ea12b0fcf8e9def889..55a3bc12890aeeca31f97d5a6e6dd41445f8c154 100644
--- src/client/plasmawindowmanagement.cpp
+++ src/client/plasmawindowmanagement.cpp
@@ -553,9 +553,20 @@ void PlasmaWindow::Private::iconChangedCallback(void *data, org_kde_plasma_windo
     auto p = cast(data);
     Q_UNUSED(window);
     int pipeFds[2];
-    if (pipe2(pipeFds, O_CLOEXEC|O_NONBLOCK) != 0) {
+#ifndef Q_OS_MACOS
+    if (pipe2(pipeFds, O_CLOEXEC|O_NONBLOCK) != 0)
+#else
+    if (pipe(pipeFds) != 0)
+#endif
+    {
         return;
     }
+#ifdef Q_OS_MACOS
+    fcntl(pipeFds[0], F_SETFD, FD_CLOEXEC);
+    fcntl(pipeFds[1], F_SETFD, FD_CLOEXEC);
+    fcntl(pipeFds[0], F_SETFL, O_NONBLOCK);
+    fcntl(pipeFds[1], F_SETFL, O_NONBLOCK);
+#endif
     org_kde_plasma_window_get_icon(p->window, pipeFds[1]);
     close(pipeFds[1]);
     const int pipeFd = pipeFds[0];
diff --git src/server/buffer_interface.cpp src/server/buffer_interface.cpp
index bd89d2f339458fbddd204b5a5cce671d463cbe05..9e7c8327b9f71b0f4b84d1cf8193f83e06370485 100644
--- src/server/buffer_interface.cpp
+++ src/server/buffer_interface.cpp
@@ -24,7 +24,9 @@ License along with this library.  If not, see <http://www.gnu.org/licenses/>.
 // Wayland
 #include <wayland-server.h>
 // EGL
+#ifndef Q_OS_MACOS
 #include <EGL/egl.h>
+#endif
 #include <QtGui/qopengl.h>
 
 namespace KWayland
@@ -32,11 +34,13 @@ namespace KWayland
 namespace Server
 {
 
+#ifdef EGL_VERSION
 namespace EGL
 {
 typedef GLboolean(*eglQueryWaylandBufferWL_func)(EGLDisplay dpy, struct wl_resource *buffer, EGLint attribute, EGLint *value);
 eglQueryWaylandBufferWL_func eglQueryWaylandBufferWL = nullptr;
 }
+#endif
 
 class BufferInterface::Private
 {
@@ -126,6 +130,7 @@ BufferInterface::Private::Private(BufferInterface *q, wl_resource *resource, Sur
             break;
         }
     } else if (parent) {
+#ifdef EGL_VERSION
         EGLDisplay eglDisplay = parent->global()->display()->eglDisplay();
         static bool resolved = false;
         using namespace EGL;
@@ -155,6 +160,7 @@ BufferInterface::Private::Private(BufferInterface *q, wl_resource *resource, Sur
                 }
             }
         }
+#endif
     }
 }
 
diff --git src/server/display.cpp src/server/display.cpp
index e46cbf8c4b38278b8f80ff3f1ee517cfd07c1102..d96039d2103e606d07ac232620451f273ca2fe22 100644
--- src/server/display.cpp
+++ src/server/display.cpp
@@ -64,7 +64,9 @@ License along with this library.  If not, see <http://www.gnu.org/licenses/>.
 
 #include <wayland-server.h>
 
+#ifndef Q_OS_MACOS
 #include <EGL/egl.h>
+#endif
 
 namespace KWayland
 {
@@ -88,7 +90,9 @@ public:
     QList<OutputDeviceInterface*> outputdevices;
     QVector<SeatInterface*> seats;
     QVector<ClientConnection*> clients;
+#ifdef EGL_VERSION
     EGLDisplay eglDisplay = EGL_NO_DISPLAY;
+#endif
 
 private:
     Display *q;
@@ -590,16 +594,23 @@ ClientConnection *Display::createClient(int fd)
 
 void Display::setEglDisplay(void *display)
 {
+#ifdef EGL_VERSION
     if (d->eglDisplay != EGL_NO_DISPLAY) {
         qCWarning(KWAYLAND_SERVER) << "EGLDisplay cannot be changed";
         return;
     }
     d->eglDisplay = (EGLDisplay)display;
+#endif
 }
 
 void *Display::eglDisplay() const
 {
+#ifdef EGL_VERSION
     return d->eglDisplay;
+#else
+    // just return nullptr which is the same as EGL_NO_DISPLAY
+    return nullptr;
+#endif
 }
 
 }
