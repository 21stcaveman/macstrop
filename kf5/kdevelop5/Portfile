# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id: Portfile 117140 2014-02-17 15:18:38Z nicos@macports.org $

PortSystem          1.0
PortGroup           muniversal 1.0
PortGroup           compiler_blacklist_versions 1.0
PortGroup           conflicts_build 1.0

set kf5.project     kdevelop
set kf5.virtualPath applications
set kf5.category    development
PortGroup           kf5 1.1

description         KDE/KF5 development IDE.
long_description    KDevelop5 is a free, open source IDE (Integrated \
                    Development Environment) for MS Windows, Mac OS X, \
                    Linux, Solaris and FreeBSD. It is a feature-full, \
                    plugin extensible IDE for C/C++ and other programming \
                    languages. It is based on KDevPlatform, and the KF5 \
                    and Qt libraries and is under development since 1998.
homepage            http://www.kdevelop.org/

platforms           darwin
license             GPL-2+

set PARSER "clang-parser"
subport ${name}-devel {
    description     ${description} This port follows git/master
    long_description \
                    ${long_description} This port follows git/master
}

subport ${name}-${PARSER} {
    description     Clang-based C/C++ parser plugin for KDevelop
    long_description \
                    ${description}
    conflicts-append \
                    ${name}-${PARSER}-devel
}

subport ${name}-${PARSER}-devel {
    description     Clang-based C/C++ parser plugin for KDevelop
    long_description \
                    ${description}
    conflicts-append \
                    ${name}-${PARSER}
}

subport ${name}-translations {
    long_description \
                    This port contains the KDevelop translations.
    depends_run-append \
                    path:bin/kdevelop5:${name}
}

if {${subport} eq "${name}"} {
    conflicts-append \
                    ${name}-devel
    depends_run-append \
                    path:share/kdevclangsupport:${name}-${PARSER}
}

if {${subport} eq "${name}-devel"} {
    conflicts-append \
                    ${name}
    depends_run-append \
                    path:share/kdevclangsupport:${name}-${PARSER}-devel
}

if {(${subport} eq "${name}-${PARSER}") || (${subport} eq "${name}-${PARSER}-devel")} {
    variant llvm35 conflicts llvm36 llvm37 llvm38 llvm39 system description "Use LLVM/Clang 3.5 for the C/C++ parser" {
        depends_lib-append \
                    port:llvm-3.5 port:clang-3.5
        configure.args-append \
                    -DLLVM_ROOT=${prefix}/libexec/llvm-3.5
    }
    variant llvm36 conflicts llvm35 llvm37 llvm38 llvm39 system description "Use LLVM/Clang 3.6 for the C/C++ parser" {
        depends_lib-append \
                    port:llvm-3.6 port:clang-3.6
        configure.args-append \
                    -DLLVM_ROOT=${prefix}/libexec/llvm-3.6
    }
    variant llvm37 conflicts llvm35 llvm36 llvm38 llvm39 system description "Use LLVM/Clang 3.7 for the C/C++ parser" {
        depends_lib-append \
                    port:llvm-3.7 port:clang-3.7
        configure.args-append \
                    -DLLVM_ROOT=${prefix}/libexec/llvm-3.7
    }
    variant llvm38 conflicts llvm35 llvm36 llvm37 llvm39 system description "Use LLVM/Clang 3.8 for the C/C++ parser" {
        depends_lib-append \
                    port:llvm-3.8 port:clang-3.8
        configure.args-append \
                    -DLLVM_ROOT=${prefix}/libexec/llvm-3.8
    }
    variant llvm39 conflicts llvm35 llvm36 llvm37 llvm38 system description "Use LLVM/Clang 3.9 for the C/C++ parser" {
        depends_lib-append \
                    port:llvm-3.9 port:clang-3.9
        configure.args-append \
                    -DLLVM_ROOT=${prefix}/libexec/llvm-3.9
    }
    variant system conflicts llvm35 llvm36 llvm37 llvm38 llvm39 description "Use the system LLVM/Clang for the C/C++ parser" {}

    if {![variant_isset llvm35] && ![variant_isset llvm36]
            && ![variant_isset llvm37] && ![variant_isset llvm38] && ![variant_isset llvm39]
            && ![variant_isset system]} {
        default_variants \
                    +llvm38
    }
} elseif {${subport} eq "${name}" || ${subport} eq "${name}-devel"} {
    platform darwin {
        variant gdb description {experimental: build the GDB debugger plugin} {
            depends_run-append \
                    port:gdb
        }
    }
}

pre-fetch {
    if {[file exists ${prefix}/include/kdevplatform/kdevplatformversion.h]} {
        # this file is called kdevplatform_version.h in kdevplatform KF5
        ui_error "You have an incompatible KDE4 version of kdevplatform installed & active"
        return -code error "Incompatible KDE4 version installed & active"
    }
}

if {(${subport} eq "${name}-devel") || (${subport} eq "${name}-${PARSER}-devel")} {
    fetch.type      git
    git.url     git://anongit.kde.org/kdevelop
#    v4.90.91-430-g46c0ea4
#     git.branch      46c0ea43dd3f51cb45e000b528f36bbc83802fac
#     version         4.90.91.430
#     v4.90.91-524-ga56cee9
#     git.branch      f9b262cd926151c30f4eae42ac7a7e56c7392edf
#     version         4.90.91.529
#     v4.90.91-551-g4a90319
    git.branch      4a903199af2c6add256ed81624ae6e9e6698009c
    version         4.90.91.551
    depends_lib-append \
                    port:kf5-kdevplatform-devel
    worksrcdir      ${name}-5
    distname        ${name}-5
} else {
    version         5.0.1
    use_xz          yes
    set branch      [join [lrange [split ${version} .] 0 1] .]
    use_xz          yes
    master_sites    http://download.kde.org/stable/kdevelop/${version}/src
    distname        ${kf5.project}-${version}
    checksums       rmd160  59f9ae3b1d4a7390af6adf151311a6afe6c9df4e \
                    sha256  f8ef3bbd31d1f05627a554e0092b16faba3e332dd21f4e83db20f3789cea3465
#     depends_lib-append \
#                     path:${kf5.libs_dir}/libKDevPlatformShell.${kf5.libs_ext}:kf5-kdevplatform
    depends_lib-append \
                    port:kf5-kdevplatform
    # there is no formal need to disallow building against kf5-kdevplatform-devel, but in practice
    # it turns out to be a good idea not to allow it.
    conflicts_build-append \
                    port:kf5-kdevplatform-devel
}

# port:kdevelop (KDE4) won't build if kf5-kdevplatform is active, but that handicap
# is not mutual. Keep this block as a reminder though.
# conflicts_build-append \
#                     port:kdevplatform \
#                     port:kdevplatform-devel \
#                     port:kdevplatform-git

kf5.depends_frameworks \
                    kcmutils kconfig kdeclarative kdoctools \
                    ki18n kiconthemes kio kitemmodels \
                    kitemviews knewstuff knotifyconfig \
                    kparts kservice ktexteditor \
                    kwindowsystem kxmlgui threadweaver
depends_lib-append  port:kf5-libksysguard

platform darwin {
compiler.blacklist *gcc* {clang < 602} macports-clang-3.3 macports-clang-3.4 macports-clang-3.5
    if {[file exists ${prefix}/bin/clang-mp-3.7]} {
        compiler.whitelist-prepend macports-clang-3.7
    }
    if {[file exists ${prefix}/bin/clang-mp-3.8]} {
        compiler.whitelist-prepend macports-clang-3.8
    }
    if {[file exists ${prefix}/bin/clang-mp-3.9]} {
        compiler.whitelist-prepend macports-clang-3.9
    }
    compiler.fallback-prepend   macports-clang-3.9 macports-clang-3.8 macports-clang-3.7 macports-clang-3.6
}

#Binaries do not link to openssl
license_noconflict  openssl

#Using c++0x for Lion and higher in case of clang 64-bit
if {${configure.compiler} eq "clang" && ${os.platform} eq "darwin" && ${os.major} >= 11} {
    lappend merger_configure_args(x86_64)   -DHAVE_UNORDERED_MAP=1
    if {${build_arch} eq "x86_64" && ![variant_isset universal]} {
        configure.args-append               -DHAVE_UNORDERED_MAP=1
    }
}

pre-configure {
    #Suppress these arguments from cmake portgroup 
    #which break compilation for develop
    configure.args-delete   -DCMAKE_OSX_DEPLOYMENT_TARGET="" \
                            -DCMAKE_OSX_SYSROOT=/
}

# most patchfiles are applied for both subports even if the clang-parser
# port only needs the support4Objc patch. This is just so I (rjvbertin)
# can use symlinks to a single source copy .
patchfiles-append   patch-separate-ide-and-parser.diff
#     patch-cmakeprojects-avoid-crashing.diff no longer needed?
patchfiles-append   patch-missing-header-declbuilder.diff \
                    patch-no-krunner.diff \
                    patch-rename-kdevexclam.diff \
                    patch-optlocal-manpages.diff \
                    patch-open-docs-from-Finder.diff \
                    patch-menu-under-x11.diff \
                    patch-cmake-macports-first.diff \
                    patch-extended-support4Objc.patch

platform darwin {
    # on OS X only lldb can be used, so don't build the gdb-based debugging facility
    if {![variant_isset gdb]} {
        if {${subport} eq "${name}-devel"} {
            patchfiles-append \
                    devel/patch-disable-gdbugger.diff
        } else {
            patchfiles-append \
                    patch-disable-gdbugger.diff
        }
    }
}
platform linux {
    patchfiles-append \
                    patch-binarypath=kdevelop5.diff
}

if {${subport} eq "${name}-devel"} {
    patchfiles-append \
                    devel/patch-kdevplatform-add-style-menu-uirc.diff \
                    devel/patch-lldbsession2.diff
} else {
    patchfiles-append \
                    patch-kdevplatform-add-style-menu-uirc.diff
}

if {${subport} eq "${name}-translations"} {
    # extract only the translations and CMake stuff
    extract.post_args-append \
                   ${distname}/CMakeLists.txt ${distname}/cmake ${distname}/po
    patchfiles      patch-only-translations.diff
} elseif {${subport} eq ${name} || ${subport} eq "${name}-clang-parser"} {
    patchfiles-append \
                    patch-no-translations.diff
}

if {${subport} ne "${name}-translations"} {
    post-patch {
        reinplace "s|@PREFIX@|${prefix}|g" ${worksrcpath}/projectmanagers/cmake/cmakeutils.cpp
        reinplace "s|/usr/local|${prefix}|g" ${worksrcpath}/projectmanagers/cmake/cmakeutils.cpp
        reinplace "s|/usr/bin/python|${prefix}/bin/python|g" ${worksrcpath}/languages/qmljs/libs/qmljs/parser/changeLicense.py
        foreach p [glob -nocomplain ${worksrcpath}/languages/qmljs/nodejsmodules/*.py] {
            reinplace "s|/usr/bin/python3|${prefix}/bin/python3|g" ${p}
        }
    }
}


if {(${subport} eq "${name}") || (${subport} eq "${name}-devel")} {
    # the build system will check for kdevelop-pg-qt, but the actual dependency appears
    # to be a run-time one on kdev-pg-qt.
    depends_build-append \
                    path:include/kdevelop-pg-qt/kdevelop-pg-qt_version.h:kf5-kdevelop-pg-qt
    # # build dependency on Oxygen is only required when not building with the shipped icon (from Breeze)
    # depends_build-append \
    #                     ${kf5.oxygen-icons_dep}
    depends_run-append  path:bin/kdev-pg-qt:kf5-kdevelop-pg-qt \
                    port:cmake

    depends_lib-append  port:kf5-kate \
                    ${kf5.oxygen-icons_dep}

    configure.args-append \
                    -DKDEVELOP_BUILD_IDE=ON \
                    -DKDEVELOP_BUILD_CLANG_PARSER=OFF \
                    -DKDEVELOP_SINGLE_APP=OFF

    variant apidocs description {Generate the API documentation} {}
    if {![variant_isset apidocs]} {
        kf5.allow_docs_generation no
    } else {
        default_variants +docs
        kf5.allow_docs_generation yes
    }

    patchfiles-append \
                    patch-okteta.diff
    variant okteta description "Adds support for okteta" {
        depends_lib-append  port:kf5-okteta
        patchfiles-delete   patch-okteta.diff
    }

    platform darwin {
        variant single_app description {Use QtSingleApplication as the principal class (upstream option)} {
            configure.args-replace \
                        -DKDEVELOP_SINGLE_APP=OFF \
                        -DKDEVELOP_SINGLE_APP=ON
        }

        variant kde4compat description {allow installation alongside KDE4's port:kdevelop} {}

        post-destroot {
            # kdevelop is very chatty; protect the system.log when started through LaunchServices:
            move ${destroot}${kf5.applications_dir}/kdevelop.app/Contents/MacOS/kdevelop \
                 ${destroot}${kf5.applications_dir}/kdevelop.app/Contents/MacOS/kdevelop.bin
            xinstall -m 755 -W ${filespath} detach-terminal.sh ${destroot}${kf5.applications_dir}/kdevelop.app/Contents/MacOS/kdevelop
            # install a shortcut in ${prefix}/bin (sic, kdevelop, because on linux we'll build an exec with that name)
#             xinstall -m 755 ${filespath}/kdevelop5.sh ${destroot}${prefix}/bin/kdevelop
#             reinplace "s|@KDEAPPDIR@|${kf5.applications_dir}|g" ${destroot}${prefix}/bin/kdevelop
            kf5.add_app_wrapper kdevelop kdevelop kdevelop.bin
            reinplace "s|KDE_SESSION_VERSION=5|KDE_SESSION_VERSION=5 KDEV_DISABLE_SPLASH=1|g" ${destroot}${prefix}/bin/kdevelop
            if {[variant_isset kde4compat]} {
                file rename ${destroot}${prefix}/share/doc/HTML/en/kdevelop ${destroot}${prefix}/share/doc/HTML/en/kdevelop5
                file rename ${destroot}${prefix}/share/mime/packages/kdevelop.xml ${destroot}${prefix}/share/mime/packages/kdevelop5.xml
                file delete -force ${destroot}${prefix}/share/icons
            }
        }
        notes-append "Try adding ${prefix}/bin to the launchctl PATH if KDevelop complains about finding \
            plugins when started through the Finder. For instance: `launchctl setenv PATH \
            \"${prefix}/bin:/usr/bin:/bin:${prefix}/sbin:/usr/sbin:/sbin\"`"
    }

    post-destroot {
        file rename ${destroot}${prefix}/bin/kdevelop ${destroot}${prefix}/bin/kdevelop5
        file rename ${destroot}${prefix}/bin/kdevelop\! ${destroot}${prefix}/bin/kdevelop5\!
    }
} elseif {${subport} eq "${name}-translations"} {
    # nothing to be seen here for now
} else {
    # the clang-based parser component
    if {![info exists BDIR]} {
        set BDIR    ${build.dir}
    }
    kf5.allow_docs_generation no

    configure.args-append \
                    -DKDEVELOP_BUILD_IDE=OFF \
                    -DKDEVELOP_BUILD_CLANG_PARSER=ON
    # One can experiment with linking the Xcode libclang via the following additional configure.arg:
    # -DCLANG_LIBCLANG_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/libclang.dylib
}
