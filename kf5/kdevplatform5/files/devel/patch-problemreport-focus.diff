diff --git plugins/problemreporter/problemsview.cpp plugins/problemreporter/problemsview.cpp
index 3a6950ba8bf9bf2ab3a34cdf17a1a939f3c701ff..470ae6b36f14ddb78ba1ad7e28e0c179ed7e68ec 100644
--- plugins/problemreporter/problemsview.cpp
+++ plugins/problemreporter/problemsview.cpp
@@ -21,6 +21,7 @@
 
 #include <KActionMenu>
 #include <KLocalizedString>
+#include <KTextEditor/View>
 
 #include <QAction>
 #include <QLineEdit>
@@ -31,6 +32,7 @@
 #include <QVBoxLayout>
 
 #include <interfaces/icore.h>
+#include <interfaces/idocumentcontroller.h>
 #include <interfaces/ilanguagecontroller.h>
 #include <shell/problemconstants.h>
 #include <shell/problemmodelset.h>
@@ -232,7 +234,12 @@ void ProblemsView::setupActions()
         addAction(filterAction);
 
         m_prevTabIdx = -1;
-        setFocusProxy(m_filterEdit);
+        const auto activeDoc = ICore::self()->documentController()->activeDocument();
+        if (activeDoc && m_currentDocumentAction->isChecked()) {
+            setFocusProxy(activeDoc->activeTextView());
+        } else {
+            setFocusProxy(m_filterEdit);
+        }
     }
 }
 
@@ -263,6 +270,10 @@ void ProblemsView::updateActions()
 
     problemModel->setSeverities(IProblem::Error | IProblem::Warning | IProblem::Hint);
 
+    const auto activeDoc = ICore::self()->documentController()->activeDocument();
+    if (activeDoc && m_currentDocumentAction->isChecked()) {
+        setFocusProxy(activeDoc->activeTextView());
+    }
     setFocus(); // set focus to default widget (filterEdit)
 }
 
@@ -498,6 +509,10 @@ void ProblemsView::setScope(int scope)
     m_scopeMenu->setText(i18n("Scope: %1", m_scopeMenu->menu()->actions().at(scope)->text()));
 
     currentView()->model()->setScope(scope);
+    const auto activeDoc = ICore::self()->documentController()->activeDocument();
+    if (activeDoc && scope == CurrentDocument) {
+        setFocusProxy(activeDoc->activeTextView());
+    }
 }
 
 void ProblemsView::setFilter(const QString& filterText)
