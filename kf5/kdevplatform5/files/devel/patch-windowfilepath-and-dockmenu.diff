diff --git shell/mainwindow.cpp shell/mainwindow.cpp
index 6428f9ab634157edcb61895f7379067cd02fa537..df655fcd58a095ffb40b96f4eb8b7dd85ca76de8 100644
--- shell/mainwindow.cpp
+++ shell/mainwindow.cpp
@@ -383,7 +383,10 @@ void MainWindow::updateCaption()
         Sublime::Document* doc = area()->activeView()->document();
         Sublime::UrlDocument* urlDoc = dynamic_cast<Sublime::UrlDocument*>(doc);
         if(urlDoc)
+        {
+            setWindowFilePath(urlDoc->url().toLocalFile());
             title += Core::self()->projectController()->prettyFileName(urlDoc->url(), KDevelop::IProjectController::FormatPlain);
+        }
         else
             title += doc->title();
 
@@ -393,7 +396,9 @@ void MainWindow::updateCaption()
 
         title += QLatin1String(" ]");
     }
-
+    else {
+        setWindowFilePath({});
+    }
     setCaption(title);
 }
 
diff --git sublime/container.cpp sublime/container.cpp
index b9d2059c7084a44a8fc1f25a01173fe065110314..e7643a390b9461a33129feabe4ea85b0ae2d6d17 100644
--- sublime/container.cpp
+++ sublime/container.cpp
@@ -133,6 +133,11 @@ bool sortViews(const View* const lhs, const View* const rhs)
         return lhs->document()->title().compare(rhs->document()->title(), Qt::CaseInsensitive) < 0;
 }
 
+#ifdef Q_OS_MACOS
+// only one of these per process:
+static QMenu* currentDockMenu = NULL;
+#endif
+
 struct ContainerPrivate {
     QBoxLayout* layout;
     QHash<QWidget*, View*> viewForWidget;
@@ -197,6 +202,28 @@ struct ContainerPrivate {
             ///FIXME: push this code somehow into shell, such that we can access the project model for
             ///       icons and also get a neat, short path like the document switcher.
         }
+
+        setAsDockMenu();
+    }
+
+    void setAsDockMenu()
+    {
+#ifdef Q_OS_MACOS
+        if (documentListMenu != currentDockMenu) {
+            documentListMenu->setAsDockMenu();
+            currentDockMenu = documentListMenu;
+        }
+#endif
+    }
+
+    ~ContainerPrivate()
+    {
+#ifdef Q_OS_MACOS
+        if (documentListMenu == currentDockMenu) {
+            QMenu().setAsDockMenu();
+            currentDockMenu = NULL;
+        }
+#endif
     }
 };
 
@@ -284,6 +311,10 @@ Container::Container(QWidget *parent)
     d->documentListButton = new QToolButton(this);
     d->documentListButton->setIcon(QIcon::fromTheme(QStringLiteral("format-list-unordered")));
     d->documentListButton->setMenu(d->documentListMenu);
+#ifdef Q_OS_MACOS
+    // for maintaining the Dock menu:
+    setFocusPolicy(Qt::StrongFocus);
+#endif
     d->documentListButton->setPopupMode(QToolButton::InstantPopup);
     d->documentListButton->setAutoRaise(true);
     d->documentListButton->setToolTip(i18n("Show sorted list of opened documents"));
@@ -684,6 +715,12 @@ Sublime::View* Container::currentView() const
     return d->viewForWidget.value(widget( d->tabBar->currentIndex() ));
 }
 
+void Container::focusInEvent(QFocusEvent* event)
+{
+    d->setAsDockMenu();
+    QWidget::focusInEvent(event);
+}
+
 }
 
 #include "container.moc"
diff --git sublime/container.h sublime/container.h
index 580c1d587e2e736f903261da5a76c9fbbc3375f0..2a062bf9f38a0daf79d4394f8cf776272a10d7d1 100644
--- sublime/container.h
+++ sublime/container.h
@@ -111,6 +111,9 @@ private:
     Sublime::View* currentView() const;
 
     struct ContainerPrivate * const d;
+
+protected:
+    void focusInEvent(QFocusEvent*) override;
 };
 
 }
