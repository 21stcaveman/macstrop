diff --git serialization/itemrepository.h serialization/itemrepository.h
index a557da6..6f4399b 100644
--- serialization/itemrepository.h
+++ serialization/itemrepository.h
@@ -548,8 +548,17 @@ class Bucket {
         currentIndex = followerIndex(currentIndex);
         //If this assertion triggers, the deleted item was not registered under the given hash
         Q_ASSERT(currentIndex);
+        if (!currentIndex) {
+          qWarning() << Q_FUNC_INFO << "early return because currentIndex==0";
+          return;
+        }
       }
       Q_ASSERT(currentIndex == index);
+      if (currentIndex != index) {
+        qWarning() << Q_FUNC_INFO << "early return because currentIndex != index ("
+          << currentIndex << "!=" << index;
+        return;
+      }
 
       if(!previousIndex)
         //The item was directly in the object map
@@ -938,13 +947,14 @@ class Bucket {
 
     ///@param index the index of an item @return The index of the next item in the chain of items with a same local hash, or zero
     inline unsigned short followerIndex(unsigned short index) const {
-      Q_ASSERT(index >= 2);
-      return *reinterpret_cast<unsigned short*>(m_data+(index-2));
+//       Q_ASSERT(index >= 2);
+      return (index >= 2) ? *reinterpret_cast<unsigned short*>(m_data+(index-2)) : 0;
     }
 
     void setFollowerIndex(unsigned short index, unsigned short follower) {
-      Q_ASSERT(index >= 2);
-      *reinterpret_cast<unsigned short*>(m_data+(index-2)) = follower;
+//       Q_ASSERT(index >= 2);
+      if (index >= 2)
+        *reinterpret_cast<unsigned short*>(m_data+(index-2)) = follower;
     }
     // Only returns the current value if the item is actually free
     inline unsigned short freeSize(unsigned short index) const {
