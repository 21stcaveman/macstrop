diff --git kdevplatform/project/abstractfilemanagerplugin.cpp kdevplatform/project/abstractfilemanagerplugin.cpp
index 8fe816e1413ed1027dfdde646b697b999b8b1f83..b6828e4af86345773463e25dbdfd44598c04ad02 100644
--- kdevplatform/project/abstractfilemanagerplugin.cpp
+++ kdevplatform/project/abstractfilemanagerplugin.cpp
@@ -115,7 +115,9 @@ void AbstractFileManagerPlugin::Private::projectClosing(IProject* project)
         }
         m_projectJobs.remove(project);
     }
+#ifndef Q_OS_MACOS
     delete m_watchers.take(project);
+#endif
     m_filters.remove(project);
 }
 
@@ -381,9 +383,11 @@ void AbstractFileManagerPlugin::Private::stopWatcher(ProjectFolderItem* folder)
     if ( !folder->path().isLocalFile() ) {
         return;
     }
-    Q_ASSERT(m_watchers.contains(folder->project()));
     const QString path = folder->path().toLocalFile();
+#ifndef Q_OS_MACOS
+    Q_ASSERT(m_watchers.contains(folder->project()));
     m_watchers[folder->project()]->stopDirScan(path);
+#endif
     m_stoppedFolders.append(path);
 }
 
@@ -392,9 +396,11 @@ void AbstractFileManagerPlugin::Private::continueWatcher(ProjectFolderItem* fold
     if ( !folder->path().isLocalFile() ) {
         return;
     }
-    Q_ASSERT(m_watchers.contains(folder->project()));
     const QString path = folder->path().toLocalFile();
+#ifndef Q_OS_MACOS
+    Q_ASSERT(m_watchers.contains(folder->project()));
     m_watchers[folder->project()]->restartDirScan(path);
+#endif
     const int idx = m_stoppedFolders.indexOf(path);
     if (idx != -1) {
         m_stoppedFolders.remove(idx);
@@ -466,6 +472,7 @@ ProjectFolderItem *AbstractFileManagerPlugin::import( IProject *project )
     emit folderAdded( projectRoot );
     qCDebug(FILEMANAGER) << "imported new project" << project->name() << "at" << projectRoot->path();
 
+#ifndef Q_OS_MACOS
     ///TODO: check if this works for remote files when something gets changed through another KDE app
     if ( project->path().isLocalFile() ) {
         d->m_watchers[project] = new KDirWatch( project );
@@ -477,6 +484,7 @@ ProjectFolderItem *AbstractFileManagerPlugin::import( IProject *project )
 
         d->m_watchers[project]->addDir(project->path().toLocalFile(), KDirWatch::WatchSubDirs | KDirWatch:: WatchFiles );
     }
+#endif
 
     d->m_filters.add(project);
 
