diff --git plugins/patchreview/patchreviewtoolview.cpp plugins/patchreview/patchreviewtoolview.cpp
index de52800..8efbc80 100644
--- plugins/patchreview/patchreviewtoolview.cpp
+++ plugins/patchreview/patchreviewtoolview.cpp
@@ -397,7 +397,11 @@ void PatchReviewToolView::open( const QUrl& url, bool activate ) const
         }
     }
 
-    IDocument* newDoc = ICore::self()->documentController()->openDocument(url, KTextEditor::Range::invalid(), activate ? IDocumentController::DefaultMode : IDocumentController::DoNotActivate, QLatin1String(""), buddyDoc);
+    // we simplify and assume that documents to be opened without activating them also need not be
+    // added to the Files/Open Recent menu.
+    IDocument* newDoc = ICore::self()->documentController()->openDocument(url, KTextEditor::Range::invalid(),
+                          activate ? IDocumentController::DefaultMode : IDocumentController::DoNotActivate|IDocumentController::DoNotAddToRecentOpen,
+                          QLatin1String(""), buddyDoc);
 
     KTextEditor::View* view = nullptr;
     if(newDoc)
diff --git plugins/patchreview/patchreview.cpp plugins/patchreview/patchreview.cpp
index 1ddec7f..8b26180 100644
--- plugins/patchreview/patchreview.cpp
+++ plugins/patchreview/patchreview.cpp
@@ -118,7 +118,9 @@ void PatchReviewPlugin::seekHunk( bool forwards, const QUrl& fileName ) {
                             return;
                         } else if(fileName.isEmpty()) {
                             int next = qBound(0, forwards ? a+1 : a-1, m_modelList->modelCount()-1);
-                            ICore::self()->documentController()->openDocument(urlForFileModel(m_modelList->modelAt(next)));
+                            if (next < maximumFilesToOpenDirectly) {
+                                ICore::self()->documentController()->openDocument(urlForFileModel(m_modelList->modelAt(next)));
+                            }
                         }
                     }
                 }
@@ -439,7 +441,11 @@ void PatchReviewPlugin::updateReview()
 
     switchToEmptyReviewArea();
 
-    IDocument* futureActiveDoc = ICore::self()->documentController()->openDocument( m_patch->file() );
+    KTextEditor::Range wholeDoc = KTextEditor::Range::invalid();
+    KDevelop::IDocumentController *docController = ICore::self()->documentController();
+    // don't add documents opened automatically to the Files/Open Recent list
+    IDocument* futureActiveDoc = docController->openDocument( m_patch->file(), wholeDoc,
+                                                              IDocumentController::DoNotAddToRecentOpen );
 
     updateKompareModel();
 
@@ -454,28 +460,26 @@ void PatchReviewPlugin::updateReview()
     KTextEditor::ModificationInterface* modif = dynamic_cast<KTextEditor::ModificationInterface*>( futureActiveDoc->textDocument() );
     modif->setModifiedOnDiskWarning( false );
 
-    Q_ASSERT( futureActiveDoc );
-    ICore::self()->documentController()->activateDocument( futureActiveDoc );
+    // activate the Review (patch) view without adding it to the Files/Open Recent menu
+    docController->openDocument( futureActiveDoc->url(), wholeDoc, IDocumentController::DoNotAddToRecentOpen );
 
     PatchReviewToolView* toolView = qobject_cast<PatchReviewToolView*>(ICore::self()->uiController()->findToolView( i18n( "Patch Review" ), m_factory ));
     Q_ASSERT( toolView );
 
-    if( m_modelList->modelCount() < maximumFilesToOpenDirectly ) {
-        //Open all relates files
-        for( int a = 0; a < m_modelList->modelCount(); ++a ) {
-            QUrl absoluteUrl = urlForFileModel( m_modelList->modelAt( a ) );
-            if (absoluteUrl.isRelative()) {
-                KMessageBox::error( nullptr, i18n("The base directory of the patch must be an absolute directory"), i18n( "Patch Review" ) );
-                break;
-            }
+    //Open all relates files
+    for( int a = 0; a < m_modelList->modelCount() && a < maximumFilesToOpenDirectly; ++a ) {
+        QUrl absoluteUrl = urlForFileModel( m_modelList->modelAt( a ) );
+        if (absoluteUrl.isRelative()) {
+            KMessageBox::error( nullptr, i18n("The base directory of the patch must be an absolute directory"), i18n( "Patch Review" ) );
+            break;
+        }
 
-            if( QFileInfo::exists( absoluteUrl.toLocalFile() ) && absoluteUrl.toLocalFile() != QLatin1String("/dev/null") )
-            {
-                toolView->open( absoluteUrl, false );
-            }else{
-                // Maybe the file was deleted
-                qCDebug(PLUGIN_PATCHREVIEW) << "could not open" << absoluteUrl << "because it doesn't exist";
-            }
+        if( QFileInfo::exists( absoluteUrl.toLocalFile() ) && absoluteUrl.toLocalFile() != QLatin1String("/dev/null") )
+        {
+            toolView->open( absoluteUrl, false );
+        }else{
+            // Maybe the file was deleted
+            qCDebug(PLUGIN_PATCHREVIEW) << "could not open" << absoluteUrl << "because it doesn't exist";
         }
     }
 }
diff --git shell/documentcontroller.cpp shell/documentcontroller.cpp
index c1e9c4c..51f5588 100644
--- shell/documentcontroller.cpp
+++ shell/documentcontroller.cpp
@@ -508,7 +511,7 @@ struct DocumentControllerPrivate
                 uiController->activeSublimeWindow()->activateView(
                     partView, !activationParams.testFlag(IDocumentController::DoNotFocus));
             }
-            if (!controller->isEmptyDocumentUrl(url))
+            if (!activationParams.testFlag(IDocumentController::DoNotAddToRecentOpen) && !controller->isEmptyDocumentUrl(url))
             {
                 fileOpenRecent->addUrl( url );
             }
diff --git interfaces/idocumentcontroller.h interfaces/idocumentcontroller.h
index b8a41f0..28315cd 100644
--- interfaces/idocumentcontroller.h
+++ interfaces/idocumentcontroller.h
@@ -58,7 +58,8 @@ public:
         DefaultMode = 0,            /**Activate document and create a view if no other flags passed.*/
         DoNotActivate = 1,          /**Don't activate the Document.*/
         DoNotCreateView = 2,        /**Don't create and show the view for the Document.*/
-        DoNotFocus = 4              /**Don't change the keyboard focus.*/
+        DoNotFocus = 4,             /**Don't change the keyboard focus.*/
+        DoNotAddToRecentOpen = 8,   /**Don't add the document to the File/Open Recent menu.*/
     };
     Q_DECLARE_FLAGS(DocumentActivationParams, DocumentActivation)
 
