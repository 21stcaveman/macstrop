commit 6d7d4284dedb6973d0282f0ebf04e5cddf997f75
Author: David Faure <faure@kde.org>
Date:   Sat May 23 15:26:28 2020 +0200

    Port konq_popupmenu from KRun to OpenUrlJob

commit b5982a4246f5040e42aad5796748bc3193c99324
Author: David Faure <faure@kde.org>
Date:   Sat May 23 16:29:13 2020 +0200

    Port from KRun::displayOpenWithDialog to OpenUrlJob

ommit a7ef9e7fada377adea57a0d6fa6e34f15e8aeb6f
Author: David Faure <faure@kde.org>
Date:   Sun May 10 16:21:32 2020 +0200

    Port away from KRun::run* deprecated methods

commit 96cb6e6b8cd2c52d3e772da5ebf0219143f709b3
Author: David Faure <faure@kde.org>
Date:   Sat May 23 15:19:11 2020 +0200

    Port kfmclient from KRun to OpenUrlJob.
    Tested (with firefox as BrowserApplication).

commit 7e61ba621ab4d686e9ff42d18de99bb870661818
Author: David Faure <faure@kde.org>
Date:   Sun May 10 16:24:17 2020 +0200

    Port KRun::runUrl to KIO::OpenUrlJob
    Summary: Uploading so as not to lose it, but it has to wait for KF 5.71
    Test Plan: Builds
    Differential Revision: https://phabricator.kde.org/D29598

commit 078f357bc7f318509902dda9b6ec79a12df25427
Author: Stefano Crocco <stefano.crocco@alice.it>
Date:   Mon Apr 13 10:53:06 2020 +0200

    Fix crash due to changes in KBookmarkMenu
    Summary:
    Since version 5.69, KBookmarkMenu doesn't automatically create an action
    collection. This causes Konqueror to crash when going on a submenu in
    the Bookmarks menu. To avoid it, manually create the action collection.
    Also, avoid calling the version of KBookmarkMenu construction which
    takes a KActionCollection, as it's deprecated.
    Differential Revision: https://phabricator.kde.org/D28789

commit bfbaab30b02d3f1c6f04408abf4c25fc2a3accaa
Author: David Faure <faure@kde.org>
Date:   Tue Jun 2 23:18:09 2020 +0200

    Port the Open With dialog to ApplicationLauncherJob.
    Tested on a weird *.SPR file from my Borland Pascal years :)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 0dc0cef50a8eb61768baa8b5575bc3cb7368acfd..a193c1376238299ae4fee3279d82e5c30f14a8c5 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -9,7 +9,7 @@ set (RELEASE_SERVICE_VERSION "${RELEASE_SERVICE_VERSION_MAJOR}.${RELEASE_SERVICE
 project(Konqueror)
 
 set(QT_MIN_VERSION "5.9.0")
-set(KF5_MIN_VERSION "5.71.0")
+set(KF5_MIN_VERSION "5.60.0")
 
 find_package(ECM ${KF5_MIN_VERSION} CONFIG REQUIRED)
 
diff --git a/libkonq/src/konq_popupmenu.cpp b/libkonq/src/konq_popupmenu.cpp
index ae3354401ae42703375c063e13590a8946a51b4f..bdcca10f8c9e25e1bd415d3929966e75a3392bb8 100644
--- a/libkonq/src/konq_popupmenu.cpp
+++ b/libkonq/src/konq_popupmenu.cpp
@@ -30,8 +30,7 @@
 #include <klocalizedstring.h>
 #include <kbookmarkmanager.h>
 #include <kbookmarkdialog.h>
-#include <KIO/OpenUrlJob>
-#include <KIO/JobUiDelegate>
+#include <krun.h>
 #include <kprotocolmanager.h>
 #include <knewfilemenu.h>
 #include <kmimetypetrader.h>
@@ -484,9 +483,7 @@ void KonqPopupMenu::setURLTitle(const QString &urlTitle)
 void KonqPopupMenuPrivate::slotPopupNewView()
 {
     Q_FOREACH (const QUrl &url, m_popupItemProperties.urlList()) {
-        KIO::OpenUrlJob *job = new KIO::OpenUrlJob(url);
-        job->setUiDelegate(new KIO::JobUiDelegate(KJobUiDelegate::AutoHandlingEnabled, m_parentWidget));
-        job->start();
+        (void) new KRun(url, m_parentWidget);
     }
 }
 
diff --git a/plugins/searchbar/searchbar.cpp b/plugins/searchbar/searchbar.cpp
index c316425f2bd561e85d603923a4bc72aa424c011b..85f53de69932814fe6188786b20cce6976280ee1 100644
--- a/plugins/searchbar/searchbar.cpp
+++ b/plugins/searchbar/searchbar.cpp
@@ -28,10 +28,9 @@
 #include <KConfigGroup>
 #include <KSharedConfig>
 #include <KDesktopFile>
-#include <KDialogJobUiDelegate>
 #include <KPluginFactory>
 #include <KActionCollection>
-#include <KIO/CommandLauncherJob>
+#include <KRun>
 #include <KMainWindow>
 #include <KParts/Part>
 #include <KParts/BrowserExtension>
@@ -382,9 +381,7 @@ void SearchBarPlugin::menuActionTriggered(QAction *action)
 
 void SearchBarPlugin::selectSearchEngines()
 {
-    KIO::CommandLauncherJob *job = new KIO::CommandLauncherJob(QStringLiteral("kcmshell5 webshortcuts"));
-    job->setUiDelegate(new KDialogJobUiDelegate(KJobUiDelegate::AutoHandlingEnabled, m_part ? m_part.data()->widget() : nullptr));
-    job->start();
+    KRun::runCommand(QStringLiteral("kcmshell5 webshortcuts"), (m_part ? m_part.data()->widget() : nullptr));
 }
 
 void SearchBarPlugin::configurationChanged()
diff --git a/plugins/uachanger/uachangerplugin.cpp b/plugins/uachanger/uachangerplugin.cpp
index ee59bfcc3e88f7aaf755fed910f0dbca0b152cd4..60231b0e06e305c12ce5da68f3bb2a5191d2b051 100644
--- a/plugins/uachanger/uachangerplugin.cpp
+++ b/plugins/uachanger/uachangerplugin.cpp
@@ -27,6 +27,7 @@
 
 #include <kactionmenu.h>
 #include <kservicetypetrader.h>
+#include <krun.h>
 #include <klocalizedstring.h>
 #include <kservice.h>
 #include <kconfiggroup.h>
@@ -35,8 +36,6 @@
 #include <kactioncollection.h>
 #include <ksharedconfig.h>
 
-#include <KIO/ApplicationLauncherJob>
-#include <KIO/JobUiDelegate>
 #include <kparts/openurlarguments.h>
 
 #include <kio/job.h>
@@ -265,9 +264,7 @@ void UAChangerPlugin::slotConfigure()
 {
     KService::Ptr service = KService::serviceByDesktopName("useragent");
     if (service) {
-        KIO::ApplicationLauncherJob *job = new KIO::ApplicationLauncherJob(service);
-        job->setUiDelegate(new KIO::JobUiDelegate(KJobUiDelegate::AutoHandlingEnabled, m_part->widget()));
-        job->start();
+        KRun::runCommand(service->exec(), m_part->widget());
     }
 }
 
@@ -392,7 +389,11 @@ QString UAChangerPlugin::findTLD(const QString &hostname)
     const QString tld = u.topLevelDomain(QUrl::EncodeUnicode);
     if (tld.isEmpty()) return hostname;				// name has no valid TLD
 
+#if QT_VERSION >= QT_VERSION_CHECK(5, 10, 0)
     const QString prefix = hostname.chopped(tld.length());	// remaining prefix of name
+#else
+    const QString prefix = hostname.left(hostname.size() - tld.size());
+#endif
     const int idx = prefix.lastIndexOf(QLatin1Char('.'));
     const QString prev = prefix.mid(idx+1);			// works even if no '.'
     return prev+tld;
diff --git a/src/konqhistoryview.cpp b/src/konqhistoryview.cpp
index 99ae847a8dc3fb27d9995abb9c70c28b7b56975c..337479ee59f5f85fa0fdf548a7eca3bea114a171 100644
--- a/src/konqhistoryview.cpp
+++ b/src/konqhistoryview.cpp
@@ -25,7 +25,6 @@
 #include "konqhistoryproxymodel.h"
 #include "konqhistorysettings.h"
 
-#include <KDialogJobUiDelegate>
 #include <QAction>
 #include <QApplication>
 #include <QClipboard>
@@ -41,8 +40,7 @@
 #include "konqdebug.h"
 #include <KLocalizedString>
 #include <kmessagebox.h>
-
-#include <KIO/CommandLauncherJob>
+#include <krun.h>
 
 KonqHistoryView::KonqHistoryView(QWidget *parent)
     : QWidget(parent)
@@ -182,9 +180,7 @@ void KonqHistoryView::slotClearHistory()
 void KonqHistoryView::slotPreferences()
 {
     // Run the history sidebar settings.
-    KIO::CommandLauncherJob *job = new KIO::CommandLauncherJob(QStringLiteral("kcmshell5 kcmhistory"));
-    job->setUiDelegate(new KDialogJobUiDelegate(KJobUiDelegate::AutoHandlingEnabled, this));
-    job->start();
+    KRun::run(QStringLiteral("kcmshell5 kcmhistory"), QList<QUrl>(), this);
 }
 
 void KonqHistoryView::slotSortChange(QAction *action)
diff --git a/src/konqmainwindow.cpp b/src/konqmainwindow.cpp
index 0351dcd593cbe9ec7c01d52315e1c3c33c3c4dc8..ba728c3fd7b706d9209b66a9c3421186ded34e8e 100644
--- a/src/konqmainwindow.cpp
+++ b/src/konqmainwindow.cpp
@@ -74,8 +74,6 @@
 #include <time.h>
 #include <sys/types.h>
 #include <sys/stat.h>
-#include <KIO/ApplicationLauncherJob>
-#include <KIO/OpenUrlJob>
 
 #include <QDesktopServices>
 #include <QFile>
@@ -434,7 +432,7 @@ QString KonqMainWindow::detectNameFilter(QUrl &url)
                     nameFilter = fileName;
                 }
             } else { // not a local file
-                KIO::StatJob *job = KIO::statDetails(url, KIO::StatJob::DestinationSide, KIO::StatBasic, KIO::HideProgressInfo);
+                KIO::StatJob *job = KIO::stat(url, KIO::StatJob::DestinationSide, 0, KIO::HideProgressInfo);
                 // if there's an error stat'ing url, then assume it doesn't exist
                 nameFilter = !job->exec() ? fileName : QString();
             }
@@ -676,21 +674,18 @@ void KonqMainWindow::openUrl(KonqView *_view, const QUrl &_url,
                     if (associatedAppIsKonqueror && refuseExecutingKonqueror(mimeType)) {
                         return;
                     }
+                    QList<QUrl> lst;
+                    lst.append(url);
                     //qCDebug(KONQUEROR_LOG) << "Got offer" << (offer ? offer->name() : QString("0"));
                     const bool allowExecution = trustedSource || KParts::BrowserRun::allowExecution(mimeType, url);
                     if (allowExecution) {
                         const bool isExecutable = KonqRun::isExecutable(mimeType);
-                        if (isExecutable) {
+                        // Open with no offer means the user clicked on "Open With..." button.
+                        if (!offer && !isExecutable) {
+                            (void) KRun::displayOpenWithDialog(lst, this);
+                        } else if (isExecutable || !KRun::runApplication(*offer, lst, this)) {
                             setLocationBarURL(oldLocationBarURL);   // Revert to previous locationbar URL
-                            KIO::OpenUrlJob *job = new KIO::OpenUrlJob(url);
-                            job->setUiDelegate(new KIO::JobUiDelegate(KJobUiDelegate::AutoHandlingEnabled, this));
-                            job->start();
-                        } else {
-                            // If offer is null, it means the user clicked on "Open With..." button.
-                            KIO::ApplicationLauncherJob *job = new KIO::ApplicationLauncherJob(offer);
-                            job->setUrls({url});
-                            job->setUiDelegate(new KIO::JobUiDelegate(KJobUiDelegate::AutoHandlingEnabled, this));
-                            job->start();
+                            (void)new KRun(url, this);
                         }
                     }
                 }
@@ -1543,14 +1538,14 @@ void KonqMainWindow::slotOpenWith()
         return;
     }
 
+    const QList<QUrl> lst{ m_currentView->url() };
     const QString serviceName = sender()->objectName();
     const KService::List offers = m_currentView->appServiceOffers();
-    for (const KService::Ptr &service : offers) {
-        if (service->desktopEntryName() == serviceName) {
-            KIO::ApplicationLauncherJob *job = new KIO::ApplicationLauncherJob(service);
-            job->setUrls({ m_currentView->url() });
-            job->setUiDelegate(new KIO::JobUiDelegate(KJobUiDelegate::AutoHandlingEnabled, this));
-            job->start();
+    KService::List::ConstIterator it = offers.begin();
+    const KService::List::ConstIterator end = offers.end();
+    for (; it != end; ++it) {
+        if ((*it)->desktopEntryName() == serviceName) {
+            KRun::runApplication(**it, lst, this);
             return;
         }
     }
diff --git a/webenginepart/src/webenginepage.cpp b/webenginepart/src/webenginepage.cpp
index c426d15ea480d7df55b8f52f8081a1afc89603ea..91350d8dc6e3969ae7872f51a13944a15628afea 100644
--- a/webenginepart/src/webenginepage.cpp
+++ b/webenginepart/src/webenginepage.cpp
@@ -33,9 +33,9 @@
 #include <QWebEngineCertificateError>
 #include <QWebEngineSettings>
 #include <QWebEngineProfile>
-#include <KDialogJobUiDelegate>
 
 #include <KMessageBox>
+#include <KRun>
 #include <KLocalizedString>
 #include <KShell>
 #include <KAuthorized>
@@ -46,7 +46,6 @@
 #include <KIO/Job>
 #include <KIO/AccessManager>
 #include <KIO/Scheduler>
-#include <KIO/CommandLauncherJob>
 #include <KParts/HtmlExtension>
 #include <KUserTimestamp>
 #include <KPasswdServerClient>
@@ -144,10 +143,8 @@ void WebEnginePage::download(const QUrl& url, bool newWindow)
         QString managerExe;
         checkForDownloadManager(view(), managerExe);
         if (!managerExe.isEmpty()) {
-            //qDebug() << "Calling command" << cmd;
-            KIO::CommandLauncherJob *job = new KIO::CommandLauncherJob(managerExe, {url.toString()});
-            job->setUiDelegate(new KDialogJobUiDelegate(KJobUiDelegate::AutoHandlingEnabled, view()));
-            job->start();
+            //kDebug() << "Calling command" << cmd;
+            KRun::runCommand((managerExe + QLatin1Char(' ') + KShell::quoteArg(url.url())), view());
             return;
         }
     }

diff --git b/client/kfmclient.cpp a/client/kfmclient.cpp
index d903817..b5eaa7e 100644
--- b/client/kfmclient.cpp
+++ a/client/kfmclient.cpp
@@ -32,8 +32,7 @@
 #include <kmessagebox.h>
 #include <kmimetypetrader.h>
 #include <kservice.h>
-#include <KIO/OpenUrlJob>
-#include <KIO/JobUiDelegate>
+#include <krun.h>
 #include <KStartupInfo>
 #include <kurifilter.h>
 #include <KConfig>
@@ -186,19 +185,11 @@ bool ClientApp::createNewWindow(const QUrl &url, bool newTab, bool tempFile, con
             qDebug() << "Using external browser" << browserApp;
             KStartupInfo::appStarted();
 
-            KIO::OpenUrlJob *job = new KIO::OpenUrlJob(url);
-            //job->setUiDelegate(new KIO::JobUiDelegate(KJobUiDelegate::AutoHandlingEnabled, window));
-            job->setDeleteTemporaryFile(tempFile);
-            job->setUiDelegate(nullptr);
-            job->start();
-
-            QObject::connect(job, &KJob::result, this, [this](KJob *job) {
-                if (job->error()) {
-                    qApp->exit(1);
-                } else {
-                    ClientApp::delayedQuit();
-                }
-            });
+            // TODO we don't handle tempFile here, but most likely the external browser doesn't support it,
+            // so we should sleep and delete it ourselves....
+            KRun *run = new KRun(url, nullptr, false /* no progress window */);
+            QObject::connect(run, &KRun::finished, this, &ClientApp::delayedQuit);
+            QObject::connect(run, &KRun::error, this, [](){ qApp->exit(1); });
             return qApp->exec();
         }
     }
@@ -221,7 +212,7 @@ bool ClientApp::openProfile(const QString &profileName, const QUrl &url, const Q
 
 void ClientApp::delayedQuit()
 {
-    // Quit in 2 seconds. This leaves time for OpenUrlJob to pop up
+    // Quit in 2 seconds. This leaves time for KRun to pop up
     // "app not found" in KProcessRunner, if that was the case.
     QTimer::singleShot(2000, qApp, SLOT(quit()));
 }

diff --git b/libkonq/src/konq_popupmenu.cpp a/libkonq/src/konq_popupmenu.cpp
index bdcca10..0f78dda 100644
--- b/libkonq/src/konq_popupmenu.cpp
+++ a/libkonq/src/konq_popupmenu.cpp
@@ -42,8 +42,6 @@
 #include <KIO/EmptyTrashJob>
 #include <KIO/JobUiDelegate>
 #include <KIO/RestoreJob>
-#include <KIO/CommandLauncherJob>
-#include <KIO/OpenUrlJob>
 #include <KFileCopyToMenu>
 #include <KJobWidgets>
 #include <KJobUiDelegate>
@@ -505,9 +503,7 @@ void KonqPopupMenuPrivate::slotPopupEmptyTrashBin()
 
 void KonqPopupMenuPrivate::slotConfigTrashBin()
 {
-    KIO::CommandLauncherJob *job = new KIO::CommandLauncherJob(QStringLiteral("kcmshell5 kcmtrash"));
-    job->setUiDelegate(new KDialogJobUiDelegate(KJobUiDelegate::AutoHandlingEnabled, m_parentWidget));
-    job->start();
+    KRun::run(QStringLiteral("kcmshell5 kcmtrash"), QList<QUrl>(), m_parentWidget);
 }
 
 void KonqPopupMenuPrivate::slotPopupRestoreTrashedItems()
@@ -560,8 +556,5 @@ void KonqPopupMenuPrivate::slotShowOriginalFile()
 
     // Now destUrl points to the target file, let's go up to parent dir
     destUrl = destUrl.adjusted(QUrl::RemoveFilename);
-
-    KIO::OpenUrlJob *job = new KIO::OpenUrlJob(destUrl, QStringLiteral("inode/directory"));
-    job->setUiDelegate(new KIO::JobUiDelegate(KJobUiDelegate::AutoHandlingEnabled, m_parentWidget));
-    job->start();
+    KRun::runUrl(destUrl, QStringLiteral("inode/directory"), m_parentWidget, KRun::RunFlags());
 }
diff --git b/webenginepart/src/webenginepart_ext.cpp a/webenginepart/src/webenginepart_ext.cpp
index 33acce8..01e950c 100644
--- b/webenginepart/src/webenginepart_ext.cpp
+++ a/webenginepart/src/webenginepart_ext.cpp
@@ -33,6 +33,7 @@
 #include <KConfigGroup>
 #include <KToolInvocation>
 #include <KSharedConfig>
+#include <KRun>
 #include <KProtocolInfo>
 #include <QInputDialog>
 #include <KLocalizedString>
@@ -40,8 +41,6 @@
 #include <KUriFilter>
 #include <Sonnet/Dialog>
 #include <sonnet/backgroundchecker.h>
-#include <KIO/JobUiDelegate>
-#include <KIO/OpenUrlJob>
 
 #include <QBuffer>
 #include <QVariant>
@@ -541,9 +540,7 @@ void WebEngineBrowserExtension::slotViewDocumentSource()
 
     const QUrl pageUrl (view()->url());
     if (pageUrl.isLocalFile()) {
-        KIO::OpenUrlJob *job = new KIO::OpenUrlJob(pageUrl, QL1S("text/plain"));
-        job->setUiDelegate(new KIO::JobUiDelegate(KJobUiDelegate::AutoHandlingEnabled, view()));
-        job->start();
+        KRun::runUrl(pageUrl, QL1S("text/plain"), view(), KRun::RunFlags());
     } else {
         view()->page()->toHtml([this](const QString& html) {
             QTemporaryFile tempFile;
@@ -551,11 +548,7 @@ void WebEngineBrowserExtension::slotViewDocumentSource()
             tempFile.setAutoRemove(false);
             if (tempFile.open()) {
                 tempFile.write(html.toUtf8());
-                tempFile.close();
-                KIO::OpenUrlJob *job = new KIO::OpenUrlJob(QUrl::fromLocalFile(tempFile.fileName()), QL1S("text/plain"));
-                job->setUiDelegate(new KIO::JobUiDelegate(KJobUiDelegate::AutoHandlingEnabled, view()));
-                job->setDeleteTemporaryFile(true);
-                job->start();
+                KRun::runUrl(QUrl::fromLocalFile(tempFile.fileName()), QL1S("text/plain"), view(), KRun::RunFlags(KRun::DeleteTemporaryFiles));
             }
         });
     }
diff --git a/plugins/fsview/treemap.cpp b/plugins/fsview/treemap.cpp
index a1486c11d074984d3f34aaff64e3a6d1ef4dedf4..009813b146dd34f7ce87ec8f678c2dcf9c0f9b56 100644
--- a/plugins/fsview/treemap.cpp
+++ b/plugins/fsview/treemap.cpp
@@ -50,6 +50,10 @@
 #define DEBUG_DRAWING 0
 #define MAX_FIELD 12
 
+#if QT_VERSION < QT_VERSION_CHECK(5, 11, 0)
+#define horizontalAdvance width
+#endif
+
 //
 // StoredDrawParams
 //
diff --git b/src/konqrun.cpp a/src/konqrun.cpp
index 329affd..cdeda0f 100644
--- b/src/konqrun.cpp
+++ a/src/konqrun.cpp
@@ -27,8 +27,6 @@
 #include <kio/job.h>
 #include <QMimeDatabase>
 #include <QMimeType>
-#include <KIO/ApplicationLauncherJob>
-#include <KIO/JobUiDelegate>
 
 // Local
 #include "konqview.h"
@@ -124,12 +122,7 @@ void KonqRun::foundMimeType(const QString &_type)
             if (selectedService) {
                 KRun::setPreferredService(selectedService->desktopEntryName());
             } else {
-                // Open-with dialog
-                KIO::ApplicationLauncherJob *job = new KIO::ApplicationLauncherJob();
-                job->setUrls({url()});
-                job->setUiDelegate(new KIO::JobUiDelegate(KJobUiDelegate::AutoHandlingEnabled, m_pMainWindow));
-                job->setSuggestedFileName(suggestedFileName());
-                job->start();
+                KRun::displayOpenWithDialog(QList<QUrl>() << url(), m_pMainWindow, false /*tempfile*/, suggestedFileName());
                 setFinished(true);
             }
         }
diff --git a/src/konqbookmarkmenu.h b/src/konqbookmarkmenu.h
index d47960f7b45851405887b58a48716a3a21d52cea..1c664540d32651347a0558f633ab258d02e7a4a3 100644
--- a/src/konqbookmarkmenu.h
+++ b/src/konqbookmarkmenu.h
@@ -25,9 +25,6 @@
 #include "kbookmarkactionmenu.h"
 #include "kbookmarkcontextmenu.h"
 
-#include <KActionCollection>
-#include <kbookmarks_version.h>
-
 namespace Konqueror { // to avoid clashing with KF5::Bookmarks which had a KonqBookmarkMenu class. Remove once using KF6.
 
 class KonqBookmarkMenu : public KBookmarkMenu
@@ -48,10 +45,8 @@ public:
      * @param collec parent collection for the KActions.
      */
     KonqBookmarkMenu(KBookmarkManager *mgr, KBookmarkOwner *owner, KBookmarkActionMenu *parentMenu, KActionCollection *collec)
-        : KBookmarkMenu(mgr, owner, parentMenu->menu())
-    {
-        m_actionCollection = collec;
-    }
+        : KBookmarkMenu(mgr, owner, parentMenu->menu(), collec)
+    {}
     ~KonqBookmarkMenu() override
     {}
 
@@ -61,12 +56,7 @@ public:
      */
     KonqBookmarkMenu(KBookmarkManager *mgr, KBookmarkOwner *owner, KBookmarkActionMenu *parentMenu, QString parentAddress)
         : KBookmarkMenu(mgr, owner, parentMenu->menu(), parentAddress)
-    {
-//KBookmarkMenu doesn't create an action collection only in version 5.69.0
-#if KBOOKMARKS_VERSION == QT_VERSION_CHECK(5, 69, 0)
-        m_actionCollection = new KActionCollection(this);
-#endif
-    }
+    {}
 
 protected:
     /**

 diff --git a/sidebar/tree_module/tree_module.cpp b/sidebar/tree_module/tree_module.cpp
index 7afbcc845560958a249022b3e63c6c95af5ecd92..9219e52db7b61486a13bd84cc65a83b7c80e64c6 100644
--- a/sidebar/tree_module/tree_module.cpp
+++ b/sidebar/tree_module/tree_module.cpp
@@ -45,6 +45,15 @@ BUGS:
 
 #include <QHeaderView>
 
+static QUrl rootParentOf(const QUrl &url) {
+    // <url> is what we listed, and which is visible at the root of the tree
+    // Here we want the (invisible) parent of that url
+    QUrl parent(url.adjusted(QUrl::RemoveFilename|QUrl::StripTrailingSlash));
+    if (url.path() == QLatin1String("/")) {
+        parent.setPath(QString());
+    }
+    return parent;
+}
 
 KonqSideBarTreeModule::KonqSideBarTreeModule(QWidget *parent,
         const KConfigGroup &configGroup)
@@ -62,7 +71,7 @@ KonqSideBarTreeModule::KonqSideBarTreeModule(QWidget *parent,
     sorted_model->setSourceModel(model); 
     model->dirLister()->setDirOnlyMode(true);
 
-    model->openUrl(m_initURL, KDirModel::ShowRoot);
+    model->dirLister()->openUrl(rootParentOf(m_initURL)/*, KDirModel::ShowRoot*/);
 
     treeView->setModel(sorted_model);
 
