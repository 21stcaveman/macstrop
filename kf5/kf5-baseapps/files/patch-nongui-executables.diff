diff --git a/kdepasswd/CMakeLists.txt b/kdepasswd/CMakeLists.txt
index 4faceb3..97d96aa 100644
--- a/kdepasswd/CMakeLists.txt
+++ b/kdepasswd/CMakeLists.txt
@@ -12,6 +12,7 @@ include(ECMAddAppIcon)
 include(KDEInstallDirs)
 include(KDECMakeSettings)
 include(KDEFrameworkCompilerSettings)
+include(ECMMarkNonGuiExecutable)
 
 set(KDEPASSWD_VERSION "4.70.0")
 
@@ -38,6 +39,7 @@ set(kdepasswd_SRCS
 )
 
 add_executable(kdepasswd ${kdepasswd_SRCS})
+ecm_mark_nongui_executable(kdepasswd)
 
 target_link_libraries(kdepasswd
     KF5::KIOWidgets
diff --git a/kdialog/CMakeLists.txt b/kdialog/CMakeLists.txt
index b76886a..8b17199 100644
--- a/kdialog/CMakeLists.txt
+++ b/kdialog/CMakeLists.txt
@@ -10,6 +10,7 @@ include(FeatureSummary)
 include(KDEInstallDirs)
 include(KDECMakeSettings)
 include(KDEFrameworkCompilerSettings)
+include(ECMMarkNonGuiExecutable)
 
 # Build dependencies
 find_package(KF5 REQUIRED COMPONENTS KDELibs4Support KIO)
@@ -33,6 +34,7 @@ set(kdialog_SRCS
 qt5_add_dbus_adaptor( kdialog_SRCS org.kde.kdialog.ProgressDialog.xml progressdialog.h KProgressDialog )
 
 add_executable(kdialog ${kdialog_SRCS})
+ecm_mark_nongui_executable(kdialog)
 
 # Need libkfile due to the code that adjusts the geometry of the KDirSelectDialog
 target_link_libraries(kdialog
diff --git a/keditbookmarks/CMakeLists.txt b/keditbookmarks/CMakeLists.txt
index 5b022f4..7e4821f 100644
--- a/keditbookmarks/CMakeLists.txt
+++ b/keditbookmarks/CMakeLists.txt
@@ -20,6 +20,7 @@ include(CheckFunctionExists)
 include(KDEInstallDirs)
 include(KDECMakeSettings)
 include(KDEFrameworkCompilerSettings)
+include(ECMMarkNonGuiExecutable)
 
 set(KEDITBOOKMARKS_VERSION "5.97.0")
 
@@ -38,6 +39,7 @@ add_subdirectory(kbookmarkmodel)
 set(kbookmarkmerger_SRCS kbookmarkmerger.cpp )
 
 add_executable(kbookmarkmerger ${kbookmarkmerger_SRCS})
+ecm_mark_nongui_executable(kbookmarkmerger)
 
 target_link_libraries(kbookmarkmerger  KF5::KIOCore KF5::KDELibs4Support)
 
@@ -70,6 +72,7 @@ qt5_add_dbus_interface( keditbookmarks_KDEINIT_SRCS ${toplevel_xml} toplevel_int
 kconfig_add_kcfg_files(keditbookmarks_KDEINIT_SRCS settings.kcfgc )
 
 kde4_add_kdeinit_executable( keditbookmarks ${keditbookmarks_KDEINIT_SRCS})
+ecm_mark_nongui_executable( keditbookmarks )
 
 target_link_libraries(kdeinit_keditbookmarks kbookmarkmodel_private5 KF5::Parts KF5::KIOGui)
 
diff --git a/kfind/CMakeLists.txt b/kfind/CMakeLists.txt
index 226e3df..bfe89a2 100644
--- a/kfind/CMakeLists.txt
+++ b/kfind/CMakeLists.txt
@@ -13,6 +13,7 @@ include(KDEInstallDirs)
 include(KDECMakeSettings)
 include(KDEFrameworkCompilerSettings)
 include(ECMAddAppIcon)
+include(ECMMarkNonGuiExecutable)
 set(KFIND_VERSION "2.0.0")
 
 ecm_setup_version(${KFIND_VERSION} VARIABLE_PREFIX KFIND
@@ -39,6 +40,7 @@ file(GLOB ICONS_SRCS "icons/*-apps-kfind.png")
 ecm_add_app_icon(kfind_SRCS ICONS ${ICONS_SRCS})
 
 add_executable(kfind ${kfind_SRCS})
+ecm_mark_nongui_executable(kfind)
 
 target_link_libraries(kfind
 KF5::Konq
diff --git a/konq-plugins/CMakeLists.txt b/konq-plugins/CMakeLists.txt
index 58c7032..3e768fb 100644
--- a/konq-plugins/CMakeLists.txt
+++ b/konq-plugins/CMakeLists.txt
@@ -14,6 +14,7 @@ include(KDECMakeSettings)
 include(KDECompilerSettings)
 include(ECMInstallIcons)
 include(ECMMarkAsTest)
+include(ECMMarkNonGuiExecutable)
 
 find_package(Qt5 REQUIRED COMPONENTS Core Widgets)
 find_package(Qt5TextToSpeech ${QT_REQUIRED_VERSION} QUIET)
diff --git a/konq-plugins/fsview/CMakeLists.txt b/konq-plugins/fsview/CMakeLists.txt
index 0d372c2..ca1435f 100644
--- a/konq-plugins/fsview/CMakeLists.txt
+++ b/konq-plugins/fsview/CMakeLists.txt
@@ -1,3 +1,4 @@
+include(ECMMarkNonGuiExecutable)
 
 add_subdirectory(tests)
 
@@ -16,6 +17,7 @@ set(libfsview_SRCS
 set(fsview_SRCS main.cpp ${libfsview_SRCS} )
 
 add_executable(fsview ${fsview_SRCS})
+ecm_mark_nongui_executable(fsview)
 
 target_link_libraries(fsview KF5::KIOWidgets KF5::KDELibs4Support)
 
diff --git a/konqueror/client/CMakeLists.txt b/konqueror/client/CMakeLists.txt
index d02a682..1a9b351 100644
--- a/konqueror/client/CMakeLists.txt
+++ b/konqueror/client/CMakeLists.txt
@@ -10,14 +10,16 @@ qt5_add_dbus_interface( kfmclient_SRCS ../src/org.kde.Konqueror.MainWindow.xml k
 
 add_definitions(-DQT_NO_CAST_ASCII)
 
-kde4_add_app_icon(kfmclient_SRCS "${KDE4_ICON_INSTALL_DIR}/oxygen/*/apps/system-file-manager.png")
+#kde4_add_app_icon(kfmclient_SRCS "${KDE4_ICON_INSTALL_DIR}/oxygen/*/apps/system-file-manager.png")
 
 if (WIN32)
     add_definitions(-Dkdemain=main)
     add_executable(kfmclient ${kfmclient_SRCS})
+    ecm_mark_nongui_executable(kfmclient)
     target_link_libraries(kfmclient  KF5::KIOCore )
 else (WIN32)
     kf5_add_kdeinit_executable( kfmclient NOGUI ${kfmclient_SRCS})
+    ecm_mark_nongui_executable(kfmclient)
     target_link_libraries(kdeinit_kfmclient  KF5::KIOCore ${X11_LIBRARIES} KF5::KDELibs4Support)
     install(TARGETS kdeinit_kfmclient  ${KDE_INSTALL_TARGETS_DEFAULT_ARGS} )
 endif (WIN32)
diff --git a/nsplugins/CMakeLists.txt b/nsplugins/CMakeLists.txt
index a737610..8991252 100644
--- a/nsplugins/CMakeLists.txt
+++ b/nsplugins/CMakeLists.txt
@@ -1,3 +1,5 @@
+include(ECMMarkNonGuiExecutable)
+
 macro_optional_find_package(GLIB2 2.0)
 set_package_properties(GLIB2 PROPERTIES DESCRIPTION "Low-level core library for data structure handling, portability wrappers, etc."
                        URL "http://www.gtk.org"
@@ -61,6 +63,7 @@ if (X11_Xt_LIB)
   set(nspluginscan_SRCS pluginscan.cpp plugin_paths.cpp mimetypewriter.cpp)
 
   add_executable(nspluginscan ${nspluginscan_SRCS})
+  ecm_mark_nongui_executable(nspluginscan)
 
   target_link_libraries(nspluginscan  KF5::KIOCore ${X11_Xt_LIB})
 
diff --git a/nsplugins/viewer/CMakeLists.txt b/nsplugins/viewer/CMakeLists.txt
index 852a781..55bb37d 100644
--- a/nsplugins/viewer/CMakeLists.txt
+++ b/nsplugins/viewer/CMakeLists.txt
@@ -1,3 +1,5 @@
+include(ECMMarkNonGuiExecutable)
+
 include_directories(${CMAKE_CURRENT_SOURCE_DIR}/.. ${CMAKE_CURRENT_BINARY_DIR}/..)
 
 if (GLIB2_FOUND)
@@ -18,6 +20,7 @@ qt5_add_dbus_interface( nspluginviewer_SRCS ${nsplugins_callback_xml} nsplugins_
 
 
 add_executable(nspluginviewer ${nspluginviewer_SRCS})
+ecm_mark_nongui_executable(nspluginviewer)
 
 target_link_libraries(nspluginviewer KF5::Parts ${X11_Xt_LIB} ${X11_X11_LIB} Qt5::DBus ${CMAKE_DL_LIBS})
 if (GLIB2_FOUND)
