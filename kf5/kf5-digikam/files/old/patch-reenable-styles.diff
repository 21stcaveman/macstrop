diff --git a/core/CMakeLists.txt b/core/CMakeLists.txt
index 823ef93..31f4d55 100644
--- a/core/CMakeLists.txt
+++ b/core/CMakeLists.txt
@@ -109,6 +109,13 @@ option(ENABLE_DBUS                  "Build digiKam with DBUS support (default=ON
 option(ENABLE_MYSQLSUPPORT          "Build digiKam with MySQL dabatase support (default=OFF)"                          OFF)
 option(ENABLE_INTERNALMYSQL         "Build digiKam with internal MySQL server executable (default=OFF)"                OFF)
 
+# Look-and-feel options
+if(APPLE OR WIN32)
+    option(ENABLE_APPSTYLES         "Build digiKam with support for changing the application style (default=OFF)"      OFF)
+else()
+    option(ENABLE_APPSTYLES         "Build digiKam with support for changing the application style (default=ON)"       ON)
+endif()
+
 # Debug options:
 option(ENABLE_DIGIKAM_MODELTEST     "Enable ModelTest on some models for debugging (default=OFF)"                      OFF)
 
@@ -420,6 +427,7 @@ MACRO_BOOL_TO_01(ENABLE_MYSQLSUPPORT                                    HAVE_MYS
 MACRO_BOOL_TO_01(ENABLE_INTERNALMYSQL                                   HAVE_INTERNALMYSQL)
 MACRO_BOOL_TO_01(ENABLE_MEDIAPLAYER                                     HAVE_MEDIAPLAYER)
 MACRO_BOOL_TO_01(ENABLE_DBUS                                            HAVE_DBUS)
+MACRO_BOOL_TO_01(ENABLE_APPSTYLES                                       HAVE_APPSTYLE_SUPPORT)
 
 # Whether to use Qt's scaling to downscale previews. Under MacOSX, Qt
 # can make use of the higher physical resolution of Retina
@@ -440,9 +448,10 @@ message(STATUS "----------------------------------------------------------------
 message(STATUS " digiKam ${DIGIKAM_VERSION_STRING} dependencies results   <http://www.digikam.org>")
 message(STATUS "")
 
-PRINT_COMPONENT_COMPILE_STATUS("MySQL Database Support" ENABLE_MYSQLSUPPORT)
-PRINT_COMPONENT_COMPILE_STATUS("MySQL Internal Support" ENABLE_INTERNALMYSQL)
-PRINT_COMPONENT_COMPILE_STATUS("DBUS Support"           ENABLE_DBUS)
+PRINT_COMPONENT_COMPILE_STATUS("MySQL Database Support"     ENABLE_MYSQLSUPPORT)
+PRINT_COMPONENT_COMPILE_STATUS("MySQL Internal Support"     ENABLE_INTERNALMYSQL)
+PRINT_COMPONENT_COMPILE_STATUS("DBUS Support"               ENABLE_DBUS)
+PRINT_COMPONENT_COMPILE_STATUS("Application Style Support"  ENABLE_APPSTYLES)
 
 
 # ================================================================
diff --git a/core/app/utils/digikam_config.h.cmake.in b/core/app/utils/digikam_config.h.cmake.in
index f409cb0..1952b64 100644
--- a/core/app/utils/digikam_config.h.cmake.in
+++ b/core/app/utils/digikam_config.h.cmake.in
@@ -102,6 +102,9 @@
 /* Define to 1 if system use X11 */
 #cmakedefine HAVE_X11 1
 
+/* Define to 1 if changing application styles is supported */
+#cmakedefine HAVE_APPSTYLE_SUPPORT 1
+
 #define LIBEXEC_INSTALL_DIR "${CMAKE_INSTALL_PREFIX}/${LIBEXEC_INSTALL_DIR}"
 
 /*
diff --git a/core/libs/settings/applicationsettings.cpp b/core/libs/settings/applicationsettings.cpp
index 71efa00..63d122b 100644
--- a/core/libs/settings/applicationsettings.cpp
+++ b/core/libs/settings/applicationsettings.cpp
@@ -236,7 +236,7 @@ void ApplicationSettings::readSettings()
     d->scrollItemToCenter               = group.readEntry(d->configScrollItemToCenterEntry,                          false);
     d->stringComparisonType             = (StringComparisonType) group.readEntry(d->configStringComparisonTypeEntry, (int) Natural);
 
-#ifdef Q_OS_LINUX
+#ifdef HAVE_APPSTYLE_SUPPORT
     setApplicationStyle(group.readEntry(d->configApplicationStyleEntry, qApp->style()->objectName()));
 #else
     setApplicationStyle(QLatin1String("Fusion"));
@@ -392,7 +392,9 @@ void ApplicationSettings::saveSettings()
     group.writeEntry(d->configApplySidebarChangesDirectlyEntry,        d->sidebarApplyDirectly);
     group.writeEntry(d->configScrollItemToCenterEntry,                 d->scrollItemToCenter);
     group.writeEntry(d->configStringComparisonTypeEntry,               (int) d->stringComparisonType);
+#ifdef HAVE_APPSTYLE_SUPPORT
     group.writeEntry(d->configApplicationStyleEntry,                   d->applicationStyle);
+#endif
     group.writeEntry(d->configIconThemeEntry,                          d->iconTheme);
     group.writeEntry(d->configScanAtStartEntry,                        d->scanAtStart);
 
diff --git a/core/showfoto/main/showfotosettings.cpp b/core/showfoto/main/showfotosettings.cpp
index 0a46d61..1a3554d 100644
--- a/core/showfoto/main/showfotosettings.cpp
+++ b/core/showfoto/main/showfotosettings.cpp
@@ -243,7 +243,7 @@ void ShowfotoSettings::init()
     d->showPhotoWB             = false;
     d->showPhotoDate           = true;
     d->showPhotoMode           = true;
-#ifdef Q_OS_LINUX
+#ifdef HAVE_APPSTYLE_SUPPORT
     d->applicationStyle        = qApp->style()->objectName();
 #else
     d->applicationStyle        = QLatin1String("Fusion");
@@ -259,7 +259,7 @@ void ShowfotoSettings::readSettings()
     d->deleteItem2Trash        = group.readEntry(d->configDeleteItem2Trash, true);
     d->theme                   = group.readEntry(d->configCurrentTheme, Digikam::ThemeManager::instance()->defaultThemeName());
     d->rightSideBarStyle       = group.readEntry(d->configRightSideBarStyle, 0);
-#ifdef Q_OS_LINUX
+#ifdef HAVE_APPSTYLE_SUPPORT
     d->applicationStyle        = group.readEntry(d->configApplicationStyle, qApp->style()->objectName());
 #endif
     d->iconTheme               = group.readEntry(d->configIconTheme, QString());
diff --git a/core/showfoto/setup/showfotosetupmisc.cpp b/core/showfoto/setup/showfotosetupmisc.cpp
index fb190c2..a8c000d 100644
--- a/core/showfoto/setup/showfotosetupmisc.cpp
+++ b/core/showfoto/setup/showfotosetupmisc.cpp
@@ -134,7 +134,7 @@ SetupMisc::SetupMisc(QWidget* const parent)
         d->applicationStyle->addItem(styleList.at(i));
     }
 
-#ifndef Q_OS_LINUX
+#ifndef HAVE_APPSTYLE_SUPPORT
     // See Bug #365262
     appStyleHbox->setVisible(false);
 #endif
@@ -226,7 +226,7 @@ void SetupMisc::readSettings()
     d->sidebarType->setCurrentIndex(d->settings->getRightSideBarStyle());
     d->sortOrderComboBox->setCurrentIndex(d->settings->getSortRole());
     d->sortReverse->setChecked(d->settings->getReverseSort());
-#ifdef Q_OS_LINUX
+#ifdef HAVE_APPSTYLE_SUPPORT
     d->applicationStyle->setCurrentIndex(d->applicationStyle->findText(d->settings->getApplicationStyle(), Qt::MatchFixedString));
 #endif
     d->iconTheme->setCurrentIndex(d->iconTheme->findData(d->settings->getIconTheme()));
@@ -241,7 +241,7 @@ void SetupMisc::applySettings()
     d->settings->setRightSideBarStyle(d->sidebarType->currentIndex());
     d->settings->setSortRole(d->sortOrderComboBox->currentIndex());
     d->settings->setReverseSort(d->sortReverse->isChecked());
-#ifdef Q_OS_LINUX
+#ifdef HAVE_APPSTYLE_SUPPORT
     d->settings->setApplicationStyle(d->applicationStyle->currentText());
 #endif
     d->settings->setIconTheme(d->iconTheme->currentData().toString());
diff --git a/core/utilities/setup/setupmisc.cpp b/core/utilities/setup/setupmisc.cpp
index a183688..f1d3560 100644
--- a/core/utilities/setup/setupmisc.cpp
+++ b/core/utilities/setup/setupmisc.cpp
@@ -153,7 +153,7 @@ SetupMisc::SetupMisc(QWidget* const parent)
         d->applicationStyle->addItem(styleList.at(i));
     }
 
-#ifndef Q_OS_LINUX
+#ifndef HAVE_APPSTYLE_SUPPORT
     // See Bug #365262
     appStyleHbox->setVisible(false);
 #endif
@@ -229,7 +229,7 @@ void SetupMisc::applySettings()
     settings->setSidebarTitleStyle(d->sidebarType->currentIndex() == 0 ? DMultiTabBar::ActiveIconText : DMultiTabBar::AllIconsText);
     settings->setStringComparisonType((ApplicationSettings::StringComparisonType)d->stringComparisonType->itemData(d->stringComparisonType->currentIndex()).toInt());
 
-#ifdef Q_OS_LINUX
+#ifdef HAVE_APPSTYLE_SUPPORT
     settings->setApplicationStyle(d->applicationStyle->currentText());
 #endif
 
@@ -251,7 +251,7 @@ void SetupMisc::readSettings()
     d->sidebarType->setCurrentIndex(settings->getSidebarTitleStyle() == DMultiTabBar::ActiveIconText ? 0 : 1);
     d->stringComparisonType->setCurrentIndex(settings->getStringComparisonType());
 
-#ifdef Q_OS_LINUX
+#ifdef HAVE_APPSTYLE_SUPPORT
     d->applicationStyle->setCurrentIndex(d->applicationStyle->findText(settings->getApplicationStyle(), Qt::MatchFixedString));
 #endif
 
