diff --git a/src/dolphinmainwindow.cpp b/src/dolphinmainwindow.cpp
index 37f6bb8e461f43a6e686e23e74e105f8af5f9f9c..7c9201b4dd34fde9703b515113db81aa63865831 100644
--- a/src/dolphinmainwindow.cpp
+++ b/src/dolphinmainwindow.cpp
@@ -55,3 +55,8 @@
 #include <KHelpMenu>
+#include <kio_version.h>
+#if KIO_VERSION >= QT_VERSION_CHECK(5, 69, 0)
 #include <KIO/CommandLauncherJob>
+#else
+#include <KRun>
+#endif
 #include <KIO/JobUiDelegate>
@@ -924,3 +939,7 @@ void DolphinMainWindow::compareFiles()
 
+#ifdef Q_OS_MACOS
+    QString command(QStringLiteral("open -a kompare --args -c \""));
+#else
     QString command(QStringLiteral("kompare -c \""));
+#endif
     command.append(urlA.toDisplayString(QUrl::PreferLocalFile));
@@ -930,2 +949,3 @@ void DolphinMainWindow::compareFiles()
 
+#if KIO_VERSION >= QT_VERSION_CHECK(5, 69, 0)
     KIO::CommandLauncherJob *job = new KIO::CommandLauncherJob(command, this);
@@ -933,2 +953,5 @@ void DolphinMainWindow::compareFiles()
     job->start();
+#else
+    KRun::runCommand(command, QStringLiteral("Kompare"), QStringLiteral("kompare"), this);
+#endif
 }
diff --git a/src/dolphinpart.cpp b/src/dolphinpart.cpp
index 0c41b2becaeecab1fac93cde86fc143978818ac1..1e6ac07ddfd0d61ebdcc74e381d383ecfb06e394 100644
--- a/src/dolphinpart.cpp
+++ b/src/dolphinpart.cpp
@@ -43,7 +43,11 @@
 #include <KMimeTypeEditor>
 #include <KNS3/KMoreToolsMenuFactory>
 #include <KPluginFactory>
+#if KIO_VERSION >= QT_VERSION_CHECK(5, 69, 0)
 #include <KIO/CommandLauncherJob>
+#else
+#include <KRun>
+#endif
 #include <KSharedConfig>
 #include <KToolInvocation>
 
@@ -547,10 +551,22 @@ void DolphinPart::slotFindFile()
     if (!(actions.isEmpty())) {
         actions.first()->trigger();
     } else {
+#if KIO_VERSION >= QT_VERSION_CHECK(5, 69, 0)
+#ifdef Q_OS_MACOS
+        KIO::CommandLauncherJob *job = new KIO::CommandLauncherJob(QStringLiteral("open -a kfind --args"), {url().toString()}, this);
+#else
         KIO::CommandLauncherJob *job = new KIO::CommandLauncherJob(QStringLiteral("kfind"), {url().toString()}, this);
+#endif
         job->setDesktopName(QStringLiteral("org.kde.kfind"));
         job->setUiDelegate(new KDialogJobUiDelegate(KJobUiDelegate::AutoHandlingEnabled, widget()));
         job->start();
+#else
+#ifdef Q_OS_MACOS
+        KRun::run(QStringLiteral("open -a kfind --args"), {url()}, widget());
+#else
+        KRun::run(QStringLiteral("kfind"), {url()}, widget());
+#endif
+#endif
     }
 }
 
diff --git a/src/dolphintabwidget.cpp b/src/dolphintabwidget.cpp
index fba6fe084992dc50a7b20f8ce21d984b2afc4bc3..e047be87b0750b9cf380a7ae4bd85356a55bf209 100644
--- a/src/dolphintabwidget.cpp
+++ b/src/dolphintabwidget.cpp
@@ -27,7 +27,11 @@
 #include <KConfigGroup>
 #include <KShell>
 #include <kio/global.h>
+#if KIO_VERSION >= QT_VERSION_CHECK(5, 69, 0)
 #include <KIO/CommandLauncherJob>
+#else
+#include <KRun>
+#endif
 #include <KAcceleratorManager>
 
 #include <QApplication>
@@ -334,9 +338,14 @@ void DolphinTabWidget::detachTab(int index)
     }
     args << QStringLiteral("--new-window");
 
-    KIO::CommandLauncherJob *job = new KIO::CommandLauncherJob("dolphin", args, this);
+#if KIO_VERSION >= QT_VERSION_CHECK(5, 69, 0)
+    KIO::CommandLauncherJob *job = new KIO::CommandLauncherJob(QCoreApplication::applicationFilePath(), args, this);
     job->setDesktopName(QStringLiteral("org.kde.dolphin"));
     job->start();
+#else
+    const QString command = QStringLiteral("%1 %2").arg(QCoreApplication::applicationFilePath()).arg(KShell::joinArgs(args));
+    KRun::runCommand(command, this);
+#endif
 
     closeTab(index);
 }
diff --git a/src/global.cpp b/src/global.cpp
index 19f43e06b04c5dcac9bfad6e755c579b57da4f55..4328ed6984d9346f0b8ead4ed036795b49218f87 100644
--- a/src/global.cpp
+++ b/src/global.cpp
@@ -23,9 +23,13 @@
 #include "dolphindebug.h"
 #include "dolphinmainwindowinterface.h"
 
+#if KIO_VERSION >= QT_VERSION_CHECK(5, 69, 0)
 #include <KDialogJobUiDelegate>
 #include <KIO/ApplicationLauncherJob>
 #include <KService>
+#else
+#include <KRun>
+#endif
 #include <KWindowSystem>
 
 #include <QApplication>
@@ -53,7 +57,7 @@ QUrl Dolphin::homeUrl()
 
 void Dolphin::openNewWindow(const QList<QUrl> &urls, QWidget *window, const OpenNewWindowFlags &flags)
 {
-    QString command = QStringLiteral("dolphin --new-window");
+    QString command = QStringLiteral("%1 --new-window").arg(QCoreApplication::applicationFilePath());
 
     if (flags.testFlag(OpenNewWindowFlag::Select)) {
         command.append(QLatin1String(" --select"));
@@ -62,11 +66,21 @@ void Dolphin::openNewWindow(const QList<QUrl> &urls, QWidget *window, const Open
     if (!urls.isEmpty()) {
         command.append(QLatin1String(" %U"));
     }
+#if KIO_VERSION >= QT_VERSION_CHECK(5, 69, 0)
     KService::Ptr service(new KService(QApplication::applicationDisplayName(), command, QApplication::windowIcon().name()));
     auto *job = new KIO::ApplicationLauncherJob(service, window);
     job->setUrls(urls);
     job->setUiDelegate(new KDialogJobUiDelegate(KJobUiDelegate::AutoHandlingEnabled, window));
     job->start();
+#else
+    KRun::run(
+        command,
+        urls,
+        window,
+        QApplication::applicationDisplayName(),
+        QApplication::windowIcon().name()
+    );
+#endif
 }
 
 bool Dolphin::attachToExistingInstance(const QList<QUrl>& inputUrls, bool openFiles, bool splitView, const QString& preferredService)
