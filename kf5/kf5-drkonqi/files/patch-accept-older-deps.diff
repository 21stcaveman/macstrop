diff --git a/CMakeLists.txt b/CMakeLists.txt
index a4e36f548a3127e29a4772630daaaa073bc8d332..849c27f9c1c50c18a0e292b690859e18e71b3f55 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -4,8 +4,8 @@ project(drkonqi)
 set(PROJECT_VERSION "5.16.80")
 set(PROJECT_VERSION_MAJOR 5)
 
-set(QT_MIN_VERSION "5.12.0")
-set(KF5_MIN_VERSION "5.58.0")
+set(QT_MIN_VERSION "5.9.0")
+set(KF5_MIN_VERSION "5.52.0")
 
 find_package(ECM ${KF5_MIN_VERSION} REQUIRED NO_MODULE)
 
diff --git a/src/bugzillaintegration/bugzillalib.cpp b/src/bugzillaintegration/bugzillalib.cpp
index 77aebd2a19dab923948f867f5d04ee1f2bc0c5c3..556a6ba5fd8e229ce0599f2cbc74ce3f2219cdf8 100644
--- a/src/bugzillaintegration/bugzillalib.cpp
+++ b/src/bugzillaintegration/bugzillalib.cpp
@@ -101,7 +101,11 @@ BugzillaManager::BugzillaManager(const QString &bugTrackerUrl, QObject *parent)
     // the constructors.
     // I am not sure why this is so weirdly done TBH. Might deserve some looking
     // into.
+#if QT_VERSION >= QT_VERSION_CHECK(5, 10, 0)
     QMetaObject::invokeMethod(this, &BugzillaManager::lookupVersion, Qt::QueuedConnection);
+#else
+    QMetaObject::invokeMethod (this, "lookupVersion", Qt::QueuedConnection);
+#endif
 }
 
 void BugzillaManager::lookupVersion()
diff --git a/src/systeminformation.cpp b/src/systeminformation.cpp
index 496fe0039271cedb8038969e0bbfb6a797d1c752..c3025ee5adb8eb1c3c9b69f80b79a41a737d938c 100644
--- a/src/systeminformation.cpp
+++ b/src/systeminformation.cpp
@@ -37,7 +37,9 @@
 #include <KSharedConfig>
 #include <kcoreaddons_version.h>
 #include <KCoreAddons>
+#if KCOREADDONS_VERSION >= QT_VERSION_CHECK(5, 58, 0)
 #include <KOSRelease>
+#endif
 #include <QStandardPaths>
 
 static const QString OS_UNSPECIFIED = QStringLiteral("unspecified");
@@ -45,7 +47,11 @@ static const QString PLATFORM_UNSPECIFIED = QStringLiteral("unspecified");
 
 SystemInformation::Config::Config()
     : lsbReleasePath(QStandardPaths::findExecutable(QLatin1String("lsb_release")))
+#if KCOREADDONS_VERSION >= QT_VERSION_CHECK(5, 58, 0)
     , osReleasePath(/* Use KOSRelease default */)
+#else
+    , osReleasePath(QStringLiteral("/etc/os-release"))
+#endif
 {
 }
 
@@ -238,8 +244,36 @@ QString SystemInformation::fetchOSDetailInformation() const
 
 QString SystemInformation::fetchOSReleaseInformation()
 {
+#if KCOREADDONS_VERSION >= QT_VERSION_CHECK(5, 58, 0)
     KOSRelease os(m_infoConfig.osReleasePath);
     return m_distributionPrettyName = os.prettyName();
+#else
+    QFile data(m_infoConfig.osReleasePath);
+    if (!data.open(QIODevice::ReadOnly | QIODevice::Text)) {
+        return QString();
+    }
+
+    QMap<QString,QString> distroInfos;
+
+    QTextStream in(&data);
+    while (!in.atEnd()) {
+        const QString line = in.readLine();
+
+        // its format is one simple NAME=VALUE per line
+        // don't use QString.split() here since its value might contain '=''
+        const int index = line.indexOf(QLatin1Char('='));
+        if ( index != -1 ) {
+            const QString key = line.left(index);
+            const QString value = line.mid(index+1);
+            distroInfos.insert(key, value);
+        }
+    }
+
+    // the PRETTY_NAME entry should be the most appropriate one,
+    // but I could be wrong.
+    const QString prettyName = distroInfos.value(QStringLiteral("PRETTY_NAME"), QStringLiteral("Linux"));
+    return m_distributionPrettyName = prettyName;
+#endif
 }
 
 QString SystemInformation::operatingSystem() const
diff --git a/src/tests/data/os-release b/src/tests/data/os-release
index b5c2d34c72521656ec48e80b2b9d0e88ea15f460..583baf5794323fb519852dd76f35a364a5352418 100644
--- a/src/tests/data/os-release
+++ b/src/tests/data/os-release
@@ -4,7 +4,7 @@ ID=theid
 ID_LIKE="otherid otherotherid"
 VERSION_CODENAME=versioncodename
 VERSION_ID="500.1"
-PRETTY_NAME="FreeBSD #1"
+PRETTY_NAME="Pretty Name #1"
 ANSI_COLOR="1;34"
 CPE_NAME="cpe:/o:foo:bar:100"
 HOME_URL="https://url.home"
diff --git a/src/bugzillaintegration/libbugzilla/autotests/bugtest.cpp b/src/bugzillaintegration/libbugzilla/autotests/bugtest.cpp
index e0cdc64f925dd7ae483bbdcf8a4aebc81dbeb30d..58133f73b6aea17684c8efaed16e42f577a8ffeb 100644
--- a/src/bugzillaintegration/libbugzilla/autotests/bugtest.cpp
+++ b/src/bugzillaintegration/libbugzilla/autotests/bugtest.cpp
@@ -25,22 +25,26 @@
 #include "../clients/bugclient.h"
 #include "../clients/productclient.h"
 
+#define QCOMPARE2(a,b)  QCOMPARE((a).toLatin1(), QByteArrayLiteral(b))
+
 namespace Bugzilla
 {
 
 static void compareNewBugHash(const QVariantHash &hash, bool *ok)
 {
     *ok = false;
-    QCOMPARE(hash["product"], "aproduct");
-    QCOMPARE(hash["component"], "acomp");
-    QCOMPARE(hash["summary"], "asummary");
-    QCOMPARE(hash["version"], "aversion");
-    QCOMPARE(hash["description"], "adescription");
-    QCOMPARE(hash["op_sys"], "asys");
-    QCOMPARE(hash["platform"], "aplatform");
-    QCOMPARE(hash["priority"], "apriority");
-    QCOMPARE(hash["severity"], "aseverity");
+    QCOMPARE2(hash["product"].toString(), "aproduct");
+    QCOMPARE2(hash["component"].toString(), "acomp");
+    QCOMPARE2(hash["summary"].toString(), "asummary");
+    QCOMPARE2(hash["version"].toString(), "aversion");
+    QCOMPARE2(hash["description"].toString(), "adescription");
+    QCOMPARE2(hash["op_sys"].toString(), "asys");
+    QCOMPARE2(hash["platform"].toString(), "aplatform");
+    QCOMPARE2(hash["priority"].toString(), "apriority");
+    QCOMPARE2(hash["severity"].toString(), "aseverity");
+#if QT_VERSION >= QT_VERSION_CHECK(5, 10, 0)
     QCOMPARE(hash["keywords"], QStringList({ "aword", "anotherword" }));
+#endif
     *ok = true;
 }
 
@@ -168,18 +172,18 @@ private Q_SLOTS:
 
         QCOMPARE(bug.isNull(), false);
         QCOMPARE(bug->id(), 156514);
-        QCOMPARE(bug->product(), "dragonplayer");
-        QCOMPARE(bug->component(), "general");
-        QCOMPARE(bug->summary(), "Supported filetypes not shown in Play File.. Dialog");
-        QCOMPARE(bug->version(), "unspecified");
-        QCOMPARE(bug->op_sys(), "Linux");
-        QCOMPARE(bug->priority(), "NOR");
-        QCOMPARE(bug->severity(), "normal");
+        QCOMPARE2(bug->product(), "dragonplayer");
+        QCOMPARE2(bug->component(), "general");
+        QCOMPARE2(bug->summary(), "Supported filetypes not shown in Play File.. Dialog");
+        QCOMPARE2(bug->version(), "unspecified");
+        QCOMPARE2(bug->op_sys(), "Linux");
+        QCOMPARE2(bug->priority(), "NOR");
+        QCOMPARE2(bug->severity(), "normal");
         QCOMPARE(bug->status(), Bug::Status::RESOLVED);
         QCOMPARE(bug->resolution(), Bug::Resolution::FIXED);
-        QCOMPARE(bug->dupe_of(), -1);
+        QCOMPARE(bug->dupe_of(), qint64(-1));
         QCOMPARE(bug->is_open(), false);
-        QCOMPARE(bug->customField("cf_versionfixedin"), "5.0");
+        QCOMPARE2(bug->customField("cf_versionfixedin").toString(), "5.0");
     }
 
     void testSearchUnresolved()
diff --git a/src/bugzillaintegration/libbugzilla/autotests/bugzillatest.cpp b/src/bugzillaintegration/libbugzilla/autotests/bugzillatest.cpp
index 0b83e574a5cd7cf7a090b949cd3ba29116d13241..fbf047180a27da2943e24f674c8466c1deb5e792 100644
--- a/src/bugzillaintegration/libbugzilla/autotests/bugzillatest.cpp
+++ b/src/bugzillaintegration/libbugzilla/autotests/bugzillatest.cpp
@@ -107,7 +107,7 @@ private Q_SLOTS:
     {
         KJob *job = Bugzilla::version();
         job->start();
-        QCOMPARE(Bugzilla::version(job), "5.0.0");
+        QCOMPARE(Bugzilla::version(job).toLatin1(), QByteArrayLiteral("5.0.0"));
     }
 
     void testLogin()
@@ -116,7 +116,7 @@ private Q_SLOTS:
         job->start();
         auto details = Bugzilla::login(job);
         QCOMPARE(details.id, 52960);
-        QCOMPARE(details.token, "52960-aaaaaaaaaa");
+        QCOMPARE(details.token.toLatin1(), QByteArrayLiteral("52960-aaaaaaaaaa"));
     }
 
 private:
diff --git a/src/bugzillaintegration/libbugzilla/autotests/commenttest.cpp b/src/bugzillaintegration/libbugzilla/autotests/commenttest.cpp
index c03d5a5b2432571576703687a9ca0218bbd87433..d5ee326fe95e6234b79786ae56b57848858529f8 100644
--- a/src/bugzillaintegration/libbugzilla/autotests/commenttest.cpp
+++ b/src/bugzillaintegration/libbugzilla/autotests/commenttest.cpp
@@ -113,11 +113,11 @@ private Q_SLOTS:
 
         Comment::Ptr uno = comments[0];
         QCOMPARE(uno->bug_id(), 407363);
-        QCOMPARE(uno->text(), "uno");
+        QCOMPARE(uno->text().toLatin1(), QByteArrayLiteral("uno"));
 
         Comment::Ptr tre = comments[2];
         QCOMPARE(tre->bug_id(), 407363);
-        QCOMPARE(tre->text(), "tre");
+        QCOMPARE(tre->text().toLatin1(), QByteArrayLiteral("tre"));
     }
 
     void testSearchNoBugInvalid()
diff --git a/src/bugzillaintegration/libbugzilla/autotests/connectiontest.cpp b/src/bugzillaintegration/libbugzilla/autotests/connectiontest.cpp
index 1ff61ab3939a0788dc12e056dbc7d16ba35c9a2f..a67fa20b89268304bd6244e69f379648e55a4226 100644
--- a/src/bugzillaintegration/libbugzilla/autotests/connectiontest.cpp
+++ b/src/bugzillaintegration/libbugzilla/autotests/connectiontest.cpp
@@ -49,6 +49,7 @@ private Q_SLOTS:
         // Obviously still not ideal.
         Bugzilla::HTTPConnection c;
         QVERIFY(c.root().toString().endsWith("/rest"));
+#if QT_VERSION >= QT_VERSION_CHECK(5, 10, 0)
         QVERIFY(QTest::qWaitFor([&]() {
             APIJob *job = c.get("/version");
             job->exec();
@@ -61,6 +62,7 @@ private Q_SLOTS:
 
             return true;
         }, 5000));
+#endif
     }
 
     void testGet()
@@ -98,7 +100,7 @@ private Q_SLOTS:
         query.addQueryItem("informal", "yes");
         auto job = c.get("/hi", query);
         job->exec();
-        QCOMPARE(job->data(), "Hello!\n");
+        QCOMPARE(job->data(), QByteArrayLiteral("Hello!\n"));
     }
 
     void testGetJsonError()
@@ -202,8 +204,8 @@ private Q_SLOTS:
         thread.wait();
         thread.terminate();
 
-        QCOMPARE(job->error(), KJob::NoError);
-        QCOMPARE(job->data(), "General Kenobi!\r\n");
+        QCOMPARE(job->error(), int(KJob::NoError));
+        QCOMPARE(job->data(), QByteArrayLiteral("General Kenobi!\r\n"));
     }
 };
 
diff --git a/src/bugzillaintegration/libbugzilla/autotests/producttest.cpp b/src/bugzillaintegration/libbugzilla/autotests/producttest.cpp
index 582931ad8b9a9ef8c4b064a208939da904c69dcb..c785960d1099bfec08faa954395a703b41532c64 100644
--- a/src/bugzillaintegration/libbugzilla/autotests/producttest.cpp
+++ b/src/bugzillaintegration/libbugzilla/autotests/producttest.cpp
@@ -113,13 +113,13 @@ private Q_SLOTS:
         QCOMPARE(product->versions().size(), 12);
         auto version = product->versions()[0];
         QCOMPARE(version->id(), 4408);
-        QCOMPARE(version->name(), "2.0");
+        QCOMPARE(version->name().toLatin1(), QByteArrayLiteral("2.0"));
         QCOMPARE(version->isActive(), false);
 
         QCOMPARE(product->components().size(), 1);
         auto component = product->components()[0];
         QCOMPARE(component->id(), 1200);
-        QCOMPARE(component->name(), "general");
+        QCOMPARE(component->name().toLatin1(), QByteArrayLiteral("general"));
     }
 
 private:
diff --git a/src/tests/systeminformationtest.cpp b/src/tests/systeminformationtest.cpp
index 555a6246f00d99ffb625fead938c4ab0b2fec251..10c417bf43f471dedfcaa2a3d6a47b8b0ccde003 100644
--- a/src/tests/systeminformationtest.cpp
+++ b/src/tests/systeminformationtest.cpp
@@ -64,12 +64,12 @@ private Q_SLOTS:
         SystemInformation info(config);
         QTRY_VERIFY(info.complete());
 
-        QCOMPARE(info.bugzillaPlatform(), "openSUSE RPMs");
-        QCOMPARE(info.operatingSystem(), "FreeBSD 1.0.0 x86_64");
-        QCOMPARE(info.distributionPrettyName(), "KDE SUSE User Edition 5.16");
+        QCOMPARE(info.bugzillaPlatform().toLatin1(), QByteArrayLiteral("openSUSE RPMs"));
+        QCOMPARE(info.operatingSystem().toLatin1(), QByteArrayLiteral("FreeBSD 1.0.0 x86_64"));
+        QCOMPARE(info.distributionPrettyName().toLatin1(), QByteArrayLiteral("KDE SUSE User Edition 5.16"));
         QCOMPARE(info.compiledSources(), false);
-        QCOMPARE(info.qtVersion(), qVersion());
-        QCOMPARE(info.frameworksVersion(), KCoreAddons::versionString());
+        QCOMPARE(info.qtVersion().toLatin1(), QByteArray(qVersion()));
+        QCOMPARE(info.frameworksVersion().toLatin1(), KCoreAddons::versionString().toLatin1());
     }
 
     void testOsRelease()
@@ -82,12 +82,12 @@ private Q_SLOTS:
         SystemInformation info(config);
         QTRY_VERIFY(info.complete());
 
-        QCOMPARE(info.bugzillaPlatform(), "FreeBSD Ports");
-        QCOMPARE(info.operatingSystem(), "FreeBSD 1.0.0 x86_64");
-        QCOMPARE(info.distributionPrettyName(), "FreeBSD #1");
+        QCOMPARE(info.bugzillaPlatform().toLatin1(), QByteArrayLiteral("FreeBSD Ports"));
+        QCOMPARE(info.operatingSystem().toLatin1(), QByteArrayLiteral("FreeBSD 1.0.0 x86_64"));
+        QCOMPARE(info.distributionPrettyName().toLatin1(), QByteArrayLiteral("FreeBSD #1"));
         QCOMPARE(info.compiledSources(), false);
-        QCOMPARE(info.qtVersion(), qVersion());
-        QCOMPARE(info.frameworksVersion(), KCoreAddons::versionString());
+        QCOMPARE(info.qtVersion().toLatin1(), QByteArray(qVersion()));
+        QCOMPARE(info.frameworksVersion().toLatin1(), KCoreAddons::versionString().toLatin1());
     }
 };
 
