diff --git a/CMakeLists.txt b/CMakeLists.txt
index 29b08be66be05c12eccc1fca240c3177ec3bb413..78995fea62bee181859c567192645f5960ec454d 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -4,8 +4,8 @@ project(drkonqi)
 set(PROJECT_VERSION "5.17.80")
 set(PROJECT_VERSION_MAJOR 5)
 
-set(QT_MIN_VERSION "5.12.0")
-set(KF5_MIN_VERSION "5.61.0")
+set(QT_MIN_VERSION "5.9.0")
+set(KF5_MIN_VERSION "5.60.0")
 
 find_package(ECM ${KF5_MIN_VERSION} REQUIRED NO_MODULE)
 
diff --git a/src/systeminformation.cpp b/src/systeminformation.cpp
index 1a7c8b11..2df1731a 100644
--- a/src/systeminformation.cpp
+++ b/src/systeminformation.cpp
@@ -28,6 +28,7 @@
 # include <sys/utsname.h>
 #endif
 
+#include <QFile>
 
 #include <KProcess>
 #include "drkonqi_debug.h"
@@ -36,7 +37,9 @@
 #include <KSharedConfig>
 #include <kcoreaddons_version.h>
 #include <KCoreAddons>
+#if KCOREADDONS_VERSION >= QT_VERSION_CHECK(5, 58, 0)
 #include <KOSRelease>
+#endif
 #include <QStandardPaths>
 
 static const QString OS_UNSPECIFIED = QStringLiteral("unspecified");
@@ -81,7 +84,11 @@ static QString fetchBasicOperatingSystem()
 SystemInformation::Config::Config()
     : basicOperatingSystem(fetchBasicOperatingSystem())
     , lsbReleasePath(QStandardPaths::findExecutable(QStringLiteral("lsb_release")))
+#if KCOREADDONS_VERSION >= QT_VERSION_CHECK(5, 58, 0)
     , osReleasePath(/* Use KOSRelease default */)
+#else
+    , osReleasePath(QStringLiteral("/etc/os-release"))
+#endif
 {
 }
 
@@ -236,8 +243,36 @@ QString SystemInformation::fetchOSDetailInformation() const
 
 QString SystemInformation::fetchOSReleaseInformation()
 {
+#if KCOREADDONS_VERSION >= QT_VERSION_CHECK(5, 58, 0)
     KOSRelease os(m_infoConfig.osReleasePath);
     return m_distributionPrettyName = os.prettyName();
+#else
+    QFile data(m_infoConfig.osReleasePath);
+    if (!data.open(QIODevice::ReadOnly | QIODevice::Text)) {
+        return QString();
+    }
+
+    QMap<QString,QString> distroInfos;
+
+    QTextStream in(&data);
+    while (!in.atEnd()) {
+        const QString line = in.readLine();
+
+        // its format is one simple NAME=VALUE per line
+        // don't use QString.split() here since its value might contain '=''
+        const int index = line.indexOf(QLatin1Char('='));
+        if ( index != -1 ) {
+            const QString key = line.left(index);
+            const QString value = line.mid(index+1);
+            distroInfos.insert(key, value);
+        }
+    }
+
+    // the PRETTY_NAME entry should be the most appropriate one,
+    // but I could be wrong.
+    const QString prettyName = distroInfos.value(QStringLiteral("PRETTY_NAME"), QStringLiteral("Linux"));
+    return m_distributionPrettyName = prettyName;
+#endif
 }
 
 QString SystemInformation::operatingSystem() const
diff --git a/src/bugzillaintegration/libbugzilla/exceptions.h b/src/bugzillaintegration/libbugzilla/exceptions.h
index a15b48eb10737920fe5ecda8ff2f8848c594b936..34c42eb0761ef67ffd08eb3c1b5d6f43e57b7730 100644
--- a/src/bugzillaintegration/libbugzilla/exceptions.h
+++ b/src/bugzillaintegration/libbugzilla/exceptions.h
@@ -22,6 +22,7 @@
 #define EXCEPTIONS_H
 
 #include <QException>
+#include <QString>
 
 class QJsonDocument;
 class QJsonObject;
