diff --git config-kdevelop.h.cmake config-kdevelop.h.cmake
index 941b8e7873b30926b1415cf59e0d0e3fc3af333d..01046e059505e3d8de0e00aa492eeef7bbd286e4 100644
--- config-kdevelop.h.cmake
+++ config-kdevelop.h.cmake
@@ -3,6 +3,8 @@
 
 /* config-kdevelop.h.  Generated by cmake from config-kdevelop.h.cmake */
 
+#define KDEVELOP_INSTALL_PREFIX "@CMAKE_INSTALL_PREFIX@"
+
 #cmakedefine01 KDEVELOP_SINGLE_APP
 
 #cmakedefine01 KF5SysGuard_FOUND
diff --git plugins/cmake/cmakebuilddirchooser.ui plugins/cmake/cmakebuilddirchooser.ui
index d30da357e0dc29e2a4adc6c2e77e4807d9d11683..5f7b4078b09104cc7b154360038f270eee18edc5 100644
--- plugins/cmake/cmakebuilddirchooser.ui
+++ plugins/cmake/cmakebuilddirchooser.ui
@@ -79,6 +79,9 @@
        <verstretch>0</verstretch>
       </sizepolicy>
      </property>
+     <property name="toolTip">
+      <string>The prefix under which the project will be installed. Leaving this empty will let CMake use its default install prefix.</string>
+     </property>
     </widget>
    </item>
    <item row="4" column="0">
diff --git plugins/cmake/cmakeutils.cpp plugins/cmake/cmakeutils.cpp
index b2fd618f03..133bf9eb1f 100644
--- plugins/cmake/cmakeutils.cpp
+++ plugins/cmake/cmakeutils.cpp
@@ -18,6 +18,7 @@
  * 02110-1301, USA.
  */
 
+#include "config-kdevelop.h"
 #include "cmakeutils.h"
 #include "cmakeprojectdata.h"
 
@@ -314,7 +314,10 @@ QString currentBuildType( KDevelop::IProject* project, int builddir )
 
 QString findExecutable()
 {
-    auto cmake = QStandardPaths::findExecutable(QStringLiteral("cmake"));
+    auto cmake = QStandardPaths::findExecutable(QStringLiteral("cmake"), QStringList(QStringLiteral(KDEVELOP_INSTALL_PREFIX"/bin")));
+    if (cmake.isEmpty()) {
+        cmake = QStandardPaths::findExecutable(QStringLiteral("cmake"));
+    }
 #ifdef Q_OS_WIN
     if (cmake.isEmpty())
         cmake = QStandardPaths::findExecutable("cmake",{
@@ -359,13 +374,13 @@ KDevelop::Path currentCMakeExecutable(KDevelop::IProject* project, int builddir)
 
 KDevelop::Path currentInstallDir( KDevelop::IProject* project, int builddir )
 {
-    const QString defaultInstallDir =
-#ifdef Q_OS_WIN
-        QStringLiteral("C:\\Program Files");
-#else
-        QStringLiteral("/usr/local");
-#endif
-    return KDevelop::Path(readBuildDirParameter( project, Config::Specific::cmakeInstallDirKey, defaultInstallDir, builddir ));
+//     const QString defaultInstallDir =
+// #ifdef Q_OS_WIN
+//         QStringLiteral("C:\\Program Files");
+// #else
+//         QStringLiteral(KDEVELOP_INSTALL_PREFIX);
+// #endif
+    return KDevelop::Path(readBuildDirParameter( project, Config::Specific::cmakeInstallDirKey, QString(), builddir ));
 }
 
 QString projectRootRelative( KDevelop::IProject* project )
diff --git plugins/cmake/cmakeutils.h plugins/cmake/cmakeutils.h
index 3642b94c21dd3daeefdbb1fd75ce6ff0a65de702..329681c15c3b6e8d2a0b91af784feae2b9b01a17 100644
--- plugins/cmake/cmakeutils.h
+++ plugins/cmake/cmakeutils.h
@@ -116,7 +122,8 @@ namespace CMake
     KDEVCMAKECOMMON_EXPORT KDevelop::Path currentCMakeExecutable(KDevelop::IProject* project, int builddir = -1);
 
     /**
-     * @returns the current install dir for the given project or "/usr/local" as default value.
+     * @returns the current install dir for the given project or an empty string if none has been defined
+     * (in that case, whatever default CMake sets for the platform will be used.)
      */
     KDEVCMAKECOMMON_EXPORT KDevelop::Path currentInstallDir( KDevelop::IProject* project, int builddir = -1 );
     
diff --git plugins/manpage/manpageplugin.cpp plugins/manpage/manpageplugin.cpp
index 0690b5add0..fea9b5b2ac 100644
--- plugins/manpage/manpageplugin.cpp
+++ plugins/manpage/manpageplugin.cpp
@@ -18,6 +18,7 @@
     Boston, MA 02110-1301, USA.
 */
 
+#include "config-kdevelop.h"
 #include "manpageplugin.h"
 
 #include "manpagedocumentation.h"
@@ -91,7 +91,8 @@ IDocumentation::Ptr ManPagePlugin::documentationForDeclaration( Declaration* dec
 
     // Don't show man-page documentation for files that are not in /usr/include, because then we
     // most probably will be confusing the global function-name with a local one
-    if (!dec->topContext()->url().str().startsWith(QLatin1String("/usr/")))
+    if (!dec->topContext()->url().str().startsWith(QLatin1String("/usr/"))
+            && !dec->topContext()->url().str().startsWith(QLatin1String(KDEVELOP_INSTALL_PREFIX)))
         return {};
 
     ///@todo Do more verification to make sure that we're showing the correct documentation for the declaration
