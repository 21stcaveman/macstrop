diff --git plugins/customscript/customscript_plugin.cpp plugins/customscript/customscript_plugin.cpp
index bd15aa4968..8a1d96e311 100644
--- plugins/customscript/customscript_plugin.cpp
+++ plugins/customscript/customscript_plugin.cpp
@@ -246,12 +246,12 @@ KDevelop::SourceFormatterStyle CustomScriptPlugin::predefinedStyle(const QString
         result.setCaption(i18n("Gnu Indent: Original Berkeley indent style"));
         result.setContent(QStringLiteral("indent -orig"));
         result.setUsePreview(true);
-    } else if (name == QLatin1String("kdev_format_source")) {
-        result.setCaption(QStringLiteral("KDevelop: kdev_format_source"));
-        result.setContent(QStringLiteral("kdev_format_source $FILE $TMPFILE"));
+    } else if (name == QLatin1String("kdev_format_source5")) {
+        result.setCaption(QStringLiteral("KDevelop: kdev_format_source5"));
+        result.setContent(QStringLiteral("kdev_format_source5 $FILE $TMPFILE"));
         result.setUsePreview(false);
         result.setDescription(i18n("Description:<br />"
-                                   "<b>kdev_format_source</b> is a script bundled with KDevelop "
+                                   "<b>kdev_format_source5</b> is a script bundled with KDevelop "
                                    "which allows using fine-grained formatting rules by placing "
                                    "meta-files called <b>format_sources</b> into the file-system.<br /><br />"
                                    "Each line of the <b>format_sources</b> files defines a list of wildcards "
@@ -273,7 +273,10 @@ KDevelop::SourceFormatterStyle CustomScriptPlugin::predefinedStyle(const QString
         {QStringLiteral("text/x-c++hdr"), QStringLiteral("C++")},
         {QStringLiteral("text/x-csrc"),   QStringLiteral("C")},
         {QStringLiteral("text/x-java"),   QStringLiteral("Java")},
-        {QStringLiteral("text/x-csharp"), QStringLiteral("C#")}
+        {QStringLiteral("text/x-csharp"), QStringLiteral("C#")},
+        {QStringLiteral("text/x-objchdr"), QStringLiteral("ObjC")},
+        {QStringLiteral("text/x-objcsrc"), QStringLiteral("ObjC")},
+        {QStringLiteral("text/x-objc++src"), QStringLiteral("ObjC++")},
     });
     return result;
 }
@@ -281,7 +284,7 @@ KDevelop::SourceFormatterStyle CustomScriptPlugin::predefinedStyle(const QString
 QVector<KDevelop::SourceFormatterStyle> CustomScriptPlugin::predefinedStyles() const
 {
     const QVector<KDevelop::SourceFormatterStyle> styles = stylesFromLanguagePlugins() + QVector<KDevelop::SourceFormatterStyle>{
-        predefinedStyle(QStringLiteral("kdev_format_source")),
+        predefinedStyle(QStringLiteral("kdev_format_source5")),
         predefinedStyle(QStringLiteral("GNU_indent_GNU")),
         predefinedStyle(QStringLiteral("GNU_indent_KR")),
         predefinedStyle(QStringLiteral("GNU_indent_orig")),
