diff --git kdevplatform/documentation/documentationview.cpp kdevplatform/documentation/documentationview.cpp
index e78ba51bec684f7391ac4a1fe90e7d83d3976fc9..f04369bd9b9b649c5dff84ee90c29bfd34234ae9 100644
--- kdevplatform/documentation/documentationview.cpp
+++ kdevplatform/documentation/documentationview.cpp
@@ -28,6 +28,7 @@
 #include <QAbstractItemView>
 #include <QLineEdit>
 #include <QShortcut>
+#include <QEvent>
 
 #include <KLocalizedString>
 #include <KMessageBox>
@@ -40,6 +41,8 @@
 #include "documentationfindwidget.h"
 #include "debug.h"
 
+#include <sublime/idealdockwidget.h>
+
 using namespace KDevelop;
 
 DocumentationView::DocumentationView(QWidget* parent, ProvidersModel* model)
@@ -81,8 +84,30 @@ DocumentationView::DocumentationView(QWidget* parent, ProvidersModel* model)
     setFocusProxy(mIdentifiers);
 
     QMetaObject::invokeMethod(this, "initialize", Qt::QueuedConnection);
+
+    floatStandaloneWindows();
+}
+
+bool DocumentationView::event(QEvent* e)
+{
+    if (e->type() == QEvent::ParentChange) {
+        // we'll have to make the new IdealDockWidget parent
+        // behave the way we'd like it to behave.
+        floatStandaloneWindows();
+    }
+    return QWidget::event(e);
 }
 
+void DocumentationView::floatStandaloneWindows()
+{
+    Sublime::IdealDockWidget* dockWidget = dynamic_cast<Sublime::IdealDockWidget*>(parent());
+    if (dockWidget) {
+        dockWidget->setFloating(false);
+        dockWidget->setFloatsAsStandalone(true);
+    }
+}
+
+
 QList<QAction*> DocumentationView::contextMenuActions() const
 {
     // TODO: also show providers
diff --git kdevplatform/documentation/documentationview.h kdevplatform/documentation/documentationview.h
index 5932941e525cf69d4abdc87fd2629e0c9dc10e94..f3be37ab64c561d88a652487dc4e87756c9b3fc3 100644
--- kdevplatform/documentation/documentationview.h
+++ kdevplatform/documentation/documentationview.h
@@ -56,10 +56,14 @@ public Q_SLOTS:
     void changedProvider(int);
     void showHome();
 
+protected:
+    bool event(QEvent* e) override;
+
 private:
     void setupActions();
     void updateView();
     void returnPressed();
+    void floatStandaloneWindows();
 
     QAction* mForward;
     QAction* mBack;
