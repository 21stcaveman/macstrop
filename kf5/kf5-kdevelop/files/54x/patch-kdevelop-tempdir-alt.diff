diff --git kdevplatform/shell/core.cpp kdevplatform/shell/core.cpp
index c1fd662f89cf826baea3247bf90c5348aead7c00..66b6c4271b17d3a18197faa8d2fa236cbbac675f 100644
--- kdevplatform/shell/core.cpp
+++ kdevplatform/shell/core.cpp
@@ -36,6 +37,9 @@
 #include "languagecontroller.h"
 #include "documentcontroller.h"
 #include "runcontroller.h"
+
+#include <QProcessEnvironment>
+
 #include "session.h"
 #include "documentationcontroller.h"
 #include "sourceformattercontroller.h"
@@ -447,6 +570,16 @@ KAboutData Core::aboutData() const
     return d->m_aboutData;
 }
 
+void Core::systemEnvironment(QProcessEnvironment& env) const
+{
+    env = QProcessEnvironment::systemEnvironment();
+    if (!d->m_originalTmpDir.isEmpty()) {
+        // restore the original TMPDIR value
+        env.remove(QStringLiteral("TMPDIR"));
+        env.insert(QStringLiteral("TMPDIR" ), d->m_originalTmpDir);
+    }
+}
+
 IUiController *Core::uiController()
 {
     return d->uiController.data();
diff --git kdevplatform/shell/core.h kdevplatform/shell/core.h
index 45558c7c10cfc4e14debe588a5ebd1de5dc6e29e..ea343b0a002acfa1a53195151d1e1f4857fe1566 100644
--- kdevplatform/shell/core.h
+++ kdevplatform/shell/core.h
@@ -24,6 +24,7 @@
 #include "shellexport.h"
 #include <interfaces/icore.h>
 
+class QProcessEnvironment;
 class KAboutData;
 
 namespace KDevelop {
@@ -90,6 +91,14 @@ public:
 
     KAboutData aboutData() const override;
 
+    /**
+     * Returns the our current environment with TMPDIR reset to
+     * its original value, in a form suitable to defined the
+     * environment for child processes without alterning our own.
+     * \see QProcessEnvironment::systemEnvironment()
+     */
+    void systemEnvironment(QProcessEnvironment& env) const;
+
     /// The following methods may only be used within the shell.
 
     UiController *uiControllerInternal();
diff --git kdevplatform/shell/core_p.h kdevplatform/shell/core_p.h
index d5ed3525cc9114642a2e18301bb98f60c0e0e98f..cd963d809ec0e7b2e7d71c392908a905d17f1dfe 100644
--- kdevplatform/shell/core_p.h
+++ kdevplatform/shell/core_p.h
@@ -26,6 +26,7 @@
 #include <KAboutData>
 
 #include <QPointer>
+class QDir;
 
 namespace KDevelop
 {
@@ -74,6 +79,8 @@ public:
     bool m_cleanedUp;
     bool m_shuttingDown;
     Core::Setup m_mode;
+    QString m_originalTmpDir;
+    QDir* m_tmpDir = nullptr;
 };
 
 }
diff --git kdevplatform/shell/core.cpp kdevplatform/shell/core.cpp
index c1fd662f89cf826baea3247bf90c5348aead7c00..ede4f7f3ac5f18640a8d2e701bea16dd889a68e3 100644
--- kdevplatform/shell/core.cpp
+++ kdevplatform/shell/core.cpp
@@ -130,6 +171,30 @@ bool CorePrivate::initialize(Core::Setup mode, const QString& session )
     m_mode=mode;
 
     qCDebug(SHELL) << "Creating controllers";
+#if defined(Q_OS_UNIX)
+    auto tmpLocation = QStandardPaths::writableLocation(QStandardPaths::TempLocation);
+    const QString tmpName(QStringLiteral("/kdevelop-tmp-%1-").arg(getuid()));
+    const auto pos = tmpLocation.lastIndexOf(tmpName);
+    if (pos >= 0) {
+        // we must have been started by another KDevelop session,
+        // restore the default TempLocation
+        tmpLocation = tmpLocation.left(pos);
+    }
+    tmpLocation += tmpName + session;
+    m_tmpDir = new QDir(tmpLocation);
+    if (m_tmpDir->exists()) {
+        qCDebug(SHELL) << "Removing existing session temp dir" << tmpLocation;
+        m_tmpDir->removeRecursively();
+    }
+    m_tmpDir->mkpath(tmpLocation);
+    if (m_tmpDir->exists()) {
+        const auto origTmpDir = qgetenv("TMPDIR");
+        if (!origTmpDir.isEmpty()) {
+            m_originalTmpDir = QString::fromUtf8(origTmpDir);
+        }
+        qputenv("TMPDIR", tmpLocation.toLatin1());
+    }
+#endif
 
     if( !sessionController )
     {
@@ -313,6 +396,11 @@ CorePrivate::~CorePrivate()
     delete testController.data();
     delete runtimeController.data();
 
+    if (m_tmpDir->exists()) {
+        m_tmpDir->removeRecursively();
+        delete m_tmpDir;
+    }
+
     selectionController.clear();
     projectController.clear();
     languageController.clear();
