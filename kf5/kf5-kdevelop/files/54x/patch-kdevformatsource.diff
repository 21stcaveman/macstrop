diff --git kdevplatform/util/CMakeLists.txt kdevplatform/util/CMakeLists.txt
index b70fecdb62a1b7a7b113c48559da8e01ee248999..290b4b6e000b1f62fbcb10ee0b2a7a4ce851580a 100644
--- kdevplatform/util/CMakeLists.txt
+++ kdevplatform/util/CMakeLists.txt
@@ -61,10 +61,10 @@ PRIVATE
 )
 install( FILES kdevplatform_shell_environment.sh DESTINATION bin PERMISSIONS OWNER_EXECUTE OWNER_WRITE OWNER_READ GROUP_EXECUTE GROUP_READ WORLD_EXECUTE WORLD_READ)
 
-add_executable(kdev_format_source kdevformatsource.cpp kdevformatfile.cpp)
-ecm_mark_nongui_executable(kdev_format_source)
-target_link_libraries(kdev_format_source Qt5::Core)
-install(TARGETS kdev_format_source DESTINATION ${KDE_INSTALL_TARGETS_DEFAULT_ARGS})
+add_executable(kdev_format_source5 kdevformatsource.cpp kdevformatfile.cpp)
+ecm_mark_nongui_executable(kdev_format_source5)
+target_link_libraries(kdev_format_source5 Qt5::Core)
+install(TARGETS kdev_format_source5 DESTINATION ${KDE_INSTALL_TARGETS_DEFAULT_ARGS})
 
 install(FILES .zshrc PERMISSIONS OWNER_EXECUTE OWNER_WRITE OWNER_READ GROUP_EXECUTE GROUP_READ WORLD_EXECUTE WORLD_READ
         DESTINATION ${KDE_INSTALL_DATAROOTDIR}/kdevplatform/shellutils/)
diff --git plugins/customscript/customscript_plugin.cpp plugins/customscript/customscript_plugin.cpp
index eac8286cb468b61d34cea954422012bf623460bd..99ae0839d51b1afff12103a40c394221714506e5 100644
--- plugins/customscript/customscript_plugin.cpp
+++ plugins/customscript/customscript_plugin.cpp
@@ -258,12 +258,12 @@ KDevelop::SourceFormatterStyle CustomScriptPlugin::predefinedStyle(const QString
                                    "project. It supports a variety of formatting style options via "
                                    "a <b>.clang-format</b> configuration file, usually located in "
                                    "the project root directory."));
-    } else if (name == QLatin1String("kdev_format_source")) {
-        result.setCaption(QStringLiteral("KDevelop: kdev_format_source"));
-        result.setContent(QStringLiteral("kdev_format_source $FILE $TMPFILE"));
+    } else if (name == QLatin1String("kdev_format_source5")) {
+        result.setCaption(QStringLiteral("KDevelop: kdev_format_source5"));
+        result.setContent(QStringLiteral("kdev_format_source5 $FILE $TMPFILE"));
         result.setUsePreview(false);
         result.setDescription(i18n("Description:<br />"
-                                   "<b>kdev_format_source</b> is a script bundled with KDevelop "
+                                   "<b>kdev_format_source5</b> is a script bundled with KDevelop "
                                    "which allows using fine-grained formatting rules by placing "
                                    "meta-files called <b>format_sources</b> into the file-system.<br /><br />"
                                    "Each line of the <b>format_sources</b> files defines a list of wildcards "
@@ -296,7 +296,7 @@ KDevelop::SourceFormatterStyle CustomScriptPlugin::predefinedStyle(const QString
 QVector<KDevelop::SourceFormatterStyle> CustomScriptPlugin::predefinedStyles() const
 {
     const QVector<KDevelop::SourceFormatterStyle> styles = stylesFromLanguagePlugins() + QVector<KDevelop::SourceFormatterStyle>{
-        predefinedStyle(QStringLiteral("kdev_format_source")),
+        predefinedStyle(QStringLiteral("kdev_format_source5")),
         predefinedStyle(QStringLiteral("clang_format")),
         predefinedStyle(QStringLiteral("GNU_indent_GNU")),
         predefinedStyle(QStringLiteral("GNU_indent_KR")),
