diff --git kdevplatform/serialization/itemrepositoryregistry.cpp kdevplatform/serialization/itemrepositoryregistry.cpp
index 0994d02725f5c9e58ea368c90f612ad0173a9d4d..bff4d4ce6a2353bc331051cff61eb8314b69ace4 100644
--- kdevplatform/serialization/itemrepositoryregistry.cpp
+++ kdevplatform/serialization/itemrepositoryregistry.cpp
@@ -27,6 +27,7 @@
 #include <KLocalizedString>
 
 #include <util/shellutils.h>
+#include <interfaces/icore.h>
 
 #include "abstractitemrepository.h"
 #include "debug.h"
@@ -63,9 +64,9 @@ bool shouldClear(const QString& path)
         return true;
     }
 
-    if (!dir.exists(QStringLiteral("version_%1").arg(staticItemRepositoryVersion()))) {
-        qCWarning(SERIALIZATION) << "version mismatch or no version hint; expected version:" <<
-            staticItemRepositoryVersion();
+    if (!dir.exists(QStringLiteral("version_%1").arg(staticItemRepositoryVersion(), 0, 16))) {
+       qCWarning(SERIALIZATION) << "version mismatch or no version hint; expected version:" <<
+            QString().setNum(staticItemRepositoryVersion(), 16);
         return true;
     }
 
@@ -212,9 +213,13 @@ void ItemRepositoryRegistry::registerRepository(AbstractItemRepository* reposito
     d->m_repositories.insert(repository, manager);
     if (!d->m_path.isEmpty()) {
         if (!repository->open(d->m_path)) {
-            d->deleteDataDirectory(d->m_path);
-            qCritical() << "failed to open a repository";
-            abort();
+            qCritical() << "failed to open repository" << repository->repositoryName() << "at" << d->m_path;
+            if (!ICore::self()->shuttingDown()) {
+                d->deleteDataDirectory(d->m_path, true);
+//                 abort();
+                // let's just try again and see what happens...
+                repository->open(d->m_path);
+            }
         }
     }
 }
@@ -304,7 +309,7 @@ bool ItemRepositoryRegistryPrivate::open(const QString& path)
     for (auto it = m_repositories.constBegin(), end = m_repositories.constEnd(); it != end; ++it) {
         if (!it.key()->open(path)) {
             deleteDataDirectory(path);
-            qCritical() << "failed to open a repository";
+            qCritical() << "failed to open repository" << it.key()->repositoryName() << "at" << path;
             abort();
         }
     }
@@ -337,8 +342,10 @@ void ItemRepositoryRegistry::store()
         it.key()->store();
     }
 
-    QFile versionFile(d->m_path + QStringLiteral("/version_%1").arg(staticItemRepositoryVersion()));
+    QFile versionFile(d->m_path + QStringLiteral("/version_%1").arg(staticItemRepositoryVersion(), 0, 16));
     if (versionFile.open(QIODevice::WriteOnly)) {
+        QTextStream out(&versionFile);
+        out << QCoreApplication::applicationPid();
         versionFile.close();
     } else {
         qCWarning(SERIALIZATION) << "Could not open version file for writing";
