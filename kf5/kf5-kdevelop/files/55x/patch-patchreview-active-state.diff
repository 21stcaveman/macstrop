diff --git plugins/patchreview/patchreview.cpp plugins/patchreview/patchreview.cpp
index 6f180aae37ca64594a170802322577e25d7f30df..f81f011e205a2991b503ccf6b3c3b7dbad783496 100644
--- plugins/patchreview/patchreview.cpp
+++ plugins/patchreview/patchreview.cpp
@@ -385,6 +385,7 @@ void PatchReviewPlugin::closeReview()
                 ICore::self()->uiController()->switchToArea( QStringLiteral("code"), KDevelop::IUiController::ThisWindow );
         }
     }
+    m_active =false;
 }
 
 void PatchReviewPlugin::cancelReview() {
@@ -405,6 +406,7 @@ void PatchReviewPlugin::startReview( IPatchSource* patch, IPatchReview::ReviewMo
     Q_UNUSED( mode );
     emit startingNewReview();
     setPatch( patch );
+    m_active = true;
     QMetaObject::invokeMethod( this, "updateReview", Qt::QueuedConnection );
 }
 
@@ -522,7 +524,8 @@ void PatchReviewPlugin::setPatch( IPatchSource* patch ) {
 
 PatchReviewPlugin::PatchReviewPlugin( QObject *parent, const QVariantList & )
     : KDevelop::IPlugin( QStringLiteral("kdevpatchreview"), parent ),
-    m_patch( nullptr ), m_factory( new PatchReviewToolViewFactory( this ) )
+    m_patch( nullptr ), m_factory( new PatchReviewToolViewFactory( this ) ),
+    m_active( false)
 {
     qRegisterMetaType<const Diff2::DiffModel*>( "const Diff2::DiffModel*" );
 
@@ -554,7 +557,9 @@ PatchReviewPlugin::PatchReviewPlugin( QObject *parent, const QVariantList & )
 }
 
 void PatchReviewPlugin::documentClosed( IDocument* doc ) {
-    removeHighlighting( doc->url() );
+    if (m_active) {
+        removeHighlighting( doc->url() );
+    }
 }
 
 void PatchReviewPlugin::documentSaved( IDocument* doc ) {
@@ -564,13 +569,13 @@ void PatchReviewPlugin::documentSaved( IDocument* doc ) {
     // Also, don't automatically update local patch sources, because
     // they may correspond to static files which don't match any more
     // after an edit was done.
-    if (m_patch && doc->url() != m_patch->file() && !qobject_cast<LocalPatchSource*>(m_patch.data())) {
+    if(m_active && m_patch && doc->url() != m_patch->file() && !qobject_cast<LocalPatchSource*>(m_patch.data())) {
         forceUpdate();
     }
 }
 
 void PatchReviewPlugin::textDocumentCreated( IDocument* doc ) {
-    if (m_patch) {
+    if (m_active && m_patch) {
         addHighlighting( doc->url(), doc );
     }
 }
diff --git plugins/patchreview/patchreview.h plugins/patchreview/patchreview.h
index 0f7e43d54dd5e3fa856fc72952e99245803f1eb0..38d97abd3d7a9d7ee395e7dbace6e98603ea5cb8 100644
--- plugins/patchreview/patchreview.h
+++ plugins/patchreview/patchreview.h
@@ -134,6 +134,7 @@ private:
     uint m_depth = 0; // depth of the patch represented by m_modelList
     using HighlightMap = QMap<QUrl, QPointer<PatchHighlighter>>;
     HighlightMap m_highlighters;
+    bool m_active;
 
     friend class PatchReviewToolView; // to access slot exporterSelected();
 };
