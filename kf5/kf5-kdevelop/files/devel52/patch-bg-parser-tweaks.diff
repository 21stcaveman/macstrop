diff --git kdevplatform/language/backgroundparser/backgroundparser.cpp kdevplatform/language/backgroundparser/backgroundparser.cpp
index affd601..9ad2be6 100644
--- kdevplatform/language/backgroundparser/backgroundparser.cpp
+++ kdevplatform/language/backgroundparser/backgroundparser.cpp
@@ -30,6 +30,7 @@
 #include <QMutexLocker>
 #include <QPointer>
 #include <QTimer>
+#include <QElapsedTimer>
 #include <QThread>
 
 #include <KConfigGroup>
@@ -195,6 +196,7 @@ public:
         m_timer.setSingleShot(true);
         m_progressTimer.setSingleShot(true);
         m_progressTimer.setInterval(500);
+        m_totalTimer.invalidate();
 
         ThreadWeaver::setDebugLevel(true, 1);
 
@@ -425,7 +427,11 @@ config.readEntry(entry, oldConfig.readEntry(entry, default))
         if (qEnvironmentVariableIsSet("KDEV_BACKGROUNDPARSER_MAXTHREADS")) {
             m_parser->setThreadCount(qgetenv("KDEV_BACKGROUNDPARSER_MAXTHREADS").toInt());
         } else {
-            m_parser->setThreadCount(BACKWARDS_COMPATIBLE_ENTRY("Number of Threads", QThread::idealThreadCount()));
+            int defThreads = QThread::idealThreadCount();
+            if (defThreads >= 4) {
+                defThreads /= 2;
+            }
+            m_parser->setThreadCount(BACKWARDS_COMPATIBLE_ENTRY("Number of Threads", defThreads));
         }
 
         resume();
@@ -507,6 +513,7 @@ config.readEntry(entry, oldConfig.readEntry(entry, default))
     int m_progressMax = 0;
     int m_progressDone = 0;
     QTimer m_progressTimer;
+    QElapsedTimer m_totalTimer;
 };
 
 BackgroundParser::BackgroundParser(ILanguageController *languageController)
@@ -763,6 +770,9 @@ void BackgroundParser::updateProgressData()
         if (!d->m_progressTimer.isActive()) {
             d->m_progressTimer.start();
         }
+        if (!d->m_totalTimer.isValid()) {
+            d->m_totalTimer.start();
+        }
     }
 
     // Cancel progress updating and hide progress-bar when parsing is done.
@@ -771,6 +781,13 @@ void BackgroundParser::updateProgressData()
     {
         if (d->m_progressTimer.isActive()) {
             d->m_progressTimer.stop();
+            if (d->m_totalTimer.isValid()) {
+                qreal elapsed = d->m_totalTimer.elapsed() / 1000.0;
+                d->m_totalTimer.invalidate();
+                if (qEnvironmentVariableIsSet("KDEV_BACKGROUNDPARSER_TIMINGS")) {
+                    qCInfo(LANGUAGE) << "Finished" << d->m_maxParseJobs << "parse jobs in" << elapsed << "seconds";
+                }
+            }
         }
         emit d->m_parser->hideProgress(d->m_parser);
     }
