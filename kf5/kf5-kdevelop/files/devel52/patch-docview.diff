diff --git kdevplatform/documentation/documentationview.cpp kdevplatform/documentation/documentationview.cpp
index 2c6cccf8bd742e69022be8ee002ea49246c93f03..7476b4e1344dab046e08d8e4573d5d3d50f69fcd 100644
--- kdevplatform/documentation/documentationview.cpp
+++ kdevplatform/documentation/documentationview.cpp
@@ -39,11 +39,18 @@
 #include "documentationfindwidget.h"
 #include "debug.h"
 
+#include <sublime/idealdockwidget.h>
+
 using namespace KDevelop;
 
 DocumentationView::DocumentationView(QWidget* parent, ProvidersModel* model)
     : QWidget(parent), mProvidersModel(model)
 {
+    if (ICore::self()->shuttingDown()) {
+        qCWarning(DOCUMENTATION) << "DocumentationView created during shutdown; ignoring";
+        return;
+    }
+
     setWindowIcon(QIcon::fromTheme(QStringLiteral("documentation"), windowIcon()));
     setWindowTitle(i18n("Documentation"));
 
@@ -65,6 +72,11 @@ DocumentationView::DocumentationView(QWidget* parent, ProvidersModel* model)
     setFocusProxy(mIdentifiers);
 
     QMetaObject::invokeMethod(this, "initialize", Qt::QueuedConnection);
+    Sublime::IdealDockWidget* dockWidget = dynamic_cast<Sublime::IdealDockWidget*>(parent);
+    if (dockWidget) {
+        dockWidget->setFloating(false);
+        dockWidget->setFloatsAsStandalone(true);
+    }
 }
 
 QList<QAction*> DocumentationView::contextMenuActions() const
@@ -280,7 +292,9 @@ void DocumentationView::updateView()
     if (mCurrent != mHistory.end()) {
         w = (*mCurrent)->documentationWidget(mFindDoc, this);
         Q_ASSERT(w);
-        QWidget::setTabOrder(mIdentifiers, w);
+        if (mIdentifiers->window() == w->window()) {
+            QWidget::setTabOrder(mIdentifiers, w);
+        }
     } else {
         // placeholder widget at location of doc view
         w = new QWidget(this);
