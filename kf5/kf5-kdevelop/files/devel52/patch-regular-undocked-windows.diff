diff --git a/kdevplatform/sublime/idealdockwidget.cpp b/kdevplatform/sublime/idealdockwidget.cpp
index 4f63ec150791ed562f8a291bddfbb3e67a68ce60..00f8f0107f9d5cffadb703f8f9bd7ccab26e329e 100644
--- a/kdevplatform/sublime/idealdockwidget.cpp
+++ b/kdevplatform/sublime/idealdockwidget.cpp
@@ -37,14 +37,36 @@
 #include <QToolBar>
 #include <QVBoxLayout>
 
+#include "debug.h"
+#include <QCoreApplication>
+
 using namespace Sublime;
 
+static void unfloat(IdealDockWidget* that, bool floating)
+{
+    if (floating && that && that->isVisible()) {
+        qWarning() << "Unfloating dock widget" << that << that->widget();
+//         that->setTitleBarWidget(0);
+//         // remove unwanted flags
+//         Qt::WindowFlags flags = that->windowFlags() & ~(Qt::Tool|Qt::FramelessWindowHint|Qt::X11BypassWindowManagerHint);
+//         // set wanted flags
+//         that->setWindowFlags(flags | Qt::Window | Qt::WindowMinMaxButtonsHint);
+//         that->updateGeometry();
+//         that->setVisible(true);
+// //         auto w = that->widget();
+// //         w->setParent(nullptr);
+// //         w->setWindowFlags(Qt::Window);
+// //         w->show();
+    }
+}
+
 IdealDockWidget::IdealDockWidget(IdealController *controller, Sublime::MainWindow *parent)
     : QDockWidget(parent),
       m_area(nullptr),
       m_view(nullptr),
       m_docking_area(Qt::NoDockWidgetArea),
-      m_controller(controller)
+      m_controller(controller),
+      m_windowWidget(nullptr)
 {
     setAutoFillBackground(true);
     setContextMenuPolicy(Qt::CustomContextMenu);
@@ -61,6 +83,16 @@ IdealDockWidget::IdealDockWidget(IdealController *controller, Sublime::MainWindo
     setFeatures(QDockWidget::DockWidgetClosable | QDockWidget::DockWidgetMovable | QDockWidget::DockWidgetFloatable);
     // do not allow to move docks to the top dock area (no buttonbar there in our current UI)
     setAllowedAreas(Qt::LeftDockWidgetArea | Qt::RightDockWidgetArea | Qt::BottomDockWidgetArea);
+
+    connect(this, &QDockWidget::topLevelChanged, this, [this] (bool floating) {
+        unfloat(this, floating); } );
+    // somehow this connect never triggers??
+    connect(QCoreApplication::instance(), &QCoreApplication::aboutToQuit, this, [this] () {
+        /*if (isFloating())*/ {
+            qWarning() << "Re-docking" << this << "at exit";
+            setFloating(false);
+            emit closeRequested();
+        } } );
 }
 
 IdealDockWidget::~IdealDockWidget()
@@ -140,6 +172,23 @@ void IdealDockWidget::contextMenuRequested(const QPoint &point)
     setShortcut->setToolTip(i18n("Use this shortcut to trigger visibility of the toolview."));
 
     menu.addSeparator();
+
+    QAction *separateWindow = nullptr;
+    if (isFloating()) {
+        separateWindow = menu.addAction(i18n("Turn into separate window"));
+        connect(separateWindow, &QAction::triggered, this, [this]() {
+            if (auto w = widget()) {
+                // turn into top-level window
+                qCWarning(SUBLIME) << "reparenting" << this << "->" << w << "away from" << w->parent();
+                m_windowWidget = w;
+                w->setParent(nullptr);
+                w->setWindowFlags(Qt::Window);
+                w->show();
+                close();
+            } } );
+    }
+
+    menu.addSeparator();
     QAction* remove = menu.addAction(QIcon::fromTheme(QStringLiteral("dialog-close")), i18n("Remove Toolview"));
 
     QAction* triggered = menu.exec(senderWidget->mapToGlobal(point));
@@ -176,11 +225,20 @@ void IdealDockWidget::contextMenuRequested(const QPoint &point)
 
             return;
         } else if ( triggered == detach ) {
-            setFloating(true);
-            m_area->raiseToolView(m_view);
+            if (!m_windowWidget) {
+                setFloating(true);
+                m_area->raiseToolView(m_view);
+#ifdef Q_OS_MACOS
+                unfloat(this, true);
+#endif
+            }
             return;
         }
 
+        if (m_windowWidget && triggered != separateWindow) {
+            setWidget(m_windowWidget);
+        }
+
         if (isFloating()) {
             setFloating(false);
         }
@@ -197,9 +255,11 @@ void IdealDockWidget::contextMenuRequested(const QPoint &point)
 
         Area *area = m_area;
         View *view = m_view;
-        /* This call will delete *this, so we no longer
-           can access member variables. */
-        m_area->moveToolView(m_view, pos);
-        area->raiseToolView(view);
+        if (m_area) {
+            /* This call will delete *this, so we no longer
+               can access member variables. */
+            m_area->moveToolView(m_view, pos);
+            area->raiseToolView(view);
+        }
     }
 }
