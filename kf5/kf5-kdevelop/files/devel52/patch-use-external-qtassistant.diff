diff --git kdevplatform/interfaces/idocumentation.h kdevplatform/interfaces/idocumentation.h
index 3add12403520ca1d65ebca7bb4df3be93d9b4ead..c03b3a1279ebf998de94b0718ef70d8d965a9896 100644
--- kdevplatform/interfaces/idocumentation.h
+++ kdevplatform/interfaces/idocumentation.h
@@ -61,6 +61,13 @@ public:
 
     virtual IDocumentationProvider* provider() const = 0;
 
+    /** Documentation can override this method if it supports using an external browser.
+     * The method should trigger the external browser and return true in that case,
+     * or otherwise return false. When using an external browser the documentation
+     * toolview is not sollicited at all (i.e. it will not open nor be added to a toolbar).
+     */
+    virtual bool viewInExternalBrowser() { return false; }
+
 Q_SIGNALS:
     void descriptionChanged();
 };
diff --git kdevplatform/shell/documentationcontroller.cpp kdevplatform/shell/documentationcontroller.cpp
index 242e90911a200aa4b27aa7d82587ad83dfc17266..0ff82436e528f59edba0e9ae58407b3b67a76653 100644
--- kdevplatform/shell/documentationcontroller.cpp
+++ kdevplatform/shell/documentationcontroller.cpp
@@ -222,18 +222,20 @@ QList< IDocumentationProvider* > DocumentationController::documentationProviders
 
 void KDevelop::DocumentationController::showDocumentation(const IDocumentation::Ptr& doc)
 {
-    QWidget* w = ICore::self()->uiController()->findToolView(i18n("Documentation"), m_factory, KDevelop::IUiController::CreateAndRaise);
-    if(!w) {
-        qCWarning(SHELL) << "Could not add documentation toolview";
-        return;
-    }
+    if (!doc->viewInExternalBrowser()) {
+        QWidget* w = ICore::self()->uiController()->findToolView(i18n("Documentation"), m_factory, KDevelop::IUiController::CreateAndRaise);
+        if(!w) {
+            qCWarning(SHELL) << "Could not add documentation toolview";
+            return;
+        }
 
-    DocumentationView* view = dynamic_cast<DocumentationView*>(w);
-    if( !view ) {
-        qCWarning(SHELL) << "Could not cast toolview" << w << "to DocumentationView class!";
-        return;
+        DocumentationView* view = dynamic_cast<DocumentationView*>(w);
+        if( !view ) {
+            qCWarning(SHELL) << "Could not cast toolview" << w << "to DocumentationView class!";
+            return;
+        }
+        view->showDocumentation(doc);
     }
-    view->showDocumentation(doc);
 }
 
 void DocumentationController::changedDocumentationProviders()
diff --git plugins/qthelp/CMakeLists.txt plugins/qthelp/CMakeLists.txt
index 5a8e6e2d1d3677fd590983d2144c10004fffa184..615434b1527c700c5182784998ecf5f1480fb947 100644
--- plugins/qthelp/CMakeLists.txt
+++ plugins/qthelp/CMakeLists.txt
@@ -10,6 +10,7 @@ set(kdevqthelp_SRCS
     qthelpproviderabstract.cpp
     qthelpprovider.cpp
     qthelpdocumentation.cpp
+    qthelpexternalassistant.cpp
     qthelpqtdoc.cpp
     qthelp_config_shared.cpp
     qthelpconfig.cpp # Configuration module for QtHelp plugin
diff --git plugins/qthelp/qthelp_config_shared.cpp plugins/qthelp/qthelp_config_shared.cpp
index 16fa12105e24446255b81efe41fa4195ff02aafe..4e4af92a375e1e3eaef4e815ee9c4bfa777fac7c 100644
--- plugins/qthelp/qthelp_config_shared.cpp
+++ plugins/qthelp/qthelp_config_shared.cpp
@@ -25,7 +25,7 @@
 
 void qtHelpReadConfig(QStringList& iconList, QStringList& nameList,
                       QStringList& pathList, QStringList& ghnsList,
-                      QString& searchDir, bool& loadQtDoc)
+                      QString& searchDir, bool& loadQtDoc, bool& extViewer)
 {
     KConfigGroup cg(KSharedConfig::openConfig(), "QtHelp Documentation");
     iconList = cg.readEntry("iconList", QStringList());
@@ -34,11 +34,12 @@ void qtHelpReadConfig(QStringList& iconList, QStringList& nameList,
     ghnsList = cg.readEntry("ghnsList", QStringList());
     searchDir = cg.readEntry("searchDir", QString());
     loadQtDoc = cg.readEntry("loadQtDocs", true);
+    extViewer = cg.readEntry("useExternalViewer", false);
 }
 
 void qtHelpWriteConfig(const QStringList& iconList, const QStringList& nameList,
                        const QStringList& pathList, const QStringList& ghnsList,
-                       const QString& searchDir, const bool loadQtDoc)
+                       const QString& searchDir, const bool loadQtDoc, const bool extViewer)
 {
     KConfigGroup cg(KSharedConfig::openConfig(), "QtHelp Documentation");
     cg.writeEntry("iconList", iconList);
@@ -47,4 +48,5 @@ void qtHelpWriteConfig(const QStringList& iconList, const QStringList& nameList,
     cg.writeEntry("ghnsList", ghnsList);
     cg.writeEntry("searchDir", searchDir);
     cg.writeEntry("loadQtDocs", loadQtDoc);
+    cg.writeEntry("useExternalViewer", extViewer);
 }
diff --git plugins/qthelp/qthelp_config_shared.h plugins/qthelp/qthelp_config_shared.h
index dc3cd684ba92d77c2a014c344ea9f85d86c13b29..fbe11f25f847634a7cd134d33db8d50caefd3401 100644
--- plugins/qthelp/qthelp_config_shared.h
+++ plugins/qthelp/qthelp_config_shared.h
@@ -28,13 +28,17 @@ void qtHelpReadConfig(QStringList& iconList,
                       QStringList& pathList,
                       QStringList& ghnsList,
                       QString& searchDir,
-                      bool& loadQtDoc);
+                      bool& loadQtDoc,
+                      bool& extViewer
+                     );
 
 void qtHelpWriteConfig(const QStringList& iconList,
                        const QStringList& nameList,
                        const QStringList& pathList,
                        const QStringList& ghnsList,
                        const QString& searchDir,
-                       const bool loadQtDoc);
+                       const bool loadQtDoc,
+                       const bool extViewer
+                      );
 
 #endif // QTHELP_CONFIG_SHARED_H
diff --git plugins/qthelp/qthelpconfig.cpp plugins/qthelp/qthelpconfig.cpp
index 10bc17df5ce145f932fae1539943b75e62b41616..7bd5160a0eb41029dd7d2abee7730a2708e1b353 100644
--- plugins/qthelp/qthelpconfig.cpp
+++ plugins/qthelp/qthelpconfig.cpp
@@ -119,6 +119,10 @@ QtHelpConfig::QtHelpConfig(QtHelpPlugin* plugin, QWidget *parent)
     m_configWidget->qchSearchDir->setMode(KFile::Directory);
     connect(m_configWidget->qchSearchDir, &KUrlRequester::textChanged,
             this, &QtHelpConfig::changed);
+    connect(m_configWidget->externalViewerCheckBox, &QCheckBox::toggled,
+            this, static_cast<void(QtHelpConfig::*)()>(&QtHelpConfig::changed));
+    m_configWidget->externalViewerCheckBox->setToolTip(i18n("Use Qt's Assistant as an external viewer,\n"
+        "called through a script or symlink \"kdevelop-qthelp-viewer\""));
 
     // Set availability information for QtHelp
     m_configWidget->messageAvailabilityQtDocs->setCloseButtonVisible(false);
@@ -128,6 +132,7 @@ QtHelpConfig::QtHelpConfig(QtHelpPlugin* plugin, QWidget *parent)
         m_configWidget->messageAvailabilityQtDocs->setText(
             i18n("The command \"qmake -query\" could not provide a path to a QtHelp file (QCH)."));
         m_configWidget->loadQtDocsCheckBox->setVisible(false);
+        m_configWidget->externalViewerCheckBox->setVisible(false);
     }
     reset();
 }
@@ -154,8 +159,9 @@ void QtHelpConfig::apply()
     }
     QString searchDir = m_configWidget->qchSearchDir->text();
     bool loadQtDoc = m_configWidget->loadQtDocsCheckBox->isChecked();
+    bool extViewer = m_configWidget->externalViewerCheckBox->isChecked();
 
-    qtHelpWriteConfig(iconList, nameList, pathList, ghnsList, searchDir, loadQtDoc);
+    qtHelpWriteConfig(iconList, nameList, pathList, ghnsList, searchDir, loadQtDoc, extViewer);
     static_cast<QtHelpPlugin*>(plugin())->readConfig();
 }
 
@@ -165,8 +171,8 @@ void QtHelpConfig::reset()
 
     QStringList iconList, nameList, pathList, ghnsList;
     QString searchDir;
-    bool loadQtDoc;
-    qtHelpReadConfig(iconList, nameList, pathList, ghnsList, searchDir, loadQtDoc);
+    bool loadQtDoc, extViewer;
+    qtHelpReadConfig(iconList, nameList, pathList, ghnsList, searchDir, loadQtDoc, extViewer);
 
     const int size = qMin(qMin(iconList.size(), nameList.size()), pathList.size());
     for(int i = 0; i < size; ++i) {
@@ -175,6 +181,7 @@ void QtHelpConfig::reset()
     }
     m_configWidget->qchSearchDir->setText(searchDir);
     m_configWidget->loadQtDocsCheckBox->setChecked(loadQtDoc);
+    m_configWidget->externalViewerCheckBox->setChecked(extViewer);
 
     emit changed();
 }
diff --git plugins/qthelp/qthelpconfig.ui plugins/qthelp/qthelpconfig.ui
index bc04f8075468a618c08448d818c70734d67c3252..b7e67df6508947fa0b960364a4234c91357587ad 100644
--- plugins/qthelp/qthelpconfig.ui
+++ plugins/qthelp/qthelpconfig.ui
@@ -48,14 +48,14 @@
        </widget>
       </item>
       <item row="1" column="1">
-       <widget class="KUrlRequester" name="qchSearchDir" native="true"/>
+       <widget class="KUrlRequester" name="qchSearchDir"/>
       </item>
       <item row="2" column="0" colspan="2">
-       <widget class="KMessageWidget" name="messageAvailabilityQtDocs" native="true">
+       <widget class="KMessageWidget" name="messageAvailabilityQtDocs">
         <property name="enabled">
          <bool>true</bool>
         </property>
-        <property name="text" stdset="0">
+        <property name="text">
          <string/>
         </property>
        </widget>
@@ -165,6 +165,29 @@
     </widget>
    </item>
    <item>
+    <widget class="QGroupBox" name="boxAutoLoad2">
+     <layout class="QFormLayout" name="formLayout2">
+      <item row="0" column="0">
+       <widget class="QLabel" name="labelExternalViewer">
+        <property name="text">
+         <string>&amp;Use external viewer:</string>
+        </property>
+        <property name="buddy">
+         <cstring>externalViewerCheckBox</cstring>
+        </property>
+       </widget>
+      </item>
+      <item row="0" column="1">
+       <widget class="QCheckBox" name="externalViewerCheckBox">
+        <property name="text">
+         <string/>
+        </property>
+       </widget>
+      </item>
+     </layout>
+    </widget>
+   </item>
+   <item>
     <spacer name="verticalSpacer">
      <property name="orientation">
       <enum>Qt::Vertical</enum>
@@ -181,16 +204,16 @@
  </widget>
  <customwidgets>
   <customwidget>
-   <class>KMessageWidget</class>
-   <extends>QFrame</extends>
-   <header location="global">kmessagewidget.h</header>
-  </customwidget>
-  <customwidget>
    <class>KUrlRequester</class>
    <extends>QWidget</extends>
-   <header location="global">kurlrequester.h</header>
+   <header>kurlrequester.h</header>
    <container>1</container>
   </customwidget>
+  <customwidget>
+   <class>KMessageWidget</class>
+   <extends>QFrame</extends>
+   <header>kmessagewidget.h</header>
+  </customwidget>
  </customwidgets>
  <resources/>
  <connections/>
diff --git plugins/qthelp/qthelpdocumentation.cpp plugins/qthelp/qthelpdocumentation.cpp
index 19613339d01531b1f7716a9a8e0c2f212bdc856c..10a38194cc3c5aeea703c10cce444ea58ad3191b 100644
--- plugins/qthelp/qthelpdocumentation.cpp
+++ plugins/qthelp/qthelpdocumentation.cpp
@@ -37,6 +37,7 @@
 #include <documentation/standarddocumentationview.h>
 #include "qthelpnetwork.h"
 #include "qthelpproviderabstract.h"
+#include "qthelpexternalassistant.h"
 
 using namespace KDevelop;
 
@@ -300,6 +301,14 @@ IDocumentationProvider* QtHelpDocumentation::provider() const
     return m_provider;
 }
 
+bool QtHelpDocumentation::viewInExternalBrowser()
+{
+    if (QtHelpExternalAssistant::useExternalViewer()) {
+        return QtHelpExternalAssistant::openUrl(m_current.value());
+    }
+    return false;
+}
+
 QtHelpAlternativeLink::QtHelpAlternativeLink(const QString& name, const QtHelpDocumentation* doc, QObject* parent)
     : QAction(name, parent), mDoc(doc), mName(name)
 {
diff --git plugins/qthelp/qthelpdocumentation.h plugins/qthelp/qthelpdocumentation.h
index e649bf79b864b20fe3afa58fcc4db54ef36f338e..ee6a377486ca281dc7fc8c942061cb0bf3ff2640 100644
--- plugins/qthelp/qthelpdocumentation.h
+++ plugins/qthelp/qthelpdocumentation.h
@@ -54,6 +54,8 @@ class QtHelpDocumentation : public KDevelop::IDocumentation
 
         static QtHelpProviderAbstract* s_provider;
 
+        bool viewInExternalBrowser() override;
+
     public Q_SLOTS:
         void viewContextMenuRequested(const QPoint& pos);
 
diff --git plugins/qthelp/qthelpexternalassistant.cpp plugins/qthelp/qthelpexternalassistant.cpp
new file mode 100644
index 0000000000000000000000000000000000000000..c787615c6bf6876732afa16ca1e77df1086d1792
--- /dev/null
+++ plugins/qthelp/qthelpexternalassistant.cpp
@@ -0,0 +1,108 @@
+/*  This file is part of KDevelop
+    Copyright 2017 Ren� J.V. Bertin <rjvbertin@gmail.com>
+
+    This library is free software; you can redistribute it and/or
+    modify it under the terms of the GNU Library General Public
+    License as published by the Free Software Foundation; either
+    version 2 of the License, or (at your option) any later version.
+
+    This library is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+    Library General Public License for more details.
+
+    You should have received a copy of the GNU Library General Public License
+    along with this library; see the file COPYING.LIB.  If not, write to
+    the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
+    Boston, MA 02110-1301, USA.
+*/
+
+#include "qthelpexternalassistant.h"
+
+#include <QString>
+#include <QUrl>
+#include <QStandardPaths>
+#include <QProcess>
+#include <QApplication>
+
+#include "debug.h"
+
+using namespace KDevelop;
+
+QtHelpExternalAssistant* QtHelpExternalAssistant::s_instance = nullptr;
+QProcess* QtHelpExternalAssistant::s_externalViewerProcess = nullptr;
+bool QtHelpExternalAssistant::s_useExternalViewer = false;
+
+QtHelpExternalAssistant::QtHelpExternalAssistant(QObject *parent)
+    : QObject(parent)
+{
+}
+
+QtHelpExternalAssistant::~QtHelpExternalAssistant()
+{
+    if (s_externalViewerProcess) {
+#ifdef Q_OS_UNIX
+        qint64 pid = s_externalViewerProcess->processId();
+        if (pid > 0) {
+            QProcess* hup = new QProcess();
+            hup->startDetached(QString::fromLatin1("kill -1 %1").arg(pid));
+            hup->waitForFinished(500);
+            hup->deleteLater();
+        }
+#else
+        s_externalViewerProcess->terminate();
+#endif
+        // give the process a bit of time to react, just to prevent
+        // "QProcess destroyed while process still running" warnings.
+        s_externalViewerProcess->waitForFinished(50);
+        s_externalViewerProcess->deleteLater();
+    }
+}
+
+void QtHelpExternalAssistant::externalViewerExit(int exitCode, QProcess::ExitStatus exitStatus)
+{
+    if (this == s_instance) {
+        qCDebug(QTHELP) << "externalViewer" << this << "has exited with code"
+            << exitCode << "and status" << exitStatus;
+        deleteLater();
+        s_externalViewerProcess = nullptr;
+    }
+}
+
+void QtHelpExternalAssistant::setUseExternalViewer(bool extViewer)
+{
+    s_useExternalViewer = extViewer;
+}
+
+QtHelpExternalAssistant* QtHelpExternalAssistant::instance()
+{
+    if (s_useExternalViewer && !s_externalViewerProcess) {
+        s_instance = new QtHelpExternalAssistant(qApp);
+        s_externalViewerProcess = new QProcess();
+        connect(s_externalViewerProcess, static_cast<void(QProcess::*)(int, QProcess::ExitStatus)>(&QProcess::finished),
+                s_instance, &QtHelpExternalAssistant::externalViewerExit);
+        QStringList args = {"-enableRemoteControl"};
+        s_externalViewerProcess->start(QStandardPaths::findExecutable(QLatin1String("kdevelop-qthelp-viewer")),
+            args, QIODevice::WriteOnly|QIODevice::Append);
+        if (!s_externalViewerProcess->waitForStarted()) {
+            s_externalViewerProcess->deleteLater();
+            s_externalViewerProcess = nullptr;
+        }
+    }
+    return s_instance;
+}
+
+bool QtHelpExternalAssistant::openUrl(const QUrl& url)
+{
+    if (instance()) {
+        const QByteArray command = QByteArrayLiteral("setSource ")
+            + url.toString().toUtf8() + QByteArrayLiteral("\n");
+        if (s_externalViewerProcess->write(command) < 0
+            || s_externalViewerProcess->write("show contents\n") < 0) {
+            return false;
+        }
+        s_externalViewerProcess->write("syncContents\n");
+        return true;
+    }
+    return false;
+}
diff --git plugins/qthelp/qthelpexternalassistant.h plugins/qthelp/qthelpexternalassistant.h
new file mode 100644
index 0000000000000000000000000000000000000000..4f608d498856b1cf6459eee2944c538bd58768f2
--- /dev/null
+++ plugins/qthelp/qthelpexternalassistant.h
@@ -0,0 +1,56 @@
+/*  This file is part of KDevelop
+    Copyright 2017 René J.V. Bertin <rjvbertin@gmail.com>
+
+    This library is free software; you can redistribute it and/or
+    modify it under the terms of the GNU Library General Public
+    License as published by the Free Software Foundation; either
+    version 2 of the License, or (at your option) any later version.
+
+    This library is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+    Library General Public License for more details.
+
+    You should have received a copy of the GNU Library General Public License
+    along with this library; see the file COPYING.LIB.  If not, write to
+    the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
+    Boston, MA 02110-1301, USA.
+*/
+
+#ifndef QTHELPEXTERNALASSISTANT_H
+#define QTHELPEXTERNALASSISTANT_H
+
+#include <QObject>
+#include <QProcess>
+
+#include "debug.h"
+
+class QUrl;
+
+namespace KDevelop{
+
+class QtHelpExternalAssistant : public QObject
+{
+    Q_OBJECT
+public:
+    QtHelpExternalAssistant(QObject* parent);
+    ~QtHelpExternalAssistant();
+
+    static QtHelpExternalAssistant* instance();
+
+    static bool openUrl(const QUrl& url);
+    static void setUseExternalViewer(bool extViewer);
+    static bool useExternalViewer() { return s_useExternalViewer; }
+
+private Q_SLOTS:
+    void externalViewerExit(int exitCode, QProcess::ExitStatus exitStatus);
+
+private:
+    static QtHelpExternalAssistant* s_instance;
+    static QProcess* s_externalViewerProcess;
+    static bool s_useExternalViewer;
+};
+
+}
+
+#endif //QTHELPEXTERNALASSISTANT_H
diff --git plugins/qthelp/qthelpplugin.cpp plugins/qthelp/qthelpplugin.cpp
index 02103b6a23ff520c813fd9eaa2047652cbc10481..f4493ae0632e22618b5f5205970b31d488795afe 100644
--- plugins/qthelp/qthelpplugin.cpp
+++ plugins/qthelp/qthelpplugin.cpp
@@ -26,6 +26,7 @@
 #include <QDirIterator>
 #include "qthelpprovider.h"
 #include "qthelpqtdoc.h"
+#include "qthelpexternalassistant.h"
 #include "qthelp_config_shared.h"
 #include "debug.h"
 #include "qthelpconfig.h"
@@ -39,6 +40,7 @@ QtHelpPlugin::QtHelpPlugin(QObject* parent, const QVariantList& args)
     , m_qtHelpProviders()
     , m_qtDoc(new QtHelpQtDoc(this, QVariantList()))
     , m_loadSystemQtDoc(false)
+    , m_useExternalViewer(false)
 {
     Q_UNUSED(args);
     s_plugin = this;
@@ -55,11 +57,12 @@ void QtHelpPlugin::readConfig()
 {
     QStringList iconList, nameList, pathList, ghnsList;
     QString searchDir;
-    qtHelpReadConfig(iconList, nameList, pathList, ghnsList, searchDir, m_loadSystemQtDoc);
+    qtHelpReadConfig(iconList, nameList, pathList, ghnsList, searchDir, m_loadSystemQtDoc, m_useExternalViewer);
 
     searchHelpDirectory(pathList, nameList, iconList, searchDir);
     loadQtHelpProvider(pathList, nameList, iconList);
     loadQtDocumentation(m_loadSystemQtDoc);
+    KDevelop::QtHelpExternalAssistant::setUseExternalViewer(m_useExternalViewer);
 
     emit changedProvidersList();
 }
@@ -159,6 +162,11 @@ bool QtHelpPlugin::isQtHelpQtDocLoaded() const
     return m_loadSystemQtDoc;
 }
 
+bool QtHelpPlugin::useExternalViewer() const
+{
+    return m_useExternalViewer;
+}
+
 bool QtHelpPlugin::isQtHelpAvailable() const
 {
     return !m_qtDoc->qchFiles().isEmpty();
diff --git plugins/qthelp/qthelpplugin.h plugins/qthelp/qthelpplugin.h
index 9c76abd40629a60649cdbe5ecb7ff7705d6a49f6..e78ae58de911b8409278775c610baf3d15ac4a64 100644
--- plugins/qthelp/qthelpplugin.h
+++ plugins/qthelp/qthelpplugin.h
@@ -42,6 +42,7 @@ class QtHelpPlugin : public KDevelop::IPlugin, public KDevelop::IDocumentationPr
         QList<QtHelpProvider*> qtHelpProviderLoaded();
         bool isQtHelpQtDocLoaded() const;
         bool isQtHelpAvailable() const;
+        bool useExternalViewer() const;
 
         int configPages() const override;
         KDevelop::ConfigPage* configPage(int number, QWidget* parent) override;
@@ -59,6 +60,7 @@ class QtHelpPlugin : public KDevelop::IPlugin, public KDevelop::IDocumentationPr
         QList<QtHelpProvider*> m_qtHelpProviders;
         QtHelpQtDoc* m_qtDoc;
         bool m_loadSystemQtDoc;
+        bool m_useExternalViewer;
 };
 
 #endif // QTHELPPLUGIN_H
diff --git plugins/qthelp/tests/CMakeLists.txt plugins/qthelp/tests/CMakeLists.txt
index 06c751e8a2c254ba175e827fe9036fe635105d4c..18ec10580495c4b2c6a7954ed135f42c3bdea620 100644
--- plugins/qthelp/tests/CMakeLists.txt
+++ plugins/qthelp/tests/CMakeLists.txt
@@ -8,6 +8,7 @@ set(test_qthelpplugin_SRCS
     ../qthelpproviderabstract.cpp
     ../qthelpprovider.cpp
     ../qthelpdocumentation.cpp
+    ../qthelpexternalassistant.cpp
     ../qthelpqtdoc.cpp
     ../qthelp_config_shared.cpp
     ../qthelpconfig.cpp
diff --git plugins/qthelp/tests/test_qthelpplugin.cpp plugins/qthelp/tests/test_qthelpplugin.cpp
index bb47683da08cf1b6ac5d13dd5d5b1fe83b9eebee..4d4a1feba892c6d35f126437a4a14d0eee7a841d 100644
--- plugins/qthelp/tests/test_qthelpplugin.cpp
+++ plugins/qthelp/tests/test_qthelpplugin.cpp
@@ -58,7 +58,7 @@ void TestQtHelpPlugin::init()
 {
     m_plugin = new QtHelpPlugin(m_testCore, QVariantList());
     // write default config and read it
-    qtHelpWriteConfig(QStringList(), QStringList(), QStringList(), QStringList(), QString(), true);
+    qtHelpWriteConfig(QStringList(), QStringList(), QStringList(), QStringList(), QString(), true, false);
     m_plugin->readConfig();
 }
 
@@ -82,7 +82,7 @@ void TestQtHelpPlugin::testDefaultValue()
 
 void TestQtHelpPlugin::testUnsetQtHelpDoc()
 {
-    qtHelpWriteConfig(QStringList(), QStringList(), QStringList(), QStringList(), QString(), false);
+    qtHelpWriteConfig(QStringList(), QStringList(), QStringList(), QStringList(), QString(), false, false);
     m_plugin->readConfig();
 
     QCOMPARE(m_plugin->providers().size(), 0);
@@ -95,7 +95,7 @@ void TestQtHelpPlugin::testAddOneValidProvider()
     name << QStringLiteral("file1");
     icon << QStringLiteral("myIcon");
     ghns << QStringLiteral("0");
-    qtHelpWriteConfig(icon, name, path, ghns, QString(), true);
+    qtHelpWriteConfig(icon, name, path, ghns, QString(), true, false);
     m_plugin->readConfig();
 
     QCOMPARE(m_plugin->qtHelpProviderLoaded().size(), 1);
@@ -111,7 +111,7 @@ void TestQtHelpPlugin::testAddTwoDifferentValidProvider()
     name << QStringLiteral("file1") << QStringLiteral("file2");
     icon << QStringLiteral("myIcon") << QStringLiteral("myIcon");
     ghns << QStringLiteral("0") << QStringLiteral("0");
-    qtHelpWriteConfig(icon, name, path, ghns, QString(), true);
+    qtHelpWriteConfig(icon, name, path, ghns, QString(), true, false);
     m_plugin->readConfig();
 
     QCOMPARE(m_plugin->qtHelpProviderLoaded().size(), 2);
@@ -132,7 +132,7 @@ void TestQtHelpPlugin::testAddInvalidProvider()
     name << QStringLiteral("file1");
     icon << QStringLiteral("myIcon");
     ghns << QStringLiteral("0");
-    qtHelpWriteConfig(icon, name, path, ghns, QString(), true);
+    qtHelpWriteConfig(icon, name, path, ghns, QString(), true, false);
     m_plugin->readConfig();
 
     QCOMPARE(m_plugin->qtHelpProviderLoaded().size(), 0);
@@ -145,7 +145,7 @@ void TestQtHelpPlugin::testAddTwiceSameProvider()
     name << QStringLiteral("file1") << QStringLiteral("file2");
     icon << QStringLiteral("myIcon") << QStringLiteral("myIcon");
     ghns << QStringLiteral("0") << QStringLiteral("0");
-    qtHelpWriteConfig(icon, name, path, ghns, QString(), true);
+    qtHelpWriteConfig(icon, name, path, ghns, QString(), true, false);
     m_plugin->readConfig();
 
     QCOMPARE(m_plugin->qtHelpProviderLoaded().size(), 1);
@@ -158,7 +158,7 @@ void TestQtHelpPlugin::testRemoveOneProvider()
     name << QStringLiteral("file1") << QStringLiteral("file2");
     icon << QStringLiteral("myIcon") << QStringLiteral("myIcon");
     ghns << QStringLiteral("0") << QStringLiteral("0");
-    qtHelpWriteConfig(icon, name, path, ghns, QString(), true);
+    qtHelpWriteConfig(icon, name, path, ghns, QString(), true, false);
     m_plugin->readConfig();
 
     QCOMPARE(m_plugin->qtHelpProviderLoaded().size(), 2);
@@ -168,7 +168,7 @@ void TestQtHelpPlugin::testRemoveOneProvider()
     name.removeAt(1);
     icon.removeAt(1);
     ghns.removeAt(1);
-    qtHelpWriteConfig(icon, name, path, ghns, QString(), true);
+    qtHelpWriteConfig(icon, name, path, ghns, QString(), true, false);
     m_plugin->readConfig();
 
     QCOMPARE(m_plugin->qtHelpProviderLoaded().size(), 1);
