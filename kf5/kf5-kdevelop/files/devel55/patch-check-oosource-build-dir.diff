diff --git kdevplatform/project/helper.cpp kdevplatform/project/helper.cpp
index da56cb567dfc958f4da2cdd9f972cd8026c89efb..7be7c817d676860757923b162a6600bbcfee5b7f 100644
--- kdevplatform/project/helper.cpp
+++ kdevplatform/project/helper.cpp
@@ -25,6 +25,8 @@
 #include <QApplication>
 #include <QDir>
 #include <QFileInfo>
+#include <QStandardPaths>
+#include <QProcess>
 
 #include <KIO/CopyJob>
 #include <KIO/DeleteJob>
@@ -228,6 +230,29 @@ bool KDevelop::copyPath(const KDevelop::IProject* project, const KDevelop::Path&
 Path KDevelop::proposedBuildFolder(const Path& sourceFolder)
 {
     Path proposedBuildFolder;
+    const QString customDirScript = QStandardPaths::findExecutable(QStringLiteral("kdevelop-custom-build-dir"));
+    if (!customDirScript.isEmpty()) {
+        QProcess customDirHelper;
+        customDirHelper.start(customDirScript, QStringList() << sourceFolder.path());
+        if (customDirHelper.waitForFinished()) {
+            const QString customDir = QString::fromUtf8(customDirHelper.readAllStandardOutput().trimmed());
+            if (!customDir.isEmpty() && QDir(customDir).exists()) {
+                return Path(customDir);
+            } else {
+                qWarning() << "Ignoring inexistent" << customDir << "returned by"
+                    << customDirScript << "for source folder" << sourceFolder.path()
+                    << "helper error:" << customDirHelper.readAllStandardError();
+            }
+        } else {
+            qWarning() << "Custom build dir script" << customDirScript << "found but failed for source folder"
+                << sourceFolder.path() << "output=" << customDirHelper.readAll();
+        }
+    }
+    // check if the project is already configured for an out-of-source build:
+    const QString oosBuildPath = sourceFolder.parent().path() + QStringLiteral("/build");
+    if (QDir(oosBuildPath).exists()) {
+        return Path(oosBuildPath);
+    }
     if (sourceFolder.path().contains(QLatin1String("/src/"))) {
         const QString srcBuildPath = sourceFolder.path().replace(QLatin1String("/src/"), QLatin1String("/build/"));
         Q_ASSERT(!srcBuildPath.isEmpty());
