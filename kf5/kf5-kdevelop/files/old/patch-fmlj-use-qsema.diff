diff --git kdevplatform/project/filemanagerlistjob.cpp kdevplatform/project/filemanagerlistjob.cpp
index 82aec18d95..1fde5cb0f4 100644
--- kdevplatform/project/filemanagerlistjob.cpp
+++ kdevplatform/project/filemanagerlistjob.cpp
@@ -50,11 +51,29 @@ bool isChildItem(ProjectBaseItem* parent, ProjectBaseItem* child)
 }
 }
 
+class SemaReleaser
+{
+public:
+    SemaReleaser(QSemaphore* sem)
+        : m_sem(sem)
+    {
+    }
+
+    ~SemaReleaser()
+    {
+        m_sem->release();
+    }
+
+private:
+    QSemaphore* m_sem;
+};
+
 FileManagerListJob::FileManagerListJob(ProjectFolderItem* item, bool recursive)
     : KIO::Job(), m_item(item), m_project(item->project())
     // cache *a copy* of the item info, without parent info so we own it completely
     , m_basePath(item->path())
     , m_aborted(false)
+    , m_listing(1)
     , m_emitWatchDir(!qEnvironmentVariableIsSet("KDEV_PROJECT_INTREE_DIRWATCHING_MODE"))
     , m_recursive(true) // sic!
     , m_started(false)
@@ -80,8 +99,10 @@ FileManagerListJob::FileManagerListJob(ProjectFolderItem* item, bool recursive)
 
 FileManagerListJob::~FileManagerListJob()
 {
-    std::lock_guard<std::recursive_mutex> lock(m_listing);
     m_aborted = true;
+    // lock and abort to ensure our background list job is stopped
+    m_listing.acquire();
+    Q_ASSERT(m_listing.available() == 0);
     ICore::self()->runController()->unregisterJob(this);
     m_item = nullptr;
     m_project = nullptr;
@@ -167,9 +188,9 @@ void FileManagerListJob::startNextJob()
     if (m_item->path().isLocalFile()) {
         // optimized version for local projects using QDir directly
         // start locking to ensure we don't get destroyed while waiting for the list to finish
-        m_listing.lock();
+        m_listing.acquire();
         QtConcurrent::run([this] (const Path& path) {
-            std::lock_guard<std::recursive_mutex> lock(m_listing, std::adopt_lock);
+            SemaReleaser lock(&m_listing);
             if (m_aborted) {
                 return;
             }
diff --git kdevplatform/project/filemanagerlistjob.h kdevplatform/project/filemanagerlistjob.h
index e4d9a98509..5e1ad36967 100644
--- kdevplatform/project/filemanagerlistjob.h
+++ kdevplatform/project/filemanagerlistjob.h
@@ -22,8 +22,7 @@
 
 #include <KIO/Job>
 #include <QQueue>
-
-#include <mutex>
+#include <QSemaphore>
 
 // uncomment to time import jobs
 // #define TIME_IMPORT_JOB
@@ -108,7 +107,7 @@ private:
     KIO::UDSEntryList entryList;
     // kill does not delete the job instantaneously
     QAtomicInt m_aborted;
-    std::recursive_mutex m_listing;
+    QSemaphore m_listing;
 
 #ifdef TIME_IMPORT_JOB
     QElapsedTimer m_timer;
