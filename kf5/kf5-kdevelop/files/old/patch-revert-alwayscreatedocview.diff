From 781bb47c95fabd7e28eb2c6966deb8daeb557fb5 Mon Sep 17 00:00:00 2001
From: "Friedrich W. H. Kossebau" <kossebau@kde.org>
Date: Wed, 4 Oct 2017 15:44:41 +0200
Subject: [PATCH] Always create Documentation tool view, fix it to work with no
 providers

Summary:
Creating the Documentation tool view at DocumentationController
initialization time only if the list returned by documentationProviders() is
non-empty has flaws.
This patch always creates the toolview instead of magically creating/removing it
automatically based on documentation provider availability and leaves it to
the user to add or remove it as they prefer.

It also prepares the Documentation tool view to properly handle the case of
no documentation providers available (done in a way to keep the current public
API).

BUG: 383875
FIXED-IN: 5.2.0

Reviewers: #kdevelop, apol

Reviewed By: #kdevelop, apol

Subscribers: kdevelop-devel

Differential Revision: https://phabricator.kde.org/D8140
###
 kdevplatform/documentation/documentationview.cpp | 39 ++++++++++++++++++------
 kdevplatform/shell/documentationcontroller.cpp   |  2 +-
 2 files changed, 31 insertions(+), 10 deletions(-)
###

# diff --git kdevplatform/documentation/documentationview.cpp kdevplatform/documentation/documentationview.cpp
# index 8b21b11861..2c6cccf8bd 100644
# --- kdevplatform/documentation/documentationview.cpp
# +++ kdevplatform/documentation/documentationview.cpp
# @@ -87,6 +87,7 @@ void DocumentationView::setupActions()
#      addAction(mForward);
#  
#      mHomeAction = new QAction(QIcon::fromTheme(QStringLiteral("go-home")), i18n("Home"), this);
# +    mHomeAction->setEnabled(false);
#      connect(mHomeAction, &QAction::triggered, this, &DocumentationView::showHome);
#      addAction(mHomeAction);
#  
# @@ -96,6 +97,7 @@ void DocumentationView::setupActions()
#      addAction(providersAction);
#  
#      mIdentifiers = new QLineEdit(this);
# +    mIdentifiers->setEnabled(false);
#      mIdentifiers->setClearButtonEnabled(true);
#      mIdentifiers->setPlaceholderText(i18n("Search..."));
#      mIdentifiers->setCompleter(new QCompleter(mIdentifiers));
# @@ -117,6 +119,7 @@ void DocumentationView::setupActions()
#  
#      mFind = new QAction(QIcon::fromTheme(QStringLiteral("edit-find")), i18n("Find in Text..."), this);
#      mFind->setToolTip(i18n("Find in text of current documentation page."));
# +    mFind->setEnabled(false);
#      connect(mFind, &QAction::triggered, mFindDoc, &DocumentationFindWidget::startSearch);
#      addAction(mFind);
#  
# @@ -136,7 +139,10 @@ void DocumentationView::initialize()
#      }
#      connect(mProvidersModel, &ProvidersModel::providersChanged, this, &DocumentationView::emptyHistory);
#  
# -    if (mProvidersModel->rowCount() > 0) {
# +    const bool hasProviders = (mProviders->count() > 0);
# +    mHomeAction->setEnabled(hasProviders);
# +    mIdentifiers->setEnabled(hasProviders);
# +    if (hasProviders) {
#          changedProvider(0);
#      }
#  }
# @@ -238,18 +244,27 @@ void DocumentationView::emptyHistory()
#      mCurrent = mHistory.end();
#      mBack->setEnabled(false);
#      mForward->setEnabled(false);
# -    if (mProviders->count() > 0) {
# +    const bool hasProviders = (mProviders->count() > 0);
# +    mHomeAction->setEnabled(hasProviders);
# +    mIdentifiers->setEnabled(hasProviders);
# +    if (hasProviders) {
#          mProviders->setCurrentIndex(0);
#          changedProvider(0);
# +    } else {
# +        updateView();
#      }
#  }
#  
#  void DocumentationView::updateView()
#  {
# -    mProviders->setCurrentIndex(mProvidersModel->rowForProvider((*mCurrent)->provider()));
# -    mIdentifiers->completer()->setModel((*mCurrent)->provider()->indexModel());
# -    mIdentifiers->setText((*mCurrent)->name());
# -    mIdentifiers->completer()->setCompletionPrefix((*mCurrent)->name());
# +    if (mCurrent != mHistory.end()) {
# +        mProviders->setCurrentIndex(mProvidersModel->rowForProvider((*mCurrent)->provider()));
# +        mIdentifiers->completer()->setModel((*mCurrent)->provider()->indexModel());
# +        mIdentifiers->setText((*mCurrent)->name());
# +        mIdentifiers->completer()->setCompletionPrefix((*mCurrent)->name());
# +    } else {
# +        mIdentifiers->clear();
# +    }
#  
#      QLayoutItem* lastview = layout()->takeAt(0);
#      Q_ASSERT(lastview);
# @@ -261,9 +276,15 @@ void DocumentationView::updateView()
#      delete lastview;
#  
#      mFindDoc->setEnabled(false);
# -    QWidget* w = (*mCurrent)->documentationWidget(mFindDoc, this);
# -    Q_ASSERT(w);
# -    QWidget::setTabOrder(mIdentifiers, w);
# +    QWidget* w;
# +    if (mCurrent != mHistory.end()) {
# +        w = (*mCurrent)->documentationWidget(mFindDoc, this);
# +        Q_ASSERT(w);
# +        QWidget::setTabOrder(mIdentifiers, w);
# +    } else {
# +        // placeholder widget at location of doc view
# +        w = new QWidget(this);
# +    }
#  
#      mFind->setEnabled(mFindDoc->isEnabled());
#      if (!mFindDoc->isEnabled()) {
diff --git kdevplatform/shell/documentationcontroller.cpp kdevplatform/shell/documentationcontroller.cpp
index 7b0a0c156d..bde3c96ff4 100644
--- kdevplatform/shell/documentationcontroller.cpp
+++ kdevplatform/shell/documentationcontroller.cpp
@@ -128,7 +128,7 @@ DocumentationController::~DocumentationController()
 
 void DocumentationController::initialize()
 {
-    if(!documentationProviders().isEmpty() && !(Core::self()->setupFlags() & Core::NoUi)) {
+    if (!(Core::self()->setupFlags() & Core::NoUi)) {
         Core::self()->uiController()->addToolView(i18n("Documentation"), m_factory);
     }
 }
-- 
2.13.1

