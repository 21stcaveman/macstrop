diff --git a/CMakeLists.txt b/CMakeLists.txt
index 6b5016f9fef6298210079a5b060751dc9d371663..b346aa7cb52c1f4f93bf323ac0a1c1a2cfe91d4e 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -72,6 +72,14 @@ set ( CMAKE_MODULE_PATH
 include(GenerateExportHeader)
 include( MarbleMacros )
 
+# Generate a standalone app bundle when building on Apple's Mac OS
+# unset this to do a build that uses and provides shared libraries and other
+# resources in a more unix-traditional layout (e.g. for MacPorts, Fink, HomeBrew etc.)
+if(APPLE)
+    option(APPLE_STANDALONE_BUNDLE "Generate a standalone app bundle when building on Apple Mac" ON)
+    add_feature_info("App Bundle" APPLE_STANDALONE_BUNDLE "Generate a standalone app bundle when building on Apple Mac.")
+endif(APPLE)
+
 ####################################################
 # Generate the tiles with the tilecreator at compile time
 # if this option is set, srtm.jpg will not be installed but the generated tiles instead
@@ -80,7 +88,7 @@ option(MOBILE "Create a Marble version optimized for handheld devices")
 ####################################################
 # Build a D-Bus interface for the Marble widget
 # This is disabled by default for all win32, apple and Android
-if(WIN32 OR APPLE OR CMAKE_SYSTEM_NAME STREQUAL Android)
+if(WIN32 OR APPLE_STANDALONE_BUNDLE OR CMAKE_SYSTEM_NAME STREQUAL Android)
     option(BUILD_WITH_DBUS "Build the D-Bus interface for the Marble widget" OFF)
 else()
     option(BUILD_WITH_DBUS "Build the D-Bus interface for the Marble widget" ON)
@@ -192,16 +200,23 @@ elseif(APPLE)
     FIND_LIBRARY(APP_SERVICES_LIBRARY ApplicationServices )
     MARK_AS_ADVANCED (APP_SERVICES_LIBRARY)
     SET(MAC_EXTRA_LIBS ${APP_SERVICES_LIBRARY})
-      # for Mac OS X, everything is put inside an application bundle
-      SET (CMAKE_INSTALL_PREFIX ${CMAKE_INSTALL_PREFIX}/)
-      # path for library references
-      SET (CMAKE_INSTALL_NAME_DIR @executable_path/lib)
-      # install the Info.plist file
-      install(FILES src/mac/Info.plist DESTINATION ${CMAKE_INSTALL_PREFIX}/Marble.app/Contents)
-      #SET (lib_dir ${CMAKE_INSTALL_PREFIX}/Marble.app/Contents/MacOS/lib)
-      SET (data_dir   ${CMAKE_INSTALL_PREFIX}/Marble.app/Contents/MacOS/resources/data)
-      set(locale_dir "${data_dir}/locale")
-      SET (plugin_dir   ${CMAKE_INSTALL_PREFIX}/Marble.app/Contents/MacOS/resources/plugins)
+    if(APPLE_STANDALONE_BUNDLE)
+        # for Mac OS X, everything is put inside an application bundle
+        SET (CMAKE_INSTALL_PREFIX ${CMAKE_INSTALL_PREFIX}/)
+        # path for library references
+        SET (CMAKE_INSTALL_NAME_DIR @executable_path/lib)
+        # install the Info.plist file
+        install(FILES src/mac/Info.plist DESTINATION ${CMAKE_INSTALL_PREFIX}/Marble.app/Contents)
+        #SET (lib_dir ${CMAKE_INSTALL_PREFIX}/Marble.app/Contents/MacOS/lib)
+        SET (data_dir   ${CMAKE_INSTALL_PREFIX}/Marble.app/Contents/MacOS/resources/data)
+        set(locale_dir "${data_dir}/locale")
+        SET (plugin_dir   ${CMAKE_INSTALL_PREFIX}/Marble.app/Contents/MacOS/resources/plugins)
+    else(APPLE_STANDALONE_BUNDLE)
+        set(data_dir ${CMAKE_INSTALL_FULL_DATAROOTDIR}/marble/data)
+        set(locale_dir "${CMAKE_INSTALL_FULL_DATAROOTDIR}/locale")
+        set(plugin_dir ${CMAKE_INSTALL_FULL_LIBDIR}/marble/plugins)
+        set(CMAKE_MODULES_INSTALL_PATH ${CMAKE_INSTALL_FULL_DATAROOTDIR}/marble/cmake)
+    endif(APPLE_STANDALONE_BUNDLE)
 elseif(CMAKE_SYSTEM_NAME STREQUAL Android)
       set(plugin_dir "${CMAKE_INSTALL_PREFIX}/assets/plugins")
       set(data_dir "${CMAKE_INSTALL_PREFIX}/assets/data")
diff --git a/data/CMakeLists.txt b/data/CMakeLists.txt
index 6f88faa4b364e5731d0f927fe8e382402c240f8f..dc204911bb859ac0ace58f320fb82aa18d1d0f61 100644
--- a/data/CMakeLists.txt
+++ b/data/CMakeLists.txt
@@ -270,14 +270,14 @@ else(MOBILE)
     install (FILES placemarks/cityplacemarks.cache DESTINATION ${MARBLE_DATA_INSTALL_PATH}/placemarks)
 endif(MOBILE)
 
-if(NOT APPLE AND NOT WIN32)
+if(NOT APPLE_STANDALONE_BUNDLE AND NOT WIN32)
   install (FILES icons/128-apps-marble.png DESTINATION ${ICON_INSTALL_DIR}/hicolor/128x128/apps/ RENAME marble.png)
   install (FILES icons/64-apps-marble.png DESTINATION ${ICON_INSTALL_DIR}/hicolor/64x64/apps/ RENAME marble.png)
   install (FILES icons/48-apps-marble.png DESTINATION ${ICON_INSTALL_DIR}/hicolor/48x48/apps/ RENAME marble.png)
   install (FILES icons/32-apps-marble.png DESTINATION ${ICON_INSTALL_DIR}/hicolor/32x32/apps/ RENAME marble.png)
   install (FILES icons/22-apps-marble.png DESTINATION ${ICON_INSTALL_DIR}/hicolor/22x22/apps/ RENAME marble.png)
   install (FILES icons/16-apps-marble.png DESTINATION ${ICON_INSTALL_DIR}/hicolor/16x16/apps/ RENAME marble.png)
-endif(NOT APPLE AND NOT WIN32 )
+endif(NOT APPLE_STANDALONE_BUNDLE AND NOT WIN32 )
 
 FILE (GLOB AUDIO_FILES audio/*.ogg)
 install (FILES
diff --git a/examples/cpp/marble-game/GameMainWindow.cpp b/examples/cpp/marble-game/GameMainWindow.cpp
index fa5e5fb78eee591e2703398243826b997c74b857..29cd6a45b6cd4a2378a1706c690e66cc782332ba 100644
--- a/examples/cpp/marble-game/GameMainWindow.cpp
+++ b/examples/cpp/marble-game/GameMainWindow.cpp
@@ -11,6 +11,7 @@
 
 
 // Self
+#include "config-marble.h"
 #include "GameMainWindow.h"
 #include "CountryByShape.h"
 #include "CountryByFlag.h"
@@ -82,6 +83,9 @@ Private::Private(QWidget* parent) :
 
 QString Private::readMarbleDataPath() const
 {
+#ifdef APPLE_STANDARD_UNIX_BUILD
+    QSettings::setDefaultFormat(QSettings::IniFormat);
+#endif
     return QSettings().value(QStringLiteral("MarbleWidget/marbleDataPath"), QString()).toString();
 }
 
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index af0a716a3f5009ed9e36ae6bf4343f5ed2ca59ef..48583e0ecfd43ef99f7e0a32fb8c2d039c892e6a 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -67,14 +67,17 @@ endif()
 
 add_subdirectory( bindings )
 
+if(APPLE AND NOT APPLE_STANDALONE_BUNDLE)
+    set(APPLE_STANDARD_UNIX_BUILD ON)
+endif()
 configure_file(
   ${CMAKE_CURRENT_SOURCE_DIR}/config-marble.h.cmake
   ${CMAKE_CURRENT_BINARY_DIR}/config-marble.h
 )
 
-if(APPLE)
+if(APPLE AND APPLE_STANDALONE_BUNDLE)
   add_subdirectory( mac )
-endif(APPLE)
+endif(APPLE AND APPLE_STANDALONE_BUNDLE)
 
 add_subdirectory( plasma )
 add_subdirectory( plasmarunner )
diff --git a/src/apps/marble-kde/CMakeLists.txt b/src/apps/marble-kde/CMakeLists.txt
index 4c86cdc2dbc0095c74eaa3ffb0c8695b6b706a7a..089e62d7a9013cd44081786a52773da4ca1aa0d0 100644
--- a/src/apps/marble-kde/CMakeLists.txt
+++ b/src/apps/marble-kde/CMakeLists.txt
@@ -10,6 +10,7 @@ include(KDEInstallDirs)
 set(LIB_INSTALL_DIR ${KDE_INSTALL_LIBDIR})
 include(KDECMakeSettings)
 include(ECMInstallIcons)
+include(ECMAddAppIcon)
 
 macro_optional_find_package(KF5 ${REQUIRED_KF5_VERSION} QUIET COMPONENTS Crash NewStuff Parts CoreAddons I18n)
 
@@ -53,6 +54,9 @@ ecm_install_icons(ICONS
     "${CMAKE_SOURCE_DIR}/data/icons/48-apps-marble.png"
     "${CMAKE_SOURCE_DIR}/data/icons/64-apps-marble.png"
     DESTINATION ${KDE_INSTALL_ICONDIR})
+file(GLOB ICONS_SRCS
+  "${CMAKE_CURRENT_SOURCE_DIR}/../../../data/icons/*-apps-marble.png")
+ecm_add_app_icon(marble_kde_SRCS ICONS ${ICONS_SRCS})
 add_executable (marble ${marble_kde_SRCS})
 
 target_link_libraries (
diff --git a/src/apps/marble-maps/main.cpp b/src/apps/marble-maps/main.cpp
index 03bdd7a963948c2d19849eeead7d136793a5ca4c..7ffeca89e9b834120b312c160316bb43f2b693ea 100644
--- a/src/apps/marble-maps/main.cpp
+++ b/src/apps/marble-maps/main.cpp
@@ -12,6 +12,7 @@
 #include <QQmlApplicationEngine>
 #include <QtQuick>
 
+#include "config-marble.h"
 #include "declarative/MarbleDeclarativePlugin.h"
 #include <MarbleGlobal.h>
 #include "MarbleMaps.h"
@@ -102,6 +103,9 @@ int main(int argc, char ** argv)
 #if QT_VERSION >= 0x050700
     app.setDesktopFileName(QStringLiteral("org.kde.marble.maps"));
 #endif
+#ifdef APPLE_STANDARD_UNIX_BUILD
+    QSettings::setDefaultFormat(QSettings::IniFormat);
+#endif
 
     // Load Qt translation system catalog for libmarblewidget, the plugins and this app
     loadTranslations(app);
diff --git a/src/apps/marble-qt/CMakeLists.txt b/src/apps/marble-qt/CMakeLists.txt
index d28e3aa5efc1f328e0306e80615299f6ca62d566..2e6568bf630104e14f46cd91bf4454972f4d26cf 100644
--- a/src/apps/marble-qt/CMakeLists.txt
+++ b/src/apps/marble-qt/CMakeLists.txt
@@ -14,13 +14,13 @@ if (WIN32)
 	  set_target_properties(marble-qt PROPERTIES LINK_FLAGS "/ENTRY:\"mainCRTStartup\"")
     endif()
 else (WIN32)
-    if (APPLE)
+    if (APPLE AND APPLE_STANDALONE_BUNDLE)
         add_executable (marble-qt ${marble_SRCS})
         # For Mac OS X, the executable must be at the root of the bundle's executable folder
         INSTALL(TARGETS marble-qt RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX}/Marble.app/Contents/MacOS)
-    else (APPLE)
+    else (APPLE AND APPLE_STANDALONE_BUNDLE)
         add_executable (marble-qt ${marble_SRCS})
-    endif (APPLE)
+    endif (APPLE AND APPLE_STANDALONE_BUNDLE)
 endif (WIN32)
 
 target_link_libraries (
@@ -50,11 +50,11 @@ endif(STATIC_BUILD)
 if(WIN32)
 install (TARGETS marble-qt RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX})
 else(WIN32)
-if (APPLE)
+if (APPLE AND APPLE_STANDALONE_BUNDLE)
   # No need for this when installing to a bundle
-else (APPLE)
+else (APPLE AND APPLE_STANDALONE_BUNDLE)
     install (TARGETS marble-qt RUNTIME DESTINATION bin )
-endif (APPLE)
+endif (APPLE AND APPLE_STANDALONE_BUNDLE)
 endif(WIN32)
 if(APPS_INSTALL_DIR)
   install(PROGRAMS org.kde.marble-qt.desktop DESTINATION ${APPS_INSTALL_DIR})
diff --git a/src/apps/marble-qt/qtmain.cpp b/src/apps/marble-qt/qtmain.cpp
index 72c3ab597a0d2c211a1062d9fb4ad354ddeb1798..28e131cc0a30c3254884c7f3a364c8603476909a 100644
--- a/src/apps/marble-qt/qtmain.cpp
+++ b/src/apps/marble-qt/qtmain.cpp
@@ -16,6 +16,8 @@
 #include <QTranslator>
 #include <QStandardPaths>
 
+#include "config-marble.h"
+
 #include "QtMainWindow.h"
 
 #include "MapThemeManager.h"
@@ -32,7 +34,8 @@
  Q_IMPORT_PLUGIN(qsvg)
 #endif
 
-#ifdef Q_OS_MACX
+#ifdef Q_OS_MACOS
+#include <QSettings>
 //for getting app bundle path
 #include <ApplicationServices/ApplicationServices.h>
 #endif
@@ -92,6 +95,9 @@ int main(int argc, char *argv[])
 #if QT_VERSION >= 0x050700
     app.setDesktopFileName(QStringLiteral("org.kde.marble-qt"));
 #endif
+#ifdef APPLE_STANDARD_UNIX_BUILD
+    QSettings::setDefaultFormat(QSettings::IniFormat);
+#endif
 
     // Load Qt translation system catalog for libmarblewidget, the plugins and this app
     loadTranslations(app);
@@ -107,7 +113,7 @@ int main(int argc, char *argv[])
     QApplication::addLibraryPath( QApplication::applicationDirPath() 
         + QDir::separator() + QLatin1String("plugins"));
 #endif
-#ifdef Q_OS_MACX
+#ifdef Q_OS_MACOS
     QApplication::instance()->setAttribute(Qt::AA_DontShowIconsInMenus);
     qDebug("Adding qt image plugins to plugin search path...");
     CFURLRef myBundleRef = CFBundleCopyBundleURL(CFBundleGetMainBundle());
@@ -122,7 +128,7 @@ int main(int argc, char *argv[])
     // lets try to set the qt plugin search path...
     if (myPath.contains(".app"))
     {
-      myPath += QLatin1String("/Contents/plugins");
+      myPath += QLatin1String("/Contents/Resources/plugins");
       QApplication::addLibraryPath( myPath );
       qDebug( "Added %s to plugin search path", qPrintable( myPath ) );
     }
diff --git a/src/config-marble.h.cmake b/src/config-marble.h.cmake
index d2dfc71f0431c57dea7a3d69461f395b329fe34e..cb314bc103739088ca267ce87153d6727a197c53 100644
--- a/src/config-marble.h.cmake
+++ b/src/config-marble.h.cmake
@@ -2,3 +2,6 @@
 #define MARBLE_PLUGIN_PATH "${MARBLE_PLUGIN_PATH}"
 #define MARBLE_DATA_PATH "${MARBLE_DATA_PATH}"
 #define MARBLE_SHARED_LIBRARY_PREFIX "${CMAKE_SHARED_LIBRARY_PREFIX}"
+
+#cmakedefine APPLE_STANDALONE_BUNDLE
+#cmakedefine APPLE_STANDARD_UNIX_BUILD
diff --git a/src/lib/astro/CMakeLists.txt b/src/lib/astro/CMakeLists.txt
index 5e1afd60f13a371bdad4905ee758355e1190e284..187cc0f4db93abfdb13875fcdf755c1a95ce4181 100644
--- a/src/lib/astro/CMakeLists.txt
+++ b/src/lib/astro/CMakeLists.txt
@@ -51,7 +51,7 @@ target_include_directories(astro
 # choose the correct target install library path
 if(WIN32)
   INSTALL(TARGETS astro EXPORT AstroTargets RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX} ARCHIVE DESTINATION lib)
-elseif(APPLE)
+elseif(APPLE AND APPLE_STANDALONE_BUNDLE)
   INSTALL(TARGETS astro LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/Marble.app/Contents/MacOS/lib)
 else()
   install(TARGETS astro
@@ -62,7 +62,7 @@ endif()
 
 ########### install headers & cmake config files ###############
 
-if (APPLE)
+if (APPLE AND APPLE_STANDALONE_BUNDLE)
     # TODO: find how to install & deploy library, headers and config files as bundle for development
     return()
 endif()
diff --git a/src/lib/marble/AbstractFloatItem.cpp b/src/lib/marble/AbstractFloatItem.cpp
index afcb072c6c871490daa35fcb58ef64b5783c6cd1..18dde24dbc1c71abeb28d4fd2a9db27517b6f78d 100644
--- a/src/lib/marble/AbstractFloatItem.cpp
+++ b/src/lib/marble/AbstractFloatItem.cpp
@@ -47,7 +47,7 @@ class AbstractFloatItemPrivate
 };
 
 QPen         AbstractFloatItemPrivate::s_pen = QPen( Qt::black );
-#ifdef Q_OS_MACX
+#ifdef Q_OS_MACOS
     QFont AbstractFloatItemPrivate::s_font = QFont( QStringLiteral("Sans Serif"), 10 );
 #else
     QFont AbstractFloatItemPrivate::s_font = QFont( QStringLiteral("Sans Serif"), 8 );
diff --git a/src/lib/marble/CMakeLists.txt b/src/lib/marble/CMakeLists.txt
index 155c0fc51794ec490acc31ef6f20a7613773b9c8..753aae3ba240471c70e171aed102b26cba7e1700 100644
--- a/src/lib/marble/CMakeLists.txt
+++ b/src/lib/marble/CMakeLists.txt
@@ -447,7 +447,7 @@ target_include_directories(marblewidget
 # choose the correct target install library path
 if(WIN32)
   install(TARGETS marblewidget EXPORT MarbleTargets RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX} ARCHIVE DESTINATION lib)
-elseif(APPLE)
+elseif(APPLE AND APPLE_STANDALONE_BUNDLE)
   install(TARGETS marblewidget LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/Marble.app/Contents/MacOS/lib)
 else()
   install(TARGETS marblewidget
@@ -458,7 +458,7 @@ endif()
 
 ########### install headers & cmake config files ###############
 
-if (APPLE)
+if (APPLE AND APPLE_STANDALONE_BUNDLE)
     # TODO: find how to install & deploy library, headers and config files as bundle for development
     return()
 endif()
diff --git a/src/lib/marble/MapThemeSortFilterProxyModel.cpp b/src/lib/marble/MapThemeSortFilterProxyModel.cpp
index cfc0e0f218a499be7796d18cdc76386948b29520..4f6939fea6b78ae9368d9b127314ea03234ad5d5 100644
--- a/src/lib/marble/MapThemeSortFilterProxyModel.cpp
+++ b/src/lib/marble/MapThemeSortFilterProxyModel.cpp
@@ -9,6 +9,7 @@
 // Copyright 2009      Torsten Rahn <tackat@kde.org>
 //
 
+#include "config-marble.h"
 #include "MapThemeSortFilterProxyModel.h"
 
 #include <QString>
@@ -52,6 +53,9 @@ bool MapThemeSortFilterProxyModel::isFavorite( const QModelIndex& index )
     const QAbstractItemModel *model = index.model();
     QModelIndex columnIndex = model->index( index.row(), 0, QModelIndex() );
     QString const key = QLatin1String("Favorites/") + model->data(columnIndex).toString();
+#ifdef APPLE_STANDARD_UNIX_BUILD
+    QSettings::setDefaultFormat(QSettings::IniFormat);
+#endif
     return QSettings().contains( key );
 }
 
@@ -60,6 +64,9 @@ QDateTime MapThemeSortFilterProxyModel::favoriteDateTime( const QModelIndex& ind
     const QAbstractItemModel *model = index.model();
     QModelIndex columnIndex = model->index( index.row(), 0, QModelIndex() );
     QString const key = QLatin1String("Favorites/") + model->data(columnIndex).toString();
+#ifdef APPLE_STANDARD_UNIX_BUILD
+    QSettings::setDefaultFormat(QSettings::IniFormat);
+#endif
     return QSettings().value( key ).toDateTime();
 }
 
diff --git a/src/lib/marble/MapViewItemDelegate.cpp b/src/lib/marble/MapViewItemDelegate.cpp
index 01e4746bafecee7a95fed410b9aca98dd6f4b567..3ab53efce0b913a00e63b2aa1954bf97ae8e4466 100644
--- a/src/lib/marble/MapViewItemDelegate.cpp
+++ b/src/lib/marble/MapViewItemDelegate.cpp
@@ -14,6 +14,7 @@
 //
 
 //Self
+#include "config-marble.h"
 #include "MapViewItemDelegate.h"
 
 //Qt
@@ -62,6 +63,9 @@ void MapViewItemDelegate::paint( QPainter *painter, const QStyleOptionViewItem &
 
     int const padding = 5;
     QString const name = index.data().toString();
+#ifdef APPLE_STANDARD_UNIX_BUILD
+    QSettings::setDefaultFormat(QSettings::IniFormat);
+#endif
     const bool isFavorite = QSettings().contains(QLatin1String("Favorites/") + name);
     QSize const bookmarkSize( 16, 16 );
     QRect bookmarkRect( iconRect.bottomRight(), bookmarkSize );
diff --git a/src/lib/marble/MapViewWidget.cpp b/src/lib/marble/MapViewWidget.cpp
index c572c789163e32516df261753b6b4366fa05a8c5..a661cd5a41e7fb36853878b2a845d2d21e4ed067 100644
--- a/src/lib/marble/MapViewWidget.cpp
+++ b/src/lib/marble/MapViewWidget.cpp
@@ -14,6 +14,7 @@
 //
 
 // Self
+#include "config-marble.h"
 #include "MapViewWidget.h"
 
 // Marble
@@ -72,6 +73,9 @@ class Q_DECL_HIDDEN MapViewWidget::Private {
     {
         m_mapSortProxy.setDynamicSortFilter( true );
         m_celestialListProxy.setDynamicSortFilter( true );
+#ifdef APPLE_STANDARD_UNIX_BUILD
+        QSettings::setDefaultFormat(QSettings::IniFormat);
+#endif
     }
 
     ~Private()
diff --git a/src/lib/marble/MarbleDirs.cpp b/src/lib/marble/MarbleDirs.cpp
index 61bc4b67ced62415d644f31aca76c1a277fc3539..a21538c1dbe52223813aab4f8f7a814730237531 100644
--- a/src/lib/marble/MarbleDirs.cpp
+++ b/src/lib/marble/MarbleDirs.cpp
@@ -30,7 +30,7 @@
 #include <shlobj.h>
 #endif
 
-#ifdef Q_OS_MACX
+#ifdef APPLE_STANDALONE_BUNDLE
 //for getting app bundle path
 #include <ApplicationServices/ApplicationServices.h>
 #endif
@@ -131,7 +131,7 @@ QString MarbleDirs::systemPath()
 	return QCoreApplication::applicationDirPath() + QDir::separator() + QLatin1String("data");
 #endif
 
-#ifdef Q_OS_MACX
+#ifdef APPLE_STANDALONE_BUNDLE
     //
     // On OSX lets try to find any file first in the bundle
     // before branching out to home and sys dirs
@@ -144,8 +144,8 @@ QString MarbleDirs::systemPath()
     CFRelease(myMacPath);
     //do some magick so that we can still find data dir if
     //marble was not built as a bundle
-    if (myPath.contains(QLatin1String(".app"))) {  //its a bundle!
-      systempath = myPath + QLatin1String("/Contents/Resources/data");
+    if (myPath.contains(QLatin1String(".app"))) {  //it's a bundle!
+      systempath = myPath + QLatin1String("/Contents/Resources");
     }
 
     if ( QFile::exists( systempath ) ){ 
@@ -185,7 +185,7 @@ QString MarbleDirs::pluginSystemPath()
 
     QString systempath;
 
-#ifdef Q_OS_MACX
+#ifdef APPLE_STANDALONE_BUNDLE
     //
     // On OSX lets try to find any file first in the bundle
     // before branching out to home and sys dirs
diff --git a/src/lib/marble/QtMarbleConfigDialog.cpp b/src/lib/marble/QtMarbleConfigDialog.cpp
index d1d100cfeecbb03b5f8c5948e0fa8227d212b831..ff2e77900cc956f803612295f314f7f8a4f5f1c2 100644
--- a/src/lib/marble/QtMarbleConfigDialog.cpp
+++ b/src/lib/marble/QtMarbleConfigDialog.cpp
@@ -10,6 +10,7 @@
 //
 
 // Own
+#include "config-marble.h"
 #include "QtMarbleConfigDialog.h"
 
 #include "ui_MarbleCacheSettingsWidget.h"
@@ -62,6 +63,9 @@ class QtMarbleConfigDialogPrivate
           m_cloudSyncManager(cloudSyncManager),
           m_pluginModel()
     {
+#ifdef APPLE_STANDARD_UNIX_BUILD
+        QSettings::setDefaultFormat(QSettings::IniFormat);
+#endif
     }
 
     Ui::MarbleViewSettingsWidget       ui_viewSettings;
diff --git a/src/lib/marble/StyleBuilder.cpp b/src/lib/marble/StyleBuilder.cpp
index 2945fd1ab17c848090888c3ab5a9fc386f9e3030..d84d70eca8bf1af457363d37258b7f3427312b09 100644
--- a/src/lib/marble/StyleBuilder.cpp
+++ b/src/lib/marble/StyleBuilder.cpp
@@ -682,7 +682,7 @@ void StyleBuilder::Private::initializeDefaultStyles()
 
     QString defaultFamily = m_defaultFont.family();
 
-#ifdef Q_OS_MACX
+#ifdef Q_OS_MACOS
     int defaultSize = 10;
 #else
     int defaultSize = 8;
diff --git a/src/lib/marble/declarative/MarbleQuickItem.cpp b/src/lib/marble/declarative/MarbleQuickItem.cpp
index 1b6e340bad3e457ec0c107c7a0cfd77c90c29b08..51cd06c2de7ff010408acb64b5ba5feea1f89075 100644
--- a/src/lib/marble/declarative/MarbleQuickItem.cpp
+++ b/src/lib/marble/declarative/MarbleQuickItem.cpp
@@ -9,6 +9,7 @@
 //
 
 
+#include "config-marble.h"
 #include <MarbleQuickItem.h>
 #include <QPainter>
 #include <QPaintDevice>
@@ -983,6 +984,9 @@ namespace Marble
 
     void MarbleQuickItem::loadSettings()
     {
+#ifdef APPLE_STANDARD_UNIX_BUILD
+        QSettings::setDefaultFormat(QSettings::IniFormat);
+#endif
         QSettings settings;
         settings.beginGroup(QStringLiteral("MarbleQuickItem"));
         double lon = settings.value(QStringLiteral("centerLon"), QVariant(0.0)).toDouble();
@@ -1013,6 +1017,9 @@ namespace Marble
 
     void MarbleQuickItem::writeSettings()
     {
+#ifdef APPLE_STANDARD_UNIX_BUILD
+        QSettings::setDefaultFormat(QSettings::IniFormat);
+#endif
         QSettings settings;
         settings.beginGroup(QStringLiteral("MarbleQuickItem"));
         settings.setValue(QStringLiteral("centerLon"), QVariant(d->m_map.centerLongitude()));
diff --git a/src/lib/marble/declarative/Settings.cpp b/src/lib/marble/declarative/Settings.cpp
index 6e3427566010a6305201d6bd58309001c5abf8fe..b8314e714a367ee9a10712476455c16b1baffed2 100644
--- a/src/lib/marble/declarative/Settings.cpp
+++ b/src/lib/marble/declarative/Settings.cpp
@@ -8,6 +8,7 @@
 // Copyright 2011      Dennis Nienhüser <nienhueser@kde.org>
 //
 
+#include "config-marble.h"
 #include "Settings.h"
 #include "MarbleDebug.h"
 
@@ -48,14 +49,22 @@ bool Settings::debugOutputEnabled() const
 
 QVariant Settings::value( const QString &group, const QString &key, const QVariant &value ) const
 {
+#ifdef APPLE_STANDARD_UNIX_BUILD
+    QSettings settings( QSettings::IniFormat, QSettings::UserScope, m_organizationName, m_applicationName );
+#else
     QSettings settings( m_organizationName, m_applicationName );
+#endif
     settings.beginGroup( group );
     return settings.value( key, value );
 }
 
 void Settings::setValue( const QString &group, const QString &key, const QVariant &value )
 {
+#ifdef APPLE_STANDARD_UNIX_BUILD
+    QSettings settings( QSettings::IniFormat, QSettings::UserScope, m_organizationName, m_applicationName );
+#else
     QSettings settings( m_organizationName, m_applicationName );
+#endif
     settings.beginGroup( group );
     settings.setValue( key, value );
     settings.endGroup();
diff --git a/src/lib/marble/geodata/data/GeoDataLabelStyle.cpp b/src/lib/marble/geodata/data/GeoDataLabelStyle.cpp
index 7ffdb1bd504a6a1965d0fe91324e27f581118e8a..c216f28b4fba91a3d46cc95191280e68058ee5b4 100644
--- a/src/lib/marble/geodata/data/GeoDataLabelStyle.cpp
+++ b/src/lib/marble/geodata/data/GeoDataLabelStyle.cpp
@@ -19,7 +19,7 @@
 
 namespace Marble
 {
-#ifdef Q_OS_MACX
+#ifdef Q_OS_MACOS
 static const int defaultSize = 10;
 #else
 static const int defaultSize = 8;
diff --git a/src/plugins/render/foursquare/FoursquarePlugin.cpp b/src/plugins/render/foursquare/FoursquarePlugin.cpp
index ca2a09353b337639c5c736e859caf7315dedf832..59a8b98016dd619eb6e99d5131f364709278fc3b 100644
--- a/src/plugins/render/foursquare/FoursquarePlugin.cpp
+++ b/src/plugins/render/foursquare/FoursquarePlugin.cpp
@@ -8,6 +8,7 @@
 // Copyright 2012 Utku Aydın <utkuaydin34@gmail.com>
 //
 
+#include "config-marble.h"
 #include "FoursquarePlugin.h"
 #include "FoursquareModel.h"
 
@@ -79,6 +80,9 @@ QIcon FoursquarePlugin::icon() const
 
 bool FoursquarePlugin::isAuthenticated()
 {
+#ifdef APPLE_STANDARD_UNIX_BUILD
+    QSettings::setDefaultFormat(QSettings::IniFormat);
+#endif
     QSettings settings;
 
     return !settings.value(QStringLiteral("access_token")).isNull();
@@ -88,6 +92,9 @@ bool FoursquarePlugin::storeAccessToken(const QString& tokenUrl)
 {
     QString expected = "http://edu.kde.org/marble/dummy#access_token=";
     if( tokenUrl.startsWith( expected ) ) {
+#ifdef APPLE_STANDARD_UNIX_BUILD
+        QSettings::setDefaultFormat(QSettings::IniFormat);
+#endif
         QSettings settings;
         QString url = tokenUrl;
         settings.setValue(QStringLiteral("access_token"), url.remove(expected));
diff --git a/src/plugins/render/graticule/GraticulePlugin.cpp b/src/plugins/render/graticule/GraticulePlugin.cpp
index 923814c799f79911132cfef6dae0f883d058e0dd..f9c1cb7774c40aac1cc7db9abde29ee14cb81ae8 100644
--- a/src/plugins/render/graticule/GraticulePlugin.cpp
+++ b/src/plugins/render/graticule/GraticulePlugin.cpp
@@ -269,7 +269,7 @@ bool GraticulePlugin::render( GeoPainter *painter, ViewportParams *viewport,
     }
 
     // Setting the label font for the coordinate lines.
-#ifdef Q_OS_MACX
+#ifdef Q_OS_MACOS
     int defaultFontSize = 10;
 #else
     int defaultFontSize = 8;
diff --git a/src/plugins/render/measure/MeasureToolPlugin.cpp b/src/plugins/render/measure/MeasureToolPlugin.cpp
index 5364b2bdcda0a8b014f68e545cd9891e15542b65..1ebae673f3dc2d88e5a81526f393e1fbd2517813 100644
--- a/src/plugins/render/measure/MeasureToolPlugin.cpp
+++ b/src/plugins/render/measure/MeasureToolPlugin.cpp
@@ -36,7 +36,7 @@ namespace Marble
 MeasureToolPlugin::MeasureToolPlugin( const MarbleModel *marbleModel )
     : RenderPlugin( marbleModel ),
       m_measureLineString( GeoDataLineString( Tessellate ) ),
-#ifdef Q_OS_MACX
+#ifdef Q_OS_MACOS
       m_font_regular( QFont( QStringLiteral( "Sans Serif" ), 10, 50, false ) ),
 #else
       m_font_regular( QFont( QStringLiteral( "Sans Serif" ),  8, 50, false ) ),
diff --git a/src/plugins/render/weather/WeatherItem.cpp b/src/plugins/render/weather/WeatherItem.cpp
index fcc42915ae7d5b5b62fef298aa40c92d1e04533e..6e66cceba6a4b736b226835245a17e781cf14da1 100644
--- a/src/plugins/render/weather/WeatherItem.cpp
+++ b/src/plugins/render/weather/WeatherItem.cpp
@@ -312,7 +312,7 @@ class WeatherItemPrivate
 };
 
 // FIXME: Fonts to be defined globally
-#ifdef Q_OS_MACX
+#ifdef Q_OS_MACOS
     QFont WeatherItemPrivate::s_font = QFont( QStringLiteral( "Sans Serif" ), 10 );
 #else
     QFont WeatherItemPrivate::s_font = QFont( QStringLiteral( "Sans Serif" ), 8 );
diff --git a/src/plugins/runner/gpx/CMakeLists.txt b/src/plugins/runner/gpx/CMakeLists.txt
index 62e1e10d86f1eec8995c3268f0d1c72dbb3f03db..8d7cebff657cd570d6302f0ff83aa9b2c901fd97 100644
--- a/src/plugins/runner/gpx/CMakeLists.txt
+++ b/src/plugins/runner/gpx/CMakeLists.txt
@@ -69,7 +69,7 @@ endif()
 # register thumbnail plugin as handler
 install(FILES marble_thumbnail_gpx.desktop DESTINATION ${KDE_INSTALL_KSERVICES5DIR})
 
-if(NOT WIN32 AND NOT APPLE)
+if(NOT WIN32 AND NOT APPLE_STANDALONE_BUNDLE)
     # register marble app as handler
     install(FILES marble_gpx.desktop DESTINATION ${KDE_INSTALL_APPDIR})
 endif()
diff --git a/src/plugins/runner/json/CMakeLists.txt b/src/plugins/runner/json/CMakeLists.txt
index ce997af07a3f49508bb2e4ab53f3c1757cadfa1a..a91ea3925b58cd0b1fdc68577644bf168c01138d 100644
--- a/src/plugins/runner/json/CMakeLists.txt
+++ b/src/plugins/runner/json/CMakeLists.txt
@@ -30,7 +30,7 @@ endif()
 # register thumbnail plugin as handler
 install(FILES marble_thumbnail_geojson.desktop DESTINATION ${KDE_INSTALL_KSERVICES5DIR})
 
-if(NOT WIN32 AND NOT APPLE)
+if(NOT WIN32 AND NOT APPLE_STANDALONE_BUNDLE)
     # register marble app as handler
     install(FILES marble_geojson.desktop DESTINATION ${KDE_INSTALL_APPDIR})
 endif()
diff --git a/src/plugins/runner/kml/CMakeLists.txt b/src/plugins/runner/kml/CMakeLists.txt
index a31ce98f6267d95425317c5cbe18f1bb0e745be6..1e3714677c1d488e6c1a07e9cd5223d489a037f1 100644
--- a/src/plugins/runner/kml/CMakeLists.txt
+++ b/src/plugins/runner/kml/CMakeLists.txt
@@ -34,7 +34,7 @@ endif()
 install(FILES marble_thumbnail_kml.desktop DESTINATION ${KDE_INSTALL_KSERVICES5DIR})
 install(FILES marble_thumbnail_kmz.desktop DESTINATION ${KDE_INSTALL_KSERVICES5DIR})
 
-if(NOT WIN32 AND NOT APPLE)
+if(NOT WIN32 AND NOT APPLE_STANDALONE_BUNDLE)
     # register marble app as handler
     install(FILES marble_kml.desktop DESTINATION ${KDE_INSTALL_APPDIR})
     install(FILES marble_kmz.desktop DESTINATION ${KDE_INSTALL_APPDIR})
diff --git a/src/plugins/runner/shp/CMakeLists.txt b/src/plugins/runner/shp/CMakeLists.txt
index 7e080892470a4da6b83618d59e6f00559301e764..380ae8c541e79ea9fe47b76683c7a677c1b88de1 100644
--- a/src/plugins/runner/shp/CMakeLists.txt
+++ b/src/plugins/runner/shp/CMakeLists.txt
@@ -34,7 +34,7 @@ endif()
 # register thumbnail plugin as handler
 install(FILES marble_thumbnail_shp.desktop DESTINATION ${KDE_INSTALL_KSERVICES5DIR})
 
-if(NOT WIN32 AND NOT APPLE)
+if(NOT WIN32 AND NOT APPLE_STANDALONE_BUNDLE)
     # register marble app as handler
     install(FILES marble_shp.desktop DESTINATION ${KDE_INSTALL_APPDIR})
 endif()
diff --git a/tests/CMakeLists.txt b/tests/CMakeLists.txt
index ecb3012b0237b25e19cf8a82ab33bb5a5a7431b7..e4d2af4fba08b787bed76ff21e2b27b8a2d8516d 100644
--- a/tests/CMakeLists.txt
+++ b/tests/CMakeLists.txt
@@ -14,10 +14,10 @@ ENDIF (WIN32)
 # Since the tests are not actually installed, but rather
 # run directly from the build/src/tests dir we need to
 # ensure the marble libs can be found.
-IF (APPLE)
+IF (APPLE AND APPLE_STANDALONE_BUNDLE)
   # For Mac OS X, the executable must be at the root of the bundle's executable folder
   SET (CMAKE_INSTALL_NAME_DIR @executable_path/../lib)
-ENDIF (APPLE)
+ENDIF (APPLE AND APPLE_STANDALONE_BUNDLE)
 
 set( EXECUTABLE_OUTPUT_PATH ${CMAKE_CURRENT_BINARY_DIR} )
 
