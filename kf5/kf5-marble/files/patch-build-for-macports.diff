diff --git a/CMakeLists.txt b/CMakeLists.txt
index 28c9299..8c038bc 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -113,7 +113,7 @@ endif( WIN32 )
 ####################################################
 # Build a D-Bus interface for marble
 # This is disabled by default for all win32, apple and Qt-Only builds
-if(WIN32 OR APPLE OR CMAKE_SYSTEM_NAME STREQUAL Android)
+if(WIN32 OR APPEL OR CMAKE_SYSTEM_NAME STREQUAL Android)
     option(BUILD_WITH_DBUS "Build the D-Bus interface for the Marble widget" OFF)
 else()
     option(BUILD_WITH_DBUS "Build the D-Bus interface for the Marble widget" ON)
@@ -157,15 +157,18 @@ elseif(APPLE)
     FIND_LIBRARY(APP_SERVICES_LIBRARY ApplicationServices )
     MARK_AS_ADVANCED (APP_SERVICES_LIBRARY)
     SET(MAC_EXTRA_LIBS ${APP_SERVICES_LIBRARY})
-      # for Mac OS X, everything is put inside an application bundle
-      SET (CMAKE_INSTALL_PREFIX ${CMAKE_INSTALL_PREFIX}/)
-      # path for library references
-      SET (CMAKE_INSTALL_NAME_DIR @executable_path/lib)
-      # install the Info.plist file
-      install(FILES src/mac/Info.plist DESTINATION ${CMAKE_INSTALL_PREFIX}/Marble.app/Contents)
-      #SET (lib_dir ${CMAKE_INSTALL_PREFIX}/Marble.app/Contents/MacOS/lib)
-      SET (data_dir   ${CMAKE_INSTALL_PREFIX}/Marble.app/Contents/MacOS/resources/data)
-      SET (plugin_dir   ${CMAKE_INSTALL_PREFIX}/Marble.app/Contents/MacOS/resources/plugins)
+#       # for Mac OS X, everything is put inside an application bundle
+#       SET (CMAKE_INSTALL_PREFIX ${CMAKE_INSTALL_PREFIX}/)
+#       # path for library references
+#       SET (CMAKE_INSTALL_NAME_DIR @executable_path/lib)
+#       # install the Info.plist file
+#       install(FILES src/mac/Info.plist DESTINATION ${CMAKE_INSTALL_PREFIX}/Marble.app/Contents)
+#       #SET (lib_dir ${CMAKE_INSTALL_PREFIX}/Marble.app/Contents/MacOS/lib)
+#       SET (data_dir   ${CMAKE_INSTALL_PREFIX}/Marble.app/Contents/MacOS/resources/data)
+#       SET (plugin_dir   ${CMAKE_INSTALL_PREFIX}/Marble.app/Contents/MacOS/resources/plugins)
+      set(data_dir ${CMAKE_INSTALL_PREFIX}/share/marble/data)
+      set(plugin_dir ${CMAKE_INSTALL_FULL_LIBDIR}/marble/plugins)
+      set(CMAKE_MODULES_INSTALL_PATH ${CMAKE_INSTALL_PREFIX}/share/marble/cmake)
 elseif(CMAKE_SYSTEM_NAME STREQUAL Android)
       set(plugin_dir "${CMAKE_INSTALL_PREFIX}/assets/plugins")
       set(data_dir "${CMAKE_INSTALL_PREFIX}/assets/data")
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 063db88..d4e8777 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -67,9 +67,9 @@ configure_file(
   ${CMAKE_CURRENT_BINARY_DIR}/config-marble.h
 )
 
-if(APPLE)
+if(APPEL)
   add_subdirectory( mac )
-endif(APPLE)
+endif(APPEL)
 
 # FIXME ktimezonewidget.h is gone
 #add_subdirectory( plasmoid )
diff --git a/src/apps/marble-kde/CMakeLists.txt b/src/apps/marble-kde/CMakeLists.txt
index 2841052..bf0f742 100644
--- a/src/apps/marble-kde/CMakeLists.txt
+++ b/src/apps/marble-kde/CMakeLists.txt
@@ -5,6 +5,7 @@ if(ECM_FOUND)
   include(KDEInstallDirs)
   include(KDECMakeSettings)
   include(ECMInstallIcons)
+  include(ECMAddAppIcon)
 endif()
 macro_optional_find_package(KF5 QUIET COMPONENTS Crash Wallet NewStuff Parts CoreAddons I18n)
 
@@ -48,6 +49,9 @@ ecm_install_icons(ICONS
   "${CMAKE_CURRENT_SOURCE_DIR}/../../../data/icons/48-apps-marble.png"
   "${CMAKE_CURRENT_SOURCE_DIR}/../../../data/icons/64-apps-marble.png"
   DESTINATION ${ICON_INSTALL_DIR})
+file(GLOB ICONS_SRCS
+  "${CMAKE_CURRENT_SOURCE_DIR}/../../../data/icons/*-apps-marble.png")
+ecm_add_app_icon(marble_kde_SRCS ICONS ${ICONS_SRCS})
 add_executable (marble ${marble_kde_SRCS})
 
 target_link_libraries (
@@ -69,7 +73,7 @@ if(STATIC_BUILD)
     target_link_libraries(marble ${QT_PLUGINS_DIR}/imageformats/qsvg.lib)
 endif(STATIC_BUILD)
 
-if (NOT APPLE)
+if (NOT APPEL)
     install( FILES marble.desktop DESTINATION ${APPS_INSTALL_DIR})
 endif()
 
diff --git a/src/apps/marble-qt/CMakeLists.txt b/src/apps/marble-qt/CMakeLists.txt
index 5a242b6..b42d90e 100644
--- a/src/apps/marble-qt/CMakeLists.txt
+++ b/src/apps/marble-qt/CMakeLists.txt
@@ -14,13 +14,13 @@ if (WIN32)
 	  set_target_properties(marble-qt PROPERTIES LINK_FLAGS "/ENTRY:\"mainCRTStartup\"")
     endif()
 else (WIN32)
-    if (APPLE)
+    if (APPEL)
         add_executable (marble-qt ${marble_SRCS})
-        # For Mac OS X, the executable must be at the root of the bundle's executable folder
-        INSTALL(TARGETS marble-qt RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX}/Marble.app/Contents/MacOS)
-    else (APPLE)
+#         # For Mac OS X, the executable must be at the root of the bundle's executable folder
+#         INSTALL(TARGETS marble-qt RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX}/Marble.app/Contents/MacOS)
+    else (APPEL)
         add_executable (marble-qt ${marble_SRCS})
-    endif (APPLE)
+    endif (APPEL)
 endif (WIN32)
 
 target_link_libraries (
@@ -54,11 +54,11 @@ endif(STATIC_BUILD)
 if(WIN32)
 install (TARGETS marble-qt RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX})
 else(WIN32)
-if (APPLE)
+if (APPEL)
   # No need for this when installing to a bundle
-else (APPLE)
+else (APPEL)
     install (TARGETS marble-qt RUNTIME DESTINATION bin )
-endif (APPLE)
+endif (APPEL)
 endif(WIN32)
 if(APPS_INSTALL_DIR)
   install(PROGRAMS marble-qt.desktop DESTINATION ${APPS_INSTALL_DIR})
diff --git a/src/lib/astro/CMakeLists.txt b/src/lib/astro/CMakeLists.txt
index c4dcd5b..dd145b6 100644
--- a/src/lib/astro/CMakeLists.txt
+++ b/src/lib/astro/CMakeLists.txt
@@ -50,7 +50,7 @@ endif()
 # choose the correct target install library path
 if(WIN32)
   INSTALL(TARGETS astro RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX})
-elseif(APPLE)
+elseif(APPEL)
   INSTALL(TARGETS astro LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/Marble.app/Contents/MacOS/lib)
 else()
   INSTALL(TARGETS astro LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR})
diff --git a/src/lib/marble/CMakeLists.txt b/src/lib/marble/CMakeLists.txt
index 42fe56f..1e7bb60 100644
--- a/src/lib/marble/CMakeLists.txt
+++ b/src/lib/marble/CMakeLists.txt
@@ -414,7 +414,7 @@ set_target_properties(${MARBLEWIDGET} PROPERTIES
 # choose the correct target install library path
 if(WIN32)
   install(TARGETS ${MARBLEWIDGET} RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX})
-elseif(APPLE)
+elseif(APPEL)
   install(TARGETS ${MARBLEWIDGET} LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/Marble.app/Contents/MacOS/lib)
 else()
   install(TARGETS ${MARBLEWIDGET} LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR})
diff --git a/src/plugins/runner/kml/CMakeLists.txt b/src/plugins/runner/kml/CMakeLists.txt
index 573e149..413ff47 100644
--- a/src/plugins/runner/kml/CMakeLists.txt
+++ b/src/plugins/runner/kml/CMakeLists.txt
@@ -11,7 +11,7 @@ set( kml_SRCS KmlDocument.cpp KmlParser.cpp KmlPlugin.cpp KmlRunner.cpp KmzHandl
 
 marble_add_plugin( KmlPlugin ${kml_SRCS} )
 
-if(WIN32 OR APPLE)
+if(WIN32 OR APPEL)
   # nothing to do
 else()
   install(FILES marble_kml.desktop DESTINATION ${APPS_INSTALL_DIR})
diff --git a/src/plugins/runner/osm/CMakeLists.txt b/src/plugins/runner/osm/CMakeLists.txt
index 82091a5..71c93cd 100644
--- a/src/plugins/runner/osm/CMakeLists.txt
+++ b/src/plugins/runner/osm/CMakeLists.txt
@@ -34,7 +34,7 @@ set( osm_SRCS
 
 marble_add_plugin( OsmPlugin ${osm_SRCS} ${osm_writers_SRCS} ${osm_translators_SRCS} )
 
-if(WIN32 OR APPLE)
+if(WIN32 OR APPEL)
   # nothing to do
 else()
   install(FILES marble_osm.desktop DESTINATION ${APPS_INSTALL_DIR})
diff --git a/src/plugins/runner/shp/CMakeLists.txt b/src/plugins/runner/shp/CMakeLists.txt
index cddaebf..f8259ad 100644
--- a/src/plugins/runner/shp/CMakeLists.txt
+++ b/src/plugins/runner/shp/CMakeLists.txt
@@ -13,7 +13,7 @@ set( ShpPlugin_LIBS ${LIBSHP_LIBRARIES} )
 
 marble_add_plugin( ShpPlugin ${shp_SRCS} )
 
-if(WIN32 OR APPLE)
+if(WIN32 OR APPEL)
   # nothing to do
 else()
   install(FILES marble_shp.desktop DESTINATION ${APPS_INSTALL_DIR})
diff --git a/tests/CMakeLists.txt b/tests/CMakeLists.txt
index d0db4d6..c6a73ed 100644
--- a/tests/CMakeLists.txt
+++ b/tests/CMakeLists.txt
@@ -14,10 +14,10 @@ ENDIF (WIN32)
 # Since the tests are not actually installed, but rather
 # run directly from the build/src/tests dir we need to
 # ensure the marble libs can be found.
-IF (APPLE)
+IF (APPEL)
   # For Mac OS X, the executable must be at the root of the bundle's executable folder
   SET (CMAKE_INSTALL_NAME_DIR @executable_path/../lib)
-ENDIF (APPLE)
+ENDIF (APPEL)
 
 set( EXECUTABLE_OUTPUT_PATH ${CMAKE_CURRENT_BINARY_DIR} )
 
