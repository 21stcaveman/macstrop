diff --git kstyle/demo/CMakeLists.txt kstyle/demo/CMakeLists.txt
index 6aebd9bba2c06cfbcd34853495c8ee095db01d67..6b6a1bbc4dd42cad7f96468828fd07999773e8bc 100644
--- kstyle/demo/CMakeLists.txt
+++ kstyle/demo/CMakeLists.txt
@@ -46,6 +46,12 @@ if(OXYGEN_USE_KDE4)
 
 else()
 
+  find_package(KF5ConfigWidgets CONFIG)
+  if(KF5ConfigWidgets_FOUND)
+    set(oxygen_demo_SOURCES ${oxygen_demo_SOURCES} oxygenschemechooser.cpp)
+    add_definitions(-DHAVE_SCHEME_CHOOSER)
+  endif()
+
   ki18n_wrap_ui(oxygen_demo_FORMS_HEADERS ${oxygen_demo_FORMS})
 
   add_executable(oxygen-demo5
@@ -55,6 +61,9 @@ else()
 
   target_link_libraries(oxygen-demo5 Qt5::Core Qt5::Gui Qt5::Widgets)
   target_link_libraries(oxygen-demo5 KF5::Completion KF5::ConfigGui KF5::WidgetsAddons KF5::I18n)
+  if(KF5ConfigWidgets_FOUND)
+    target_link_libraries(oxygen-demo5 KF5::ConfigWidgets)
+  endif()
 
   ########### install files ###############
   install(TARGETS oxygen-demo5 ${INSTALL_TARGETS_DEFAULT_ARGS})
diff --git kstyle/demo/oxygendemodialog.cpp kstyle/demo/oxygendemodialog.cpp
index 4a742e3068a06bfc5fbd7b7c973ea7e5fbfcaaec..78f0b1ec8a552a51578c69be8105cc3c6893bb8f 100644
--- kstyle/demo/oxygendemodialog.cpp
+++ kstyle/demo/oxygendemodialog.cpp
@@ -34,6 +34,9 @@
 #include "oxygensliderdemowidget.h"
 #include "oxygentabdemowidget.h"
 #include "config-liboxygen.h"
+#ifdef HAVE_SCHEME_CHOOSER
+#include "oxygenschemechooser.h"
+#endif
 
 #include <QTextStream>
 #include <QShortcut>
@@ -75,9 +78,17 @@ namespace Oxygen
         buttonBox->addButton( _enableCheckBox, QDialogButtonBox::ResetRole );
 
         _rightToLeftCheckBox = new QCheckBox( i18n( "Right to left layout" ) );
+        _rightToLeftCheckBox->setChecked( qApp->isRightToLeft() );
         connect( _rightToLeftCheckBox, SIGNAL(toggled(bool)), SLOT(toggleRightToLeft(bool)) );
+        connect( qApp, SIGNAL(layoutDirectionChanged(Qt::LayoutDirection)), SLOT(layoutDirectionChanged(Qt::LayoutDirection)) );
         buttonBox->addButton( _rightToLeftCheckBox, QDialogButtonBox::ResetRole );
 
+#ifdef HAVE_SCHEME_CHOOSER
+        ColorSchemeChooser *colChooser = new ColorSchemeChooser(this);
+        colChooser->setFlat(true);
+        buttonBox->addButton( colChooser, QDialogButtonBox::ResetRole );
+#endif
+
         // connections
         connect( pageWidget, SIGNAL(currentPageChanged(KPageWidgetItem*,KPageWidgetItem*)), SLOT(updateWindowTitle(KPageWidgetItem*)) );
         connect( pageWidget, SIGNAL(currentPageChanged(KPageWidgetItem*,KPageWidgetItem*)), SLOT(updateEnableState(KPageWidgetItem*)) );
@@ -218,6 +229,10 @@ namespace Oxygen
     { qApp->setLayoutDirection( value ? Qt::RightToLeft:Qt::LeftToRight ); }
 
     //_______________________________________________________________
+    void DemoDialog::layoutDirectionChanged( Qt::LayoutDirection direction )
+    { _rightToLeftCheckBox->setChecked( direction == Qt::RightToLeft ); }
+
+    //_______________________________________________________________
     void DemoDialog::closeEvent( QCloseEvent* event )
     {
         emit abortSimulations();
diff --git kstyle/demo/oxygendemodialog.h kstyle/demo/oxygendemodialog.h
index b296ec7170bac18552ad3729564394d591e5175d..9f0015dfe73503ec1b2447253ee72d8c70a010b9 100644
--- kstyle/demo/oxygendemodialog.h
+++ kstyle/demo/oxygendemodialog.h
@@ -75,6 +75,7 @@ namespace Oxygen
 
         //! toggle RightToLeft
         virtual void toggleRightToLeft( bool );
+        virtual void layoutDirectionChanged( Qt::LayoutDirection );
 
         protected:
 
diff --git kstyle/demo/oxygenmdidemowidget.cpp kstyle/demo/oxygenmdidemowidget.cpp
index 3e5422eb1ead7c0a701c500b4131bd8b52463f60..bfd1fb9663a1add0333dbfc6a23778b951e16d84 100644
--- kstyle/demo/oxygenmdidemowidget.cpp
+++ kstyle/demo/oxygenmdidemowidget.cpp
@@ -40,6 +40,8 @@ namespace Oxygen
     {
         setLayout( new QVBoxLayout() );
         QMenuBar* menuBar = new QMenuBar( this );
+        // let the menubar appear in the MDI window on all platforms
+        menuBar->setNativeMenuBar( false );
         layout()->addWidget( menuBar );
 
         QWidget* widget = new QWidget( this );
@@ -47,12 +49,28 @@ namespace Oxygen
         ui.setupUi( widget );
 
         QMenu* menu = menuBar->addMenu( i18n( "Layout" ) );
-        connect( menu->addAction( i18n( "Tile" ) ), SIGNAL(triggered()), this, SLOT(setLayoutTiled()) );
-        connect( menu->addAction( i18n( "Cascade" ) ), SIGNAL(triggered()), this, SLOT(setLayoutCascade()) );
-        connect( menu->addAction( i18n( "Tabs" ) ), SIGNAL(triggered()), this, SLOT(setLayoutTabbed()) );
+        QActionGroup *aGroup = new QActionGroup( menu );
+        QAction *action = menu->addAction( i18n( "Tile" ) );
+        action->setCheckable( true );
+        aGroup->addAction( action );
+        connect( action, SIGNAL(triggered()), this, SLOT(setLayoutTiled()) );
+        action = menu->addAction( i18n( "Cascade" ) );
+        action->setCheckable( true );
+        aGroup->addAction( action );
+        connect( action, SIGNAL(triggered()), this, SLOT(setLayoutCascade()) );
+        action = menu->addAction( i18n( "Tabs" ) );
+        action->setCheckable( true );
+        aGroup->addAction( action );
+        connect( action, SIGNAL(triggered()), this, SLOT(setLayoutTabbed()) );
+
+        menu->addSeparator();
+
+        _rightToLeftLayout = menu->addAction( i18n( "Right to left layout" ) );
+        _rightToLeftLayout->setCheckable( true );
+        connect( _rightToLeftLayout, SIGNAL(triggered()), this, SLOT(toggleDirection()) );
+        connect( qApp, SIGNAL(layoutDirectionChanged(Qt::LayoutDirection)), SLOT(layoutDirectionChanged(Qt::LayoutDirection)) );
 
         menu = menuBar->addMenu( i18n( "Tools" ) );
-        QAction* action;
         connect( action = menu->addAction( QIcon::fromTheme( QStringLiteral( "arrow-right" ) ), i18n( "Select Next Window" ) ), SIGNAL(triggered()), ui.mdiArea, SLOT(activateNextSubWindow()) );
         action->setShortcut( Qt::CTRL + Qt::Key_Tab );
         addAction( action );
@@ -82,6 +100,14 @@ namespace Oxygen
     { ui.mdiArea->setViewMode( QMdiArea::TabbedView ); }
 
     //______________________________________________________________
+    void MdiDemoWidget::toggleDirection( void )
+    { qApp->setLayoutDirection( qApp->isLeftToRight() ? Qt::RightToLeft : Qt::LeftToRight ); }
+
+    //_______________________________________________________________
+    void MdiDemoWidget::layoutDirectionChanged( Qt::LayoutDirection direction )
+    { _rightToLeftLayout->setChecked( direction == Qt::RightToLeft ); }
+
+    //______________________________________________________________
     void MdiDemoWidget::benchmark( void )
     {
         if( !isVisible() ) return;
diff --git kstyle/demo/oxygenmdidemowidget.h kstyle/demo/oxygenmdidemowidget.h
index eafbeeebae96187928c00a4f02f1480433a8c440..7147f49fd708286a64b26f12967548fc4d313df5 100644
--- kstyle/demo/oxygenmdidemowidget.h
+++ kstyle/demo/oxygenmdidemowidget.h
@@ -54,12 +54,15 @@ namespace Oxygen
         void setLayoutTiled( void );
         void setLayoutCascade( void );
         void setLayoutTabbed( void );
+        void toggleDirection( void );
+        void layoutDirectionChanged( Qt::LayoutDirection );
 
         void benchmark( void );
 
         private:
 
         Ui_MdiDemoWidget ui;
+	   QAction *_rightToLeftLayout;
 
     };
 
diff --git kstyle/demo/oxygenschemechooser.cpp kstyle/demo/oxygenschemechooser.cpp
new file mode 100644
index 0000000000000000000000000000000000000000..4885c04374905b271bc3afcba2add2ac2ebbcd74
--- /dev/null
+++ kstyle/demo/oxygenschemechooser.cpp
@@ -0,0 +1,108 @@
+/*************************************************************************************
+ * This file was part of KDevPlatform and now of Oxygen                              *
+ * Copyright 2016 Zhigalin Alexander <alexander@zhigalin.tk>                         *
+ * Copyright 2017 Ren√© J.V. Bertin <rjvbertin@gmail.com>                             *
+ *                                                                                   *
+ * This library is free software; you can redistribute it and/or                     *
+ * modify it under the terms of the GNU Lesser General Public                        *
+ * License as published by the Free Software Foundation; either                      *
+ * version 2.1 of the License, or (at your option) version 3, or any                 *
+ * later version accepted by the membership of KDE e.V. (or its                      *
+ * successor approved by the membership of KDE e.V.), which shall                    *
+ * act as a proxy defined in Section 6 of version 3 of the license.                  *
+ *                                                                                   *
+ * This library is distributed in the hope that it will be useful,                   *
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of                    *
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU                 *
+ * Lesser General Public License for more details.                                   *
+ *                                                                                   *
+ * You should have received a copy of the GNU Lesser General Public                  *
+ * License along with this library.  If not, see <http://www.gnu.org/licenses/>.     *
+ *************************************************************************************/
+
+#include "oxygenschemechooser.h"
+
+#include <QStringList>
+#include <QActionGroup>
+#include <QAction>
+#include <QMenu>
+#include <QModelIndex>
+
+#include <KActionMenu>
+#include <KColorSchemeManager>
+#include <KLocalizedString>
+#include <KSharedConfig>
+#include <KConfigGroup>
+
+namespace Oxygen
+{
+
+ColorSchemeChooser::ColorSchemeChooser(QWidget* parent)
+    : QPushButton(parent)
+{
+    auto manager = new KColorSchemeManager(parent);
+
+    const auto scheme(currentSchemeName());
+
+    auto selectionMenu = manager->createSchemeSelectionMenu(scheme, this);
+
+    connect(selectionMenu->menu(), &QMenu::triggered,
+            this, &ColorSchemeChooser::slotSchemeChanged);
+
+    manager->activateScheme(manager->indexForScheme(scheme));
+
+    setMenu(selectionMenu->menu());
+    menu()->setIcon(QIcon::fromTheme(QStringLiteral("preferences-desktop-color")));
+    menu()->setTitle(i18n("&Color Theme"));
+    setIcon(menu()->icon());
+    setText(menu()->title());
+}
+
+QString ColorSchemeChooser::loadCurrentScheme() const
+{
+    KSharedConfigPtr config = KSharedConfig::openConfig();
+#ifdef SUPPORT_THEME_SAVING
+    KConfigGroup cg(config, "UiSettings");
+    return cg.readEntry("ColorScheme", currentDesktopDefaultScheme());
+#else
+    return currentDesktopDefaultScheme();
+#endif
+}
+
+#ifdef SUPPORT_THEME_SAVING
+void ColorSchemeChooser::saveCurrentScheme(const QString &name)
+{
+    KSharedConfigPtr config = KSharedConfig::openConfig();
+    KConfigGroup cg(config, "UiSettings");
+    cg.writeEntry("ColorScheme", name);
+    cg.sync();
+}
+#endif
+
+QString ColorSchemeChooser::currentDesktopDefaultScheme() const
+{
+    KSharedConfigPtr config = KSharedConfig::openConfig(QLatin1String("kdeglobals"));
+    KConfigGroup group(config, "General");
+    return group.readEntry("ColorScheme", QStringLiteral("Breeze"));
+}
+
+QString ColorSchemeChooser::currentSchemeName() const
+{
+    if(!menu()) return loadCurrentScheme();
+
+    QAction* const action = menu()->activeAction();
+
+    if(action) return KLocalizedString::removeAcceleratorMarker(action->text());
+    return currentDesktopDefaultScheme();
+}
+
+void ColorSchemeChooser::slotSchemeChanged(QAction* triggeredAction)
+{
+#ifdef SUPPORT_THEME_SAVING
+    saveCurrentScheme(KLocalizedString::removeAcceleratorMarker(triggeredAction->text()));
+#else
+    Q_UNUSED(triggeredAction);
+#endif
+}
+
+}  // namespace Oxygen
diff --git kstyle/demo/oxygenschemechooser.h kstyle/demo/oxygenschemechooser.h
new file mode 100644
index 0000000000000000000000000000000000000000..82adadec42e6a07704b268574eee54a08507d789
--- /dev/null
+++ kstyle/demo/oxygenschemechooser.h
@@ -0,0 +1,57 @@
+/*************************************************************************************
+ * This file was part of KDevPlatform and now of Oxygen                              *
+ * Copyright 2016 Zhigalin Alexander <alexander@zhigalin.tk>                         *
+ *                                                                                   *
+ * This library is free software; you can redistribute it and/or                     *
+ * modify it under the terms of the GNU Lesser General Public                        *
+ * License as published by the Free Software Foundation; either                      *
+ * version 2.1 of the License, or (at your option) version 3, or any                 *
+ * later version accepted by the membership of KDE e.V. (or its                      *
+ * successor approved by the membership of KDE e.V.), which shall                    *
+ * act as a proxy defined in Section 6 of version 3 of the license.                  *
+ *                                                                                   *
+ * This library is distributed in the hope that it will be useful,                   *
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of                    *
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU                 *
+ * Lesser General Public License for more details.                                   *
+ *                                                                                   *
+ * You should have received a copy of the GNU Lesser General Public                  *
+ * License along with this library.  If not, see <http://www.gnu.org/licenses/>.     *
+ *************************************************************************************/
+
+#ifndef COLORSCHEMECHOOSER_H
+#define COLORSCHEMECHOOSER_H
+
+#include <QObject>
+#include <QAction>
+#include <QPushButton>
+#include <QString>
+
+namespace Oxygen
+{
+/**
+ * Provides a menu that will offer to change the color scheme
+ *
+ * Furthermore, it will save the selection in the user configuration.
+ */
+class ColorSchemeChooser : public QPushButton
+{
+    Q_OBJECT
+    public:
+        explicit ColorSchemeChooser(QWidget* parent);
+
+        QString currentSchemeName() const;
+    private Q_SLOTS:
+        void slotSchemeChanged(QAction* triggeredAction);
+
+    private:
+        QString loadCurrentScheme() const;
+#ifdef SUPPORT_THEME_SAVING
+        void    saveCurrentScheme(const QString &name);
+#endif
+        QString currentDesktopDefaultScheme() const;
+};
+
+}  // namespace Oxygen
+
+#endif // COLORSCHEMECHOOSER_H
