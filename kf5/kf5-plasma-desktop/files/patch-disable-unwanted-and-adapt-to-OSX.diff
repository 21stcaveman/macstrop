diff --git a/CMakeLists.txt b/CMakeLists.txt
index 942c61c..1e6680b 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -30,10 +30,12 @@ find_package(Qt5 ${QT_MIN_VERSION} CONFIG REQUIRED COMPONENTS
     QuickWidgets
     DBus
     Widgets
-    X11Extras
     Svg
     Concurrent
 )
+if(NOT APPLE)
+    find_package(Qt5 ${QT_MIN_VERSION} CONFIG REQUIRED COMPONENTS X11Extras)
+endif()
 
 set(KF5_MIN_VERSION "5.19.0")
 find_package(KF5 ${KF5_MIN_VERSION} REQUIRED COMPONENTS
@@ -78,15 +80,17 @@ set_package_properties(KF5Activities PROPERTIES DESCRIPTION "management of Plasm
                        PURPOSE "Needed by activity related plasmoids and the pager."
                       )
 
-# Baloo is currently part of the KF5 namespace, but it is not
-# a proper framework. Hence the strange versioning.
-# This will be fixed with Plasma 5.2, as Baloo should have
-# become a framework by then
-find_package(KF5Baloo "5.1.90")
-set_package_properties(KF5Baloo PROPERTIES DESCRIPTION "File Searching"
-                       TYPE REQUIRED
-                       PURPOSE "Needed to build to File Search KCM"
-                      )
+if(NOT APPLE)
+    # Baloo is currently part of the KF5 namespace, but it is not
+    # a proper framework. Hence the strange versioning.
+    # This will be fixed with Plasma 5.2, as Baloo should have
+    # become a framework by then
+    find_package(KF5Baloo "5.1.90")
+    set_package_properties(KF5Baloo PROPERTIES DESCRIPTION "File Searching"
+                        TYPE REQUIRED
+                        PURPOSE "Needed to build to File Search KCM"
+                        )
+endif()
 
 find_package(Fontconfig)
 set_package_properties(Fontconfig PROPERTIES DESCRIPTION "Font access configuration library"
@@ -95,38 +99,42 @@ set_package_properties(Fontconfig PROPERTIES DESCRIPTION "Font access configurat
                        PURPOSE "Needed to build font configuration and installation tools"
                       )
 
-find_package(X11)
-set_package_properties(X11 PROPERTIES DESCRIPTION "X11 libraries"
-                        URL "http://www.x.org"
-                        TYPE REQUIRED
-                        PURPOSE "Required for building the X11 based workspace"
-                      )
+if(NOT APPLE)
+    find_package(X11)
+    set_package_properties(X11 PROPERTIES DESCRIPTION "X11 libraries"
+                            URL "http://www.x.org"
+                            TYPE REQUIRED
+                            PURPOSE "Required for building the X11 based workspace"
+                        )
 
-find_package(UDev)
-set_package_properties(UDev PROPERTIES DESCRIPTION "UDev library"
-                        URL "http://www.kernel.org/pub/linux/utils/kernel/hotplug/udev.html"
-                        TYPE OPTIONAL
-                        PURPOSE "Required for device discovery in keyboard daemon"
-                      )
+    find_package(UDev)
+    set_package_properties(UDev PROPERTIES DESCRIPTION "UDev library"
+                            URL "http://www.kernel.org/pub/linux/utils/kernel/hotplug/udev.html"
+                            TYPE OPTIONAL
+                            PURPOSE "Required for device discovery in keyboard daemon"
+                        )
 
-find_package(XCB
-    REQUIRED COMPONENTS
-        XCB SHM IMAGE
-    OPTIONAL_COMPONENTS
-        XKB XINPUT
-)
-set_package_properties(XCB PROPERTIES TYPE REQUIRED)
-add_feature_info("XCB-XKB" XCB_XKB_FOUND "Required for building kcm/keyboard")
-add_feature_info("libxft" X11_Xft_FOUND "X FreeType interface library required for font installation")
-
-find_package(Evdev)
-set_package_properties(Evdev PROPERTIES TYPE OPTIONAL)
-add_feature_info("Evdev" EVDEV_FOUND "Evdev driver headers needed for input KCM")
-
-find_package(Synaptics)
-set_package_properties(Synaptics PROPERTIES TYPE OPTIONAL)
-add_feature_info("Synaptics" SYNAPTICS_FOUND "Synaptics libraries needed for touchpad KCM")
-include(ConfigureChecks.cmake)
+    find_package(XCB
+        REQUIRED COMPONENTS
+            XCB SHM IMAGE
+        OPTIONAL_COMPONENTS
+            XKB XINPUT
+    )
+    set_package_properties(XCB PROPERTIES TYPE REQUIRED)
+    add_feature_info("XCB-XKB" XCB_XKB_FOUND "Required for building kcm/keyboard")
+    add_feature_info("libxft" X11_Xft_FOUND "X FreeType interface library required for font installation")
+
+    find_package(Evdev)
+    set_package_properties(Evdev PROPERTIES TYPE OPTIONAL)
+    add_feature_info("Evdev" EVDEV_FOUND "Evdev driver headers needed for input KCM")
+
+    find_package(Synaptics)
+    set_package_properties(Synaptics PROPERTIES TYPE OPTIONAL)
+    add_feature_info("Synaptics" SYNAPTICS_FOUND "Synaptics libraries needed for touchpad KCM")
+    include(ConfigureChecks.cmake)
+else()
+    set(X11_FOUND 0)
+endif()
 
 if(${Qt5Gui_OPENGL_IMPLEMENTATION} STREQUAL "GL")
     find_package(OpenGL)
diff --git a/kcms/CMakeLists.txt b/kcms/CMakeLists.txt
index bfe8173..5772054 100644
--- a/kcms/CMakeLists.txt
+++ b/kcms/CMakeLists.txt
@@ -18,8 +18,12 @@ if (EVDEV_FOUND AND X11_Xinput_FOUND)
     add_subdirectory( input )
 endif()
 
-add_subdirectory( access )
-add_subdirectory( dateandtime )
+if(HAVE_X11)
+    add_subdirectory( access )
+endif()
+if(NOT APPLE)
+    add_subdirectory( dateandtime )
+endif()
 if(PLASMA_DESKTOP_BUILD_ALL)
     add_subdirectory( autostart )
     add_subdirectory( ksplash )
@@ -29,7 +33,9 @@ endif()
 add_subdirectory( colors )
 add_subdirectory( krdb )
 add_subdirectory( style )
-add_subdirectory( desktoptheme )
+if(NOT APPLE)
+    add_subdirectory( desktoptheme )
+endif()
 add_subdirectory( standard_actions )
 add_subdirectory( keys )
 if(PLASMA_DESKTOP_BUILD_ALL)
@@ -37,8 +43,10 @@ if(PLASMA_DESKTOP_BUILD_ALL)
 endif()
 add_subdirectory( lookandfeel )
 
-add_subdirectory( hardware )
-add_subdirectory( desktoppaths )
+if(NOT APPLE)
+    add_subdirectory( hardware )
+    add_subdirectory( desktoppaths )
+endif()
 
 add_subdirectory(activities)
 add_subdirectory(componentchooser)
@@ -50,18 +58,20 @@ add_subdirectory(formats)
 add_subdirectory(translations)
 add_subdirectory(spellchecking)
 add_subdirectory(phonon)
-add_subdirectory(runners)
-# useraccount replaced by user-manager for now
-#add_subdirectory(useraccount)
+if(NOT APPLE)
+    add_subdirectory(runners)
+    # useraccount replaced by user-manager for now
+    #add_subdirectory(useraccount)
 
-#yet the icons still need installing
-add_subdirectory(useraccount/pics)
+    #yet the icons still need installing
+    add_subdirectory(useraccount/pics)
 
 
-add_subdirectory(workspaceoptions)
-add_subdirectory(baloo)
-add_subdirectory(solid_actions)
-add_subdirectory(cursortheme)
+    add_subdirectory(workspaceoptions)
+    add_subdirectory(baloo)
+    add_subdirectory(solid_actions)
+    add_subdirectory(cursortheme)
+endif()
 
 if (SYNAPTICS_FOUND AND X11_Xinput_FOUND)
     add_subdirectory(touchpad)
diff --git a/kcms/componentchooser/CMakeLists.txt b/kcms/componentchooser/CMakeLists.txt
index ba55dd6..5a8db2f 100644
--- a/kcms/componentchooser/CMakeLists.txt
+++ b/kcms/componentchooser/CMakeLists.txt
@@ -2,7 +2,9 @@
 add_definitions(-DTRANSLATION_DOMAIN=\"kcmcomponentchooser\")
 
 add_subdirectory( componentservices ) 
-add_subdirectory( windowmanagers ) 
+if(X11_FOUND)
+    add_subdirectory( windowmanagers ) 
+endif()
 
 
 
@@ -14,20 +16,31 @@ set(kcm_componentchooser_SRCS
   componentchooserfilemanager.cpp
   componentchooseremail.cpp
   componentchooserterminal.cpp
-  componentchooserwm.cpp
   kcm_componentchooser.cpp
   ktimerdialog.cpp
 )
-
-ki18n_wrap_ui(kcm_componentchooser_SRCS
-  browserconfig_ui.ui
-  filemanagerconfig_ui.ui
-  emailclientconfig_ui.ui
-  componentchooser_ui.ui
-  componentconfig_ui.ui
-  terminalemulatorconfig_ui.ui
-  wmconfig_ui.ui
-)
+if(X11_FOUND)
+    set(kcm_componentchooser_SRCS componentchooserwm.cpp)
+    ki18n_wrap_ui(kcm_componentchooser_SRCS
+        browserconfig_ui.ui
+        filemanagerconfig_ui.ui
+        emailclientconfig_ui.ui
+        componentchooser_ui.ui
+        componentconfig_ui.ui
+        terminalemulatorconfig_ui.ui
+        wmconfig_ui.ui
+    )
+else()
+    ki18n_wrap_ui(kcm_componentchooser_SRCS
+        browserconfig_ui.ui
+        filemanagerconfig_ui.ui
+        emailclientconfig_ui.ui
+        componentchooser_ui.ui
+        componentconfig_ui.ui
+        terminalemulatorconfig_ui.ui
+        wmconfig_ui.ui
+    )
+endif()
 
 add_library(kcm_componentchooser MODULE ${kcm_componentchooser_SRCS})
 
@@ -35,8 +48,10 @@ add_library(kcm_componentchooser MODULE ${kcm_componentchooser_SRCS})
 
 target_link_libraries(kcm_componentchooser
                       KF5::KDELibs4Support
-                      Qt5::X11Extras
                       )
+if(X11_FOUND)
+    target_link_libraries(kcm_componentchooser Qt5::X11Extras)
+endif()
 
 install(TARGETS kcm_componentchooser  DESTINATION ${PLUGIN_INSTALL_DIR} )
 
diff --git a/kcms/componentchooser/componentchooser.cpp b/kcms/componentchooser/componentchooser.cpp
index 65b4ac8..5a5e5d1 100644
--- a/kcms/componentchooser/componentchooser.cpp
+++ b/kcms/componentchooser/componentchooser.cpp
@@ -21,8 +21,8 @@
 #ifdef Q_OS_UNIX
 #include "componentchooserterminal.h"
 #endif
-#include <config-X11.h>
 #if HAVE_X11
+#include <config-X11.h>
 #include "componentchooserwm.h"
 #endif
 
diff --git a/kcms/krdb/CMakeLists.txt b/kcms/krdb/CMakeLists.txt
index 3c89539..e5d167b 100644
--- a/kcms/krdb/CMakeLists.txt
+++ b/kcms/krdb/CMakeLists.txt
@@ -7,5 +7,6 @@ add_subdirectory( pics )
 install(FILES krdb_libpathwipe.upd DESTINATION ${DATA_INSTALL_DIR}/kconf_update)
 
 add_executable(krdb_clearlibrarypath krdb_clearlibrarypath.cpp)
+ecm_mark_nongui_executable(krdb_clearlibrarypath)
 target_link_libraries(krdb_clearlibrarypath Qt5::Core KF5::KDELibs4Support)
 install(TARGETS krdb_clearlibrarypath DESTINATION ${LIB_INSTALL_DIR}/kconf_update_bin)
diff --git a/kcms/lookandfeel/CMakeLists.txt b/kcms/lookandfeel/CMakeLists.txt
index 5021005..0819def 100644
--- a/kcms/lookandfeel/CMakeLists.txt
+++ b/kcms/lookandfeel/CMakeLists.txt
@@ -7,9 +7,13 @@ configure_file (config-kcm.h.cmake ${CMAKE_CURRENT_BINARY_DIR}/config-kcm.h )
 set(kcm_lookandfeel_SRCS
   kcm.cpp
   ../krdb/krdb.cpp
-  ../cursortheme/xcursor/cursortheme.cpp
-  ../cursortheme/xcursor/xcursortheme.cpp
 )
+if(X11_FOUND)
+    set(kcm_lookandfeel_SRCS
+    ../cursortheme/xcursor/cursortheme.cpp
+    ../cursortheme/xcursor/xcursortheme.cpp
+    )
+endif()
 
 set(klauncher_xml ${KINIT_DBUS_INTERFACES_DIR}/kf5_org.kde.KLauncher.xml)
 qt5_add_dbus_interface(kcm_lookandfeel_SRCS ${klauncher_xml} klauncher_iface)
diff --git a/kcms/lookandfeel/autotests/CMakeLists.txt b/kcms/lookandfeel/autotests/CMakeLists.txt
index 8507464..605af0b 100644
--- a/kcms/lookandfeel/autotests/CMakeLists.txt
+++ b/kcms/lookandfeel/autotests/CMakeLists.txt
@@ -6,9 +6,13 @@ set( kcmTest_SRCS
      kcmtest.cpp
      ../kcm.cpp
      ../../krdb/krdb.cpp
-     ../../cursortheme/xcursor/cursortheme.cpp
-     ../../cursortheme/xcursor/xcursortheme.cpp
 )
+if(X11_FOUND)
+    set( kcmTest_SRCS
+        ../../cursortheme/xcursor/cursortheme.cpp
+        ../../cursortheme/xcursor/xcursortheme.cpp
+    )
+endif()
 
 set(klauncher_xml ${KINIT_DBUS_INTERFACES_DIR}/kf5_org.kde.KLauncher.xml)
 qt5_add_dbus_interface(kcmTest_SRCS ${klauncher_xml} klauncher_iface)
diff --git a/kcms/lookandfeel/kcm.cpp b/kcms/lookandfeel/kcm.cpp
index bfdcc3f..a0b9418 100644
--- a/kcms/lookandfeel/kcm.cpp
+++ b/kcms/lookandfeel/kcm.cpp
@@ -42,17 +42,21 @@
 #include <QQmlEngine>
 #include <QQmlContext>
 #include <QStandardItemModel>
+#if HAVE_X11
 #include <QX11Info>
+#endif
 
 #include <KLocalizedString>
 #include <Plasma/PluginLoader>
 
+#if HAVE_X11
 #include <X11/Xlib.h>
 #include <X11/Xcursor/Xcursor.h>
 
 #ifdef HAVE_XFIXES
 #  include <X11/extensions/Xfixes.h>
 #endif
+#endif
 
 K_PLUGIN_FACTORY_WITH_JSON(KCMLookandFeelFactory, "kcm_lookandfeel.json", registerPlugin<KCMLookandFeel>();)
 
@@ -371,6 +375,7 @@ void KCMLookandFeel::setPlasmaTheme(const QString &theme)
 
 void KCMLookandFeel::setCursorTheme(const QString themeName)
 {
+#if HAVE_X11
     //TODO: use pieces of cursor kcm when moved to plasma-desktop
     if (themeName.isEmpty()) {
         return;
@@ -438,6 +443,9 @@ void KCMLookandFeel::setCursorTheme(const QString themeName)
                                  i18n("You have to restart KDE for cursor changes to take effect."),
                                  i18n("Cursor Settings Changed"), "CursorSettingsChanged");
 #endif
+#else
+    return;
+#endif
 }
 
 QDir KCMLookandFeel::cursorThemeDir(const QString &theme, const int depth)
@@ -488,6 +496,7 @@ QDir KCMLookandFeel::cursorThemeDir(const QString &theme, const int depth)
 
 const QStringList KCMLookandFeel::cursorSearchPaths()
 {
+#if HAVE_X11
     if (!m_cursorSearchPaths.isEmpty())
         return m_cursorSearchPaths;
 
@@ -520,6 +529,7 @@ const QStringList KCMLookandFeel::cursorSearchPaths()
 
     // Expand all occurrences of ~/ to the home dir
     m_cursorSearchPaths.replaceInStrings(QRegExp(QStringLiteral("^~\\/")), QDir::home().path() + '/');
+#endif
     return m_cursorSearchPaths;
 }
 
diff --git a/kcms/style/CMakeLists.txt b/kcms/style/CMakeLists.txt
index afd603b..b5f88d3 100644
--- a/kcms/style/CMakeLists.txt
+++ b/kcms/style/CMakeLists.txt
@@ -13,7 +13,6 @@ ki18n_wrap_ui(kcm_style_PART_SRCS stylepreview.ui finetuning.ui)
 add_library(kcm_style MODULE ${kcm_style_PART_SRCS})
 
 target_link_libraries(kcm_style
-    Qt5::X11Extras
     Qt5::DBus
     KF5::KCMUtils
     KF5::Completion
@@ -24,6 +23,9 @@ target_link_libraries(kcm_style
     KF5::KDELibs4Support
     KF5::NewStuff
 )
+if(NOT APPLE)
+    target_link_libraries(kcm_style Qt5::X11Extras)
+endif()
 
 install(TARGETS kcm_style  DESTINATION ${PLUGIN_INSTALL_DIR})
 
diff --git a/knetattach/CMakeLists.txt b/knetattach/CMakeLists.txt
index ab56962..087ad7e 100644
--- a/knetattach/CMakeLists.txt
+++ b/knetattach/CMakeLists.txt
@@ -6,6 +6,7 @@ ki18n_wrap_ui(knetattach_SRCS knetattach.ui )
 # kde4_add_app_icon(knetattach_SRCS "${CMAKE_CURRENT_SOURCE_DIR}/hi*-app-knetattach.png")
 
 add_executable(knetattach ${knetattach_SRCS})
+ecm_mark_nongui_executable(knetattach)
 
 target_compile_definitions(knetattach PRIVATE -DPROJECT_VERSION="${PROJECT_VERSION}")
 
