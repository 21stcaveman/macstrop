diff --git drkonqi/CMakeLists.txt drkonqi/CMakeLists.txt
index eaeaad4..0353ca4 100644
--- drkonqi/CMakeLists.txt
+++ drkonqi/CMakeLists.txt
@@ -82,6 +82,7 @@ ki18n_wrap_ui(drkonqi_SRCS
 )
 
 add_executable(drkonqi ${drkonqi_SRCS})
+ecm_mark_nongui_executable(drkonqi)
 
 target_compile_definitions(drkonqi PRIVATE -DPROJECT_VERSION="${PROJECT_VERSION}")
 
diff --git drkonqi/bugzillaintegration/bugzillalib.cpp drkonqi/bugzillaintegration/bugzillalib.cpp
index 802c5fb..70bd3eb 100644
--- drkonqi/bugzillaintegration/bugzillalib.cpp
+++ drkonqi/bugzillaintegration/bugzillalib.cpp
@@ -145,7 +145,7 @@ void BugzillaManager::callBugzilla(const char* method, const char* id,
     m_xmlRpcClient->call(QLatin1String(method), args,
             this, SLOT(callMessage(QList<QVariant>,QVariant)),
             this, SLOT(callFault(int,QString,QVariant)),
-            QString::fromAscii(id));
+            QLatin1String(id));
 }
 // END Generic call to Bugzilla
 
@@ -246,7 +246,7 @@ void BugzillaManager::attachTextToReport(const QString & text, const QString & f
     args.insert(QLatin1String("file_name"), filename);
     args.insert(QLatin1String("summary"), summary);
     args.insert(QLatin1String("comment"), comment);
-    args.insert(QLatin1String("content_type"), QString::fromAscii("text/plain"));
+    args.insert(QLatin1String("content_type"), QLatin1String("text/plain"));
 
     //data needs to be a QByteArray so that it is encoded in base64 (query.cpp:246)
     args.insert(QLatin1String("data"), text.toUtf8());
diff --git drkonqi/bugzillaintegration/reportassistantpages_bugzilla.cpp drkonqi/bugzillaintegration/reportassistantpages_bugzilla.cpp
index e60fb14..03f69f7 100644
--- drkonqi/bugzillaintegration/reportassistantpages_bugzilla.cpp
+++ drkonqi/bugzillaintegration/reportassistantpages_bugzilla.cpp
@@ -841,7 +841,7 @@ UnhandledErrorDialog::UnhandledErrorDialog(QWidget * parent, const QString & err
 void UnhandledErrorDialog::saveErrorMessage()
 {
     QString defaultName = QLatin1String("drkonqi-unhandled-bugzilla-error.html");
-    QWeakPointer<QFileDialog> dlg = new QFileDialog(this);
+    QWeakPointer<QFileDialog> dlg = QSharedPointer<QFileDialog>(new QFileDialog(this));
     dlg.data()->selectFile(defaultName);
     dlg.data()->setWindowTitle(i18nc("@title:window","Select Filename"));
     dlg.data()->setAcceptMode(QFileDialog::AcceptSave);
diff --git drkonqi/bugzillaintegration/reportassistantpages_bugzilla_duplicates.cpp drkonqi/bugzillaintegration/reportassistantpages_bugzilla_duplicates.cpp
index 4f8f4ea..6a4b44f 100644
--- drkonqi/bugzillaintegration/reportassistantpages_bugzilla_duplicates.cpp
+++ drkonqi/bugzillaintegration/reportassistantpages_bugzilla_duplicates.cpp
@@ -57,8 +57,8 @@ BugzillaDuplicatesPage::BugzillaDuplicatesPage(ReportAssistantDialog * parent):
     connect(ui.m_bugListWidget, &QTreeWidget::itemSelectionChanged, this, &BugzillaDuplicatesPage::itemSelectionChanged);
 
     QHeaderView * header = ui.m_bugListWidget->header();
-    header->setResizeMode(0, QHeaderView::ResizeToContents);
-    header->setResizeMode(1, QHeaderView::Interactive);
+    header->setSectionResizeMode(0, QHeaderView::ResizeToContents);
+    header->setSectionResizeMode(1, QHeaderView::Interactive);
 
     //Create manual bug report entry (first one)
     QTreeWidgetItem * customBugItem = new QTreeWidgetItem(
@@ -464,7 +464,7 @@ void BugzillaDuplicatesPage::itemClicked(QTreeWidgetItem * item, int col)
     int bugNumber = 0;
     if (item->data(0, Qt::UserRole) == QLatin1String("custom")) {
         bool ok = false;
-        bugNumber = QInputDialog::getInteger(this,
+        bugNumber = QInputDialog::getInt(this,
                     i18nc("@title:window", "Enter a custom bug report number"),
                     i18nc("@label", "Enter the number of the bug report you want to check"),
                     0, 0, 1000000, 1, &ok);
diff --git drkonqi/drkonqi.cpp drkonqi/drkonqi.cpp
index b12c118..c2e223b 100644
--- drkonqi/drkonqi.cpp
+++ drkonqi/drkonqi.cpp
@@ -166,7 +166,7 @@ void DrKonqi::saveReport(const QString & reportText, QWidget *parent)
     } else {
         QString defname = getSuggestedKCrashFilename(crashedApplication());
 
-        QWeakPointer<QFileDialog> dlg = new QFileDialog(parent, defname);
+        QWeakPointer<QFileDialog> dlg = QSharedPointer<QFileDialog>(new QFileDialog(parent, defname));
         dlg.data()->selectFile(defname);
         dlg.data()->setWindowTitle(i18nc("@title:window","Select Filename"));
         dlg.data()->setAcceptMode(QFileDialog::AcceptSave);
