diff --git a/CMakeLists.txt b/CMakeLists.txt
index b95f72fc2bffa51826433429d1c03b112cba3aec..a133a4fbaaf06602f3549ec2633ea6b1a13a05c4 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -9,9 +9,9 @@ set (RELEASE_SERVICE_VERSION "${RELEASE_SERVICE_VERSION_MAJOR}.${RELEASE_SERVICE
 # minimal requirements
 cmake_minimum_required (VERSION 3.0 FATAL_ERROR)
 # Qt 5.12 LTS EOL May 2021
-set (QT_MIN_VERSION "5.12.0")
+set (QT_MIN_VERSION "5.9.8")
 
-set (KF5_MIN_VERSION "5.69.0")
+set (KF5_MIN_VERSION "5.60.0")
 
 # Release script will create bugzilla versions
 project(konsole VERSION ${RELEASE_SERVICE_VERSION})
diff --git a/src/widgets/TerminalDisplay.cpp b/src/widgets/TerminalDisplay.cpp
index 03356144bcce56dc4cac502c9ebfb14d75308080..befd3bae0c112d6d680b8f20358208f7a3ad8e8b 100644
--- a/src/widgets/TerminalDisplay.cpp
+++ b/src/widgets/TerminalDisplay.cpp
@@ -241,13 +241,13 @@ void TerminalDisplay::fontChange(const QFont&)
     // "Base character width on widest ASCII character. This prevents too wide
     //  characters in the presence of double wide (e.g. Japanese) characters."
     // Get the width from representative normal width characters
-    _fontWidth = qRound((static_cast<double>(fm.horizontalAdvance(QStringLiteral(REPCHAR))) / static_cast<double>(qstrlen(REPCHAR))));
+    _fontWidth = qRound((static_cast<double>(fm.width(QStringLiteral(REPCHAR))) / static_cast<double>(qstrlen(REPCHAR))));
 
     _fixedFont = true;
 
-    const int fw = fm.horizontalAdvance(QLatin1Char(REPCHAR[0]));
+    const int fw = fm.width(QLatin1Char(REPCHAR[0]));
     for (unsigned int i = 1; i < qstrlen(REPCHAR); i++) {
-        if (fw != fm.horizontalAdvance(QLatin1Char(REPCHAR[i]))) {
+        if (fw != fm.width(QLatin1Char(REPCHAR[i]))) {
             _fixedFont = false;
             break;
         }
diff --git a/src/LabelsAligner.h b/src/LabelsAligner.h
index c3954ebc0fcbd4acdffe1c1744fa30aa252e4a19..d91676a80f180f37936ef9d7157a593b4c904718 100644
--- a/src/LabelsAligner.h
+++ b/src/LabelsAligner.h
@@ -22,10 +22,10 @@
 #define LABELSALIGNER_H
 
 #include <QObject>
+#include <QVector>
 
 class QWidget;
 class QGridLayout;
-template<typename T> class QVector;
 
 namespace Konsole
 {
commit ac8799ba587e50cd68e4c676f990274c22e41280
Author: Nicolas Fella <nicolas.fella@gmx.de>
Date:   Wed Aug 12 22:43:41 2020 +0200

    Port away from KToolInvocation::kdeinitExec
    
    See https://phabricator.kde.org/T12185

diff --git b/src/session/SessionController.cpp a/src/session/SessionController.cpp
index a15dd032..ee63eaaa 100644
--- b/src/session/SessionController.cpp
+++ a/src/session/SessionController.cpp
@@ -43,6 +43,7 @@
 #include <KMessageBox>
 #include <KRun>
 #include <KShell>
+#include <KToolInvocation>
 #include <KToggleAction>
 #include <KSelectAction>
 #include <KXmlGuiWindow>
@@ -54,7 +55,6 @@
 #include <KConfigGroup>
 #include <KCodecAction>
 #include <KNotification>
-#include <KIO/CommandLauncherJob>
 
 // Konsole
 #include "CopyInputDialog.h"
@@ -541,8 +541,7 @@ void SessionController::handleWebShortcutAction()
 
 void SessionController::configureWebShortcuts()
 {
-    auto job = new KIO::CommandLauncherJob(QStringLiteral("kcmshell5"), { QStringLiteral("webshortcuts") });
-    job->start();
+    KToolInvocation::kdeinitExec(QStringLiteral("kcmshell5"), { QStringLiteral("webshortcuts") });
 }
 
 void SessionController::sendSignal(QAction* action)
