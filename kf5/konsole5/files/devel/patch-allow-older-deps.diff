diff --git a/CMakeLists.txt b/CMakeLists.txt
index 508003865e6ab5cd02a15dbc37867447dca84984..88a6cbc8efb3d1e3f23202f6851f7d69a9c317b2 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -9,7 +9,7 @@ set (RELEASE_SERVICE_VERSION "${RELEASE_SERVICE_VERSION_MAJOR}.${RELEASE_SERVICE
 # minimal requirements
 cmake_minimum_required (VERSION 3.0 FATAL_ERROR)
 # Qt 5.12 LTS EOL May 2021
-set (QT_MIN_VERSION "5.12.0")
+set (QT_MIN_VERSION "5.9.8")
 
 # The exact version required is not known ATM
 set (KF5_MIN_VERSION "5.6.0")

diff --git a/src/TerminalDisplay.cpp b/src/TerminalDisplay.cpp
index 03356144bcce56dc4cac502c9ebfb14d75308080..befd3bae0c112d6d680b8f20358208f7a3ad8e8b 100644
--- a/src/TerminalDisplay.cpp
+++ b/src/TerminalDisplay.cpp
@@ -241,13 +241,13 @@ void TerminalDisplay::fontChange(const QFont&)
     // "Base character width on widest ASCII character. This prevents too wide
     //  characters in the presence of double wide (e.g. Japanese) characters."
     // Get the width from representative normal width characters
-    _fontWidth = qRound((static_cast<double>(fm.horizontalAdvance(QStringLiteral(REPCHAR))) / static_cast<double>(qstrlen(REPCHAR))));
+    _fontWidth = qRound((static_cast<double>(fm.width(QStringLiteral(REPCHAR))) / static_cast<double>(qstrlen(REPCHAR))));
 
     _fixedFont = true;
 
-    const int fw = fm.horizontalAdvance(QLatin1Char(REPCHAR[0]));
+    const int fw = fm.width(QLatin1Char(REPCHAR[0]));
     for (unsigned int i = 1; i < qstrlen(REPCHAR); i++) {
-        if (fw != fm.horizontalAdvance(QLatin1Char(REPCHAR[i]))) {
+        if (fw != fm.width(QLatin1Char(REPCHAR[i]))) {
             _fixedFont = false;
             break;
         }
