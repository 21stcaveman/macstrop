diff --git src/ViewSplitter.cpp src/ViewSplitter.cpp
index 4d78d2be9056f79debb6459ad3bb12caf0356144..00af72f5dda1bfa12db4998361376f019f84c83a 100644
--- src/ViewSplitter.cpp
+++ src/ViewSplitter.cpp
@@ -37,6 +37,17 @@ ViewSplitter::ViewSplitter(QWidget *parent) :
 {
 }
 
+ViewSplitter::~ViewSplitter()
+{
+    // unregister all containers now, to prevent crashing when they
+    // are deleted later on (being our children) and then send us the
+    // destroyed signal to be unregistered. By then we can no longer 
+    // be certain if _containers is still valid.
+    foreach (const auto container, _containers) {
+        unregisterContainer(container);
+    }
+}
+
 void ViewSplitter::childEmpty(ViewSplitter *splitter)
 {
     delete splitter;
@@ -88,14 +99,9 @@ ViewSplitter *ViewSplitter::activeSplitter()
 void ViewSplitter::registerContainer(TabbedViewContainer *container)
 {
     _containers << container;
-    // Connecting to container::destroyed() using the new-style connection
-    // syntax causes a crash at exit. I don't know why. Using the old-style
-    // syntax works.
-    //connect(container , static_cast<void(ViewContainer::*)(ViewContainer*)>(&Konsole::ViewContainer::destroyed) , this , &Konsole::ViewSplitter::containerDestroyed);
-    //connect(container , &Konsole::ViewContainer::empty , this , &Konsole::ViewSplitter::containerEmpty);
-    connect(container, SIGNAL(destroyed(TabbedViewContainer*)), this,
-            SLOT(containerDestroyed(TabbedViewContainer*)));
-    connect(container, SIGNAL(empty(TabbedViewContainer*)), this, SLOT(containerEmpty(TabbedViewContainer*)));
+    connect(container, &Konsole::TabbedViewContainer::destroyed,
+            this , &Konsole::ViewSplitter::containerDestroyed);
+    connect(container , &Konsole::TabbedViewContainer::empty , this , &Konsole::ViewSplitter::containerEmpty);
 }
 
 void ViewSplitter::unregisterContainer(TabbedViewContainer *container)
@@ -191,8 +197,12 @@ void ViewSplitter::containerEmpty(TabbedViewContainer * /*container*/)
     }
 }
 
-void ViewSplitter::containerDestroyed(TabbedViewContainer *container)
+void ViewSplitter::containerDestroyed(QObject *object)
 {
+    TabbedViewContainer *container = qobject_cast<TabbedViewContainer*>(object);
+    if (!container) {
+        return;
+    }
     Q_ASSERT(_containers.contains(container));
 
     _containers.removeAll(container);
diff --git src/ViewSplitter.h src/ViewSplitter.h
index 7d7e7edb2bf0090e1b43654fcba0648fc1806693..d4a0f7d6f4416c169cffce8208af3a8276fed2b2 100644
--- src/ViewSplitter.h
+++ src/ViewSplitter.h
@@ -49,6 +49,7 @@ class ViewSplitter : public QSplitter
 
 public:
     explicit ViewSplitter(QWidget *parent = nullptr);
+    ~ViewSplitter() Q_DECL_OVERRIDE;
 
     /**
      * Locates the child ViewSplitter widget which currently has the focus
@@ -171,7 +172,7 @@ private:
 
 private Q_SLOTS:
     // Called to indicate that a child ViewContainer has been deleted
-    void containerDestroyed(TabbedViewContainer *container);
+    void containerDestroyed(QObject *container);
 
     // Called to indicate that a child ViewContainer is empty
     void containerEmpty(TabbedViewContainer *container);
