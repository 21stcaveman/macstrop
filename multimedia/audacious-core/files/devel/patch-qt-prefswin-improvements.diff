diff --git src/libaudqt/prefs-plugin.cc src/libaudqt/prefs-plugin.cc
index 03fa53d7f884da0687b3bc4da04afae01cabef0f..f4ccabbf550325b7e399cbf719c29fccb38dd3f1 100644
--- src/libaudqt/prefs-plugin.cc
+++ src/libaudqt/prefs-plugin.cc
@@ -110,6 +110,10 @@ EXPORT void plugin_prefs (PluginHandle * ph)
             p->cleanup ();
 
         cw->root = nullptr;
+        // make sure the main preferences window is still in front when we exit
+        // when we close (won't be the case on Mac).
+        // Assumes that we were always called from that dialog!
+        prefswin_show ();
     });
 
     const char * name = header->info.name;
diff --git src/libaudqt/prefs-pluginlist-model.cc src/libaudqt/prefs-pluginlist-model.cc
index 969cad76bf54447882acd0a4e58624fe3bdc99af..c8fba1b2462556566917584534d9cbe5c5cde973 100644
--- src/libaudqt/prefs-pluginlist-model.cc
+++ src/libaudqt/prefs-pluginlist-model.cc
@@ -154,14 +154,26 @@ QVariant PluginListModel::data (const QModelIndex & index, int role) const
         break;
 
     case AboutColumn:
-        if (role == Qt::DecorationRole && enabled && aud_plugin_has_about (p))
-            return QIcon::fromTheme ("dialog-information");
+        if (enabled && aud_plugin_has_about (p))
+        {
+            QIcon aboutIcon = QIcon::fromTheme ("dialog-information");
+            if (role == Qt::DecorationRole)
+                return aboutIcon;
+            else if (role == Qt::DisplayRole && aboutIcon.isNull())
+                return QString (_("About"));
+        }
 
         break;
 
     case SettingsColumn:
-        if (role == Qt::DecorationRole && enabled && aud_plugin_has_configure (p))
-            return QIcon::fromTheme ("preferences-system");
+        if (enabled && aud_plugin_has_configure (p))
+        {
+            QIcon prefsIcon = QIcon::fromTheme ("preferences-system");
+            if (role == Qt::DecorationRole)
+                return prefsIcon;
+            else if (role == Qt::DisplayRole && prefsIcon.isNull())
+                return QString (_("Settings"));
+        }
 
         break;
     }
diff --git src/libaudqt/prefs-window-qt.cc src/libaudqt/prefs-window-qt.cc
index 87f32ae2516af859516e7ca12b8c1909a8bccf6a..a7c907609c80cf8741913f5d9bff4006030a9c10 100644
--- src/libaudqt/prefs-window-qt.cc
+++ src/libaudqt/prefs-window-qt.cc
@@ -557,12 +557,16 @@ static void create_plugin_category (QStackedWidget * parent)
 
     s_plugin_view->setModel (s_plugin_model);
     s_plugin_view->setSelectionMode (QTreeView::NoSelection);
+    s_plugin_view->setFont (get_font_for_class ("QListView"));
+    s_plugin_view->setAlternatingRowColors (true);
 
     auto header = s_plugin_view->header ();
 
     header->hide ();
     header->setSectionResizeMode (header->ResizeToContents);
-    header->setStretchLastSection (false);
+    // stretch the last section so the QTreeView takes the entire
+    // width of its parent QStackedWidget.
+    header->setStretchLastSection (true);
 
     parent->addWidget (s_plugin_view);
 
