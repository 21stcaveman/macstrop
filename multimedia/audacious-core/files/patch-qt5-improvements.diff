--- src/libaudqt/orig.util.cc	2016-09-22 03:08:54.000000000 +0200
+++ src/libaudqt/util.cc	2018-01-13 22:49:33.000000000 +0100
@@ -22,6 +22,10 @@
 #include <QApplication>
 #include <QPushButton>
 #include <QVBoxLayout>
+#include <QDebug>
+#include <QStandardPaths>
+#include <QUrl>
+#include <QIcon>
 
 #include <libaudcore/audstrings.h>
 #include <libaudcore/i18n.h>
@@ -32,7 +36,41 @@
 namespace audqt {
 
 static int init_count;
-static QApplication * qapp;
+
+// wrap QApplication only so we can generate a debug trace
+class AudApplication : public QApplication
+{
+public:
+    AudApplication (int &argc, char **argv)
+        : QApplication (argc, argv)
+    {
+        setAttribute (Qt::AA_UseHighDpiPixmaps);
+#if QT_VERSION >= QT_VERSION_CHECK(5, 3, 0)
+        setAttribute (Qt::AA_ForceRasterWidgets);
+#endif
+
+        setApplicationName (_("Audacious"));
+        if (windowIcon().isNull()) {
+            // find the likely icon theme directory
+            QString iconsDir = QStandardPaths::locate(QStandardPaths::GenericDataLocation, QStringLiteral("icons"), QStandardPaths::LocateDirectory);
+            // load the scalable icon we installed ourselves (QIcon::fromTheme() won't do that)
+            QUrl appIconUrl(iconsDir + "/hicolor/scalable/apps/audacious.svg");
+            QIcon appIcon = QIcon(appIconUrl.url());
+            if (appIcon.isNull()) {
+                setWindowIcon (QIcon::fromTheme (argv[0]));
+            } else {
+                setWindowIcon (appIcon);
+            }
+        }
+        setQuitOnLastWindowClosed (true);
+    }
+    ~AudApplication()
+    {
+        qDebug() << Q_FUNC_INFO << "Destroying" << this;
+    }
+};
+
+static AudApplication * qapp;
 
 EXPORT void init ()
 {
@@ -43,16 +81,8 @@
     static int dummy_argc = 1;
     static char * dummy_argv[] = {app_name, nullptr};
 
-    qapp = new QApplication (dummy_argc, dummy_argv);
-    atexit ([] () { delete qapp; });
-
-    qapp->setAttribute (Qt::AA_UseHighDpiPixmaps);
-#if QT_VERSION >= QT_VERSION_CHECK(5, 3, 0)
-    qapp->setAttribute (Qt::AA_ForceRasterWidgets);
-#endif
+    qapp = new AudApplication (dummy_argc, dummy_argv);
 
-    qapp->setApplicationName (_("Audacious"));
-    qapp->setWindowIcon (QIcon::fromTheme (app_name));
 }
 
 EXPORT void run ()
@@ -76,6 +106,11 @@
     log_inspector_hide ();
     prefswin_hide ();
     queue_manager_hide ();
+    // we should delete the application instance here rather than allowing that
+    // to be done at some time outside our control during global destruction.
+    delete qapp;
+    // avoid leaving a stale global variable around
+    qapp = nullptr;
 }
 
 EXPORT void enable_layout (QLayout * layout, bool enabled)
