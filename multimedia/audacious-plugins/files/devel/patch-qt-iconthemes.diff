diff --git src/qtui/main_window.cc src/qtui/main_window.cc
index 4a16a657f25e45a2ef758d2e3db2dd015b324cea..8bae4829e24867cf3224955e2aa190655005c8f9 100644
--- src/qtui/main_window.cc
+++ src/qtui/main_window.cc
@@ -43,6 +43,7 @@
 #include <QMenuBar>
 #include <QSettings>
 #include <QToolButton>
+#include <QDebug>
 
 class PluginWidget : public QDockWidget
 {
@@ -95,13 +96,21 @@ MainWindow::MainWindow () :
     m_search_tool (aud_plugin_lookup_basename ("search-tool-qt")),
     m_playlist_manager (aud_plugin_lookup_basename ("playlist-manager-qt"))
 {
-#if defined(Q_OS_WIN32) || defined(Q_OS_MAC)
-    QIcon::setThemeName ("QtUi");
-
-    QStringList paths = QIcon::themeSearchPaths ();
-    paths.prepend (aud_get_path (AudPath::DataDir));
-    QIcon::setThemeSearchPaths (paths);
-#endif
+    // The icon theme and/or theme search paths may not be set (MSWin, Mac, non-Plasma desktops on Unix)
+    // Check, and if either is true set our theme and add its install location to the search path.
+    if (QIcon::themeName().isEmpty() || QIcon::themeSearchPaths().at(0) == QStringLiteral(":\icons")) {
+        qDebug() << Q_FUNC_INFO << "Icon theme:" << QIcon::themeName() << "searchpath" << QIcon::themeSearchPaths();
+        QIcon::setThemeName ("QtUi");
+
+        QStringList paths = QIcon::themeSearchPaths ();
+        // install our theme location as a fallback, leaving the door open
+        // to customise it. IOW, insert it just before the entry corresponding
+        // to the embedded resources.
+        int here = paths.size() - 1;
+        paths.insert (here, aud_get_path (AudPath::DataDir));
+        QIcon::setThemeSearchPaths (paths);
+        qDebug() << Q_FUNC_INFO << "New icon theme:" << QIcon::themeName() << "searchpath" << QIcon::themeSearchPaths();
+    }
 
     auto slider = new TimeSlider (this);
 
