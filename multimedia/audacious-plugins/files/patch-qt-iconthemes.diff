--- src/qtui/orig.main_window.cc	2018-01-14 13:49:11.250533778 +0100
+++ src/qtui/main_window.cc	2018-01-14 14:13:44.211641925 +0100
@@ -42,6 +42,7 @@
 #include <QLabel>
 #include <QSettings>
 #include <QToolButton>
+#include <QDebug>
 
 class PluginWidget : public QDockWidget
 {
@@ -75,13 +76,21 @@
     centralWidget (new QWidget (this)),
     centralLayout (new QVBoxLayout (centralWidget))
 {
-#if defined(Q_OS_WIN32) || defined(Q_OS_MAC)
-    QIcon::setThemeName ("QtUi");
-
-    QStringList paths = QIcon::themeSearchPaths ();
-    paths.prepend (aud_get_path (AudPath::DataDir));
-    QIcon::setThemeSearchPaths (paths);
-#endif
+    // The icon theme and/or theme search paths may not be set (MSWin, Mac, non-Plasma desktops on Unix)
+    // Check, and if either is true set our theme and add its install location to the search path.
+    if (QIcon::themeName().isEmpty() || QIcon::themeSearchPaths().at(0) == QStringLiteral(":\icons")) {
+        qDebug() << Q_FUNC_INFO << "Icon theme:" << QIcon::themeName() << "searchpath" << QIcon::themeSearchPaths();
+        QIcon::setThemeName ("QtUi");
+
+        QStringList paths = QIcon::themeSearchPaths ();
+        // install our theme location as a fallback, leaving the door open
+        // to customise it. IOW, insert it just before the entry corresponding
+        // to the embedded resources.
+        int here = paths.size() - 1;
+        paths.insert (here, aud_get_path (AudPath::DataDir));
+        QIcon::setThemeSearchPaths (paths);
+        qDebug() << Q_FUNC_INFO << "New icon theme:" << QIcon::themeName() << "searchpath" << QIcon::themeSearchPaths();
+    }
 
     int instance = aud_get_instance ();
     if (instance == 1)
