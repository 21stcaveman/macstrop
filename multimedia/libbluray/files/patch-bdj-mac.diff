--- src/libbluray/bdj/orig.bdj.c	2017-08-22 15:02:49.000000000 +0200
+++ src/libbluray/bdj/bdj.c	2017-08-22 17:02:52.000000000 +0200
@@ -219,6 +219,11 @@
 }
 #endif
 
+#ifdef __APPLE__
+#define MACOS_JRE_HOME "/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home"
+static const char *jre_plugin_path = MACOS_JRE_HOME;
+#endif
+
 #if defined(__APPLE__) && !defined(HAVE_BDJ_J2ME)
 
 #define MACOS_JAVA_HOME "/usr/libexec/java_home"
@@ -308,6 +313,7 @@
     const char *java_home = NULL;
     static const char jli_dir[] = "jre/lib/jli";
     static const char jli_lib[] = "libjli";
+    void *handle;
 
     /* JAVA_HOME set, use it */
     java_home = getenv("JAVA_HOME");
@@ -317,9 +323,13 @@
 
     java_home = _java_home_macos();
     if (java_home) {
-        return _jvm_dlopen(java_home, jli_dir, jli_lib);
+        handle = _jvm_dlopen(java_home, jli_dir, jli_lib);
+	   if (handle) {
+		   return handle;
+	   }
     }
-    return NULL;
+    // check if the JRE is installed; it ends up in the internet plugins repository:
+    return _jvm_dlopen(jre_plugin_path, "lib/jli", jli_lib);
 }
 #endif
 
@@ -342,7 +352,7 @@
     static const char  jvm_lib[]  = "jvm";
 # else
 #  ifdef __APPLE__
-    static const char *jvm_path[] = {NULL, JDK_HOME};
+    static const char *jvm_path[] = {NULL, JDK_HOME, MACOS_JRE_HOME};
     static const char  jvm_dir[]  = "jre/lib/server";
 #  else
     static const char *jvm_path[] = {NULL, JDK_HOME,
@@ -380,8 +390,17 @@
 #if defined(__APPLE__) && !defined(HAVE_BDJ_J2ME)
     java_home = _java_home_macos();
     if (java_home) {
-        *p_java_home = java_home;
-        return _jvm_dlopen(java_home, jvm_dir, jvm_lib);
+        handle = _jvm_dlopen(java_home, jvm_dir, jvm_lib);
+	   if (handle) {
+            *p_java_home = java_home;
+            return handle;
+	   }
+    }
+    // check if the JRE is installed; it ends up in the internet plugins repository:
+    handle = _jvm_dlopen(jre_plugin_path, "lib/server", jvm_lib);
+    if (handle) {
+        *p_java_home = jre_plugin_path;
+        return handle;
     }
 #endif
 
