diff --git a/src/gui/Main.cpp b/src/gui/Main.cpp
index a5773dc8..352daf14 100644
--- a/src/gui/Main.cpp
+++ b/src/gui/Main.cpp
@@ -540,7 +540,7 @@ int main(int argc, char *argv[])
 	}
 	if (!cmakeBuildFound)
 	{
-#if !defined Q_OS_WIN && !defined Q_OS_MAC && !defined Q_OS_ANDROID
+#if !defined Q_OS_WIN /*&& !defined Q_OS_MAC*/ && !defined Q_OS_ANDROID
 		sharePath = QCoreApplication::applicationDirPath() + "/../share/qmplay2";
 		libPath = QMPlay2CoreClass::getLibDir();
 		if (libPath.isEmpty() || !QDir(libPath).exists("qmplay2"))
@@ -554,9 +554,9 @@ int main(int argc, char *argv[])
 				libPath += "lib";
 		}
 		libPath += "/qmplay2";
-#elif defined Q_OS_MAC
-		libPath = QCoreApplication::applicationDirPath();
-		sharePath += "/../share/qmplay2";
+// #elif defined Q_OS_MAC
+// 		libPath = QCoreApplication::applicationDirPath();
+// 		sharePath += "/../share/qmplay2";
 #else
 		libPath = sharePath;
 #endif
diff --git a/src/gui/MainWidget.cpp b/src/gui/MainWidget.cpp
index b5910417..9ae2563b 100644
--- a/src/gui/MainWidget.cpp
+++ b/src/gui/MainWidget.cpp
@@ -164,7 +164,7 @@ MainWidget::MainWidget(QPair<QStringList, QStringList> &arguments)
 
 	QMPlay2GUI.menuBar = new MenuBar;
 
-#if !defined Q_OS_MAC && !defined Q_OS_ANDROID
+#if /*!defined Q_OS_MAC &&*/ !defined Q_OS_ANDROID
 	tray = new QSystemTrayIcon(this);
 	tray->setIcon(QMPlay2Core.getIconFromTheme("QMPlay2-panel", QMPlay2Core.getQMPlay2Icon()));
 	tray->setVisible(settings.getBool("TrayVisible", true));
@@ -328,7 +328,7 @@ MainWidget::MainWidget(QPair<QStringList, QStringList> &arguments)
 	if (settings.getBool("MainWidget/TabPositionNorth"))
 		setTabPosition(Qt::AllDockWidgetAreas, QTabWidget::North);
 
-#if !defined Q_OS_MAC && !defined Q_OS_ANDROID
+#if /*!defined Q_OS_MAC &&*/ !defined Q_OS_ANDROID
 	const bool menuHidden = settings.getBool("MainWidget/MenuHidden", false);
 	menuBar->setVisible(!menuHidden);
 	hideMenuAct = new QAction(tr("&Hide menu bar"), menuBar);
@@ -367,7 +367,7 @@ MainWidget::MainWidget(QPair<QStringList, QStringList> &arguments)
 		QMPlay2GUI.videoAdjustment->restoreValues();
 
 	fullScreenDockWidgetState = settings.getByteArray("MainWidget/FullScreenDockWidgetState");
-#if defined Q_OS_MAC || defined Q_OS_ANDROID
+#if /*defined Q_OS_MAC ||*/ defined Q_OS_ANDROID
 	show();
 #else
 	setVisible(settings.getBool("MainWidget/isVisible", true) ? true : !isTrayVisible());
@@ -848,7 +848,7 @@ void MainWidget::createMenuBar()
 	setMenuBar(menuBar);
 
 	QMenu *secondMenu = new QMenu(this);
-#ifndef Q_OS_MAC
+// #ifndef Q_OS_MAC
 	copyMenu(secondMenu, menuBar->window);
 	secondMenu->addMenu(menuBar->widgets);
 	copyMenu(secondMenu, menuBar->playlist, menuBar->playlist->extensions);
@@ -858,32 +858,32 @@ void MainWidget::createMenuBar()
 	copyMenu(secondMenu, menuBar->help);
 	if (tray)
 		tray->setContextMenu(secondMenu);
-#else //On OS X add only the most important menu actions to dock menu
-	secondMenu->addAction(menuBar->player->togglePlay);
-	secondMenu->addAction(menuBar->player->stop);
-	secondMenu->addAction(menuBar->player->next);
-	secondMenu->addAction(menuBar->player->prev);
-	secondMenu->addSeparator();
-	secondMenu->addAction(menuBar->player->toggleMute);
-	secondMenu->addSeparator();
-	// Copy action, because PreferencesRole doesn't show in dock menu.
-	QAction *settings = new QAction(menuBar->options->settings->icon(), menuBar->options->settings->text(), menuBar->options->settings->parent());
-	connect(settings, &QAction::triggered, menuBar->options->settings, &QAction::trigger);
-	secondMenu->addAction(settings);
-
-	QAction *newInstanceAct = new QAction(tr("New window"), secondMenu);
-	connect(newInstanceAct, &QAction::triggered, [] {
-		QProcess::startDetached(QCoreApplication::applicationFilePath(), {"-noplay"}, QCoreApplication::applicationDirPath());
-	});
-	secondMenu->addSeparator();
-	secondMenu->addAction(newInstanceAct);
-
-	qt_mac_set_dock_menu(secondMenu);
-#endif
+// #else //On OS X add only the most important menu actions to dock menu
+// 	secondMenu->addAction(menuBar->player->togglePlay);
+// 	secondMenu->addAction(menuBar->player->stop);
+// 	secondMenu->addAction(menuBar->player->next);
+// 	secondMenu->addAction(menuBar->player->prev);
+// 	secondMenu->addSeparator();
+// 	secondMenu->addAction(menuBar->player->toggleMute);
+// 	secondMenu->addSeparator();
+// 	// Copy action, because PreferencesRole doesn't show in dock menu.
+// 	QAction *settings = new QAction(menuBar->options->settings->icon(), menuBar->options->settings->text(), menuBar->options->settings->parent());
+// 	connect(settings, &QAction::triggered, menuBar->options->settings, &QAction::trigger);
+// 	secondMenu->addAction(settings);
+// 
+// 	QAction *newInstanceAct = new QAction(tr("New window"), secondMenu);
+// 	connect(newInstanceAct, &QAction::triggered, [] {
+// 		QProcess::startDetached(QCoreApplication::applicationFilePath(), {"-noplay"}, QCoreApplication::applicationDirPath());
+// 	});
+// 	secondMenu->addSeparator();
+// 	secondMenu->addAction(newInstanceAct);
+// 
+// 	qt_mac_set_dock_menu(secondMenu);
+// #endif
 }
 void MainWidget::trayIconClicked(QSystemTrayIcon::ActivationReason reason)
 {
-#if !defined Q_OS_MAC && !defined Q_OS_ANDROID
+#if /*!defined Q_OS_MAC &&*/ !defined Q_OS_ANDROID
 	switch (reason)
 	{
 		case QSystemTrayIcon::Trigger:
@@ -908,7 +908,7 @@ void MainWidget::toggleCompactView()
 
 		hideAllExtensions();
 
-#if !defined Q_OS_MAC && !defined Q_OS_ANDROID
+#if /*!defined Q_OS_MAC &&*/ !defined Q_OS_ANDROID
 		menuBar->hide();
 #endif
 		mainTB->hide();
@@ -931,7 +931,7 @@ void MainWidget::toggleCompactView()
 
 		videoDock->fullScreen(false);
 
-#if !defined Q_OS_MAC && !defined Q_OS_ANDROID
+#if /*!defined Q_OS_MAC &&*/ !defined Q_OS_ANDROID
 		menuBar->setVisible(!hideMenuAct->isChecked());
 #endif
 
@@ -968,7 +968,7 @@ void MainWidget::toggleFullScreen()
 		dockWidgetState = saveState();
 #endif // Q_OS_ANDROID
 
-#if !defined Q_OS_MAC && !defined Q_OS_ANDROID
+#if /*!defined Q_OS_MAC &&*/ !defined Q_OS_ANDROID
 		menuBar->hide();
 #endif
 		statusBar->hide();
@@ -997,9 +997,9 @@ void MainWidget::toggleFullScreen()
 		videoDock->fullScreen(true);
 		videoDock->show();
 
-#ifdef Q_OS_MAC
+// #ifdef Q_OS_MAC
 		menuBar->window->toggleVisibility->setEnabled(false);
-#endif
+// #endif
 		menuBar->window->toggleCompactView->setEnabled(false);
 		menuBar->window->toggleFullScreen->setShortcuts(QList<QKeySequence>() << menuBar->window->toggleFullScreen->shortcut() << QKeySequence("ESC"));
 		fullScreen = true;
@@ -1011,9 +1011,9 @@ void MainWidget::toggleFullScreen()
 	}
 	else
 	{
-#ifdef Q_OS_MAC
+// #ifdef Q_OS_MAC
 		menuBar->window->toggleVisibility->setEnabled(true);
-#endif
+// #endif
 		menuBar->window->toggleCompactView->setEnabled(true);
 		menuBar->window->toggleFullScreen->setShortcuts(QList<QKeySequence>() << menuBar->window->toggleFullScreen->shortcut());
 
@@ -1046,9 +1046,9 @@ void MainWidget::toggleFullScreen()
 			if (QDockWidget *dw = QMPlay2Ext->getDockWidget())
 				dw->setFeatures(QDockWidget::AllDockWidgetFeatures);
 
-#if !defined Q_OS_MAC && !defined Q_OS_ANDROID
+// #if !defined Q_OS_MAC && !defined Q_OS_ANDROID
 		menuBar->setVisible(!hideMenuAct->isChecked());
-#endif
+// #endif
 		statusBar->show();
 
 		mainTB->setMovable(tb_movable);
@@ -1239,7 +1239,7 @@ void MainWidget::about()
 	}
 }
 
-#if !defined Q_OS_MAC && !defined Q_OS_ANDROID
+// #if !defined Q_OS_MAC && !defined Q_OS_ANDROID
 void MainWidget::hideMenu(bool h)
 {
 	if (fullScreen || isCompactView)
@@ -1250,7 +1250,7 @@ void MainWidget::hideMenu(bool h)
 		QMPlay2Core.getSettings().set("MainWidget/MenuHidden", h);
 	}
 }
-#endif
+// #endif
 void MainWidget::lockWidgets(bool l)
 {
 	if (fullScreen || isCompactView)
@@ -1321,11 +1321,11 @@ QMenu *MainWidget::createPopupMenu()
 	QMenu *popupMenu = QMainWindow::createPopupMenu();
 	if (!fullScreen && !isCompactView)
 	{
-#if !defined Q_OS_MAC && !defined Q_OS_ANDROID
+// #if !defined Q_OS_MAC && !defined Q_OS_ANDROID
 		popupMenu->insertAction(popupMenu->actions().value(0), hideMenuAct);
 		popupMenu->insertSeparator(popupMenu->actions().value(1));
 		popupMenu->addSeparator();
-#endif
+// #endif
 		popupMenu->addAction(lockWidgetsAct);
 	}
 	for (QAction *act : popupMenu->actions())
@@ -1485,9 +1485,9 @@ void MainWidget::closeEvent(QCloseEvent *e)
 	else
 		settings.set("MainWidget/DockWidgetState", dockWidgetState);
 	settings.set("MainWidget/FullScreenDockWidgetState", fullScreenDockWidgetState);
-#ifndef Q_OS_MAC
+// #ifndef Q_OS_MAC
 	settings.set("MainWidget/isVisible", isVisible());
-#endif
+// #endif
 	if (tray)
 		settings.set("TrayVisible", tray->isVisible());
 	settings.set("VolumeL", volW->volumeL());
diff --git a/src/gui/MainWidget.hpp b/src/gui/MainWidget.hpp
index c0ab81e7..33484187 100644
--- a/src/gui/MainWidget.hpp
+++ b/src/gui/MainWidget.hpp
@@ -101,11 +101,11 @@ private slots:
 
 	void about();
 
-#if !defined Q_OS_MAC && !defined Q_OS_ANDROID
+// #if !defined Q_OS_MAC && !defined Q_OS_ANDROID
 	void hideMenu(bool);
-#else
-	void hideMenu(bool) {} //To avoid incorrect CPP file generated by MOC on Android
-#endif
+// #else
+// 	void hideMenu(bool) {} //To avoid incorrect CPP file generated by MOC on Android
+// #endif
 	void lockWidgets(bool);
 
 	void hideDocksSlot();
@@ -170,9 +170,9 @@ private:
 	AboutWidget *aboutW;
 	bool isCompactView, wasShow, fullScreen, seekSFocus;
 
-#if !defined Q_OS_MAC && !defined Q_OS_ANDROID
+// #if !defined Q_OS_MAC && !defined Q_OS_ANDROID
 	QAction *hideMenuAct;
-#endif
+// #endif
 	QAction *lockWidgetsAct;
 
 	Updater updater;
diff --git a/src/gui/SettingsWidget.cpp b/src/gui/SettingsWidget.cpp
index 6a3e3511..cc9069db 100644
--- a/src/gui/SettingsWidget.cpp
+++ b/src/gui/SettingsWidget.cpp
@@ -63,7 +63,7 @@
 #include "ui_SettingsPlayback.h"
 #include "ui_SettingsPlaybackModulesList.h"
 
-#if !defined(Q_OS_WIN) && !defined(Q_OS_MAC) && !defined(Q_OS_ANDROID)
+#if !defined(Q_OS_WIN) /*&& !defined(Q_OS_MAC) &&*/ !defined(Q_OS_ANDROID)
 	#define ICONS_FROM_THEME
 #endif
 
