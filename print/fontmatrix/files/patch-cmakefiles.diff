diff --git a/CMakeLists.txt b/CMakeLists.txt
index fee847b3b6539895f794af87c527a3b49dc9824b..4247dc60e21b39b3f4a819503e874d5f4f7761bb 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -10,17 +10,28 @@ SET (VERSION ${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH})
 ADD_DEFINITIONS(-DFONTMATRIX_VERSION_MAJOR=${VERSION_MAJOR} -DFONTMATRIX_VERSION_MINOR=${VERSION_MINOR} -DFONTMATRIX_VERSION_PATCH=${VERSION_PATCH})
 MESSAGE(STATUS "Building Fontmatrix ${VERSION}")
 
-
-IF(UNIX AND NOT APPLE)
+option(WANT_HARFBUZZ "Build Harbuzz shaper support" ON)
+option(WANT_ICU "Build ICU shaper support" ON)
+option(WANT_PODOFO "Build PoDoFo support for PDF files" ON)
+option(WANT_PYTHONQT "Build Python scripting support" ON)
+
+if(APPLE)
+    option(APPLE_STANDALONE_BUNDLE "Generate a standalone app bundle when building on Apple Mac" ON)
+    option(WANT_M17N "Build m17n shaper support" OFF)
+else()
+    option(WANT_M17N "Build m17n shaper support" ON)
+endif()
+
+IF(UNIX AND NOT APPLE_STANDALONE_BUNDLE)
 	SET (CMAKE_INSTALL_PREFIX /usr/local CACHE PATH "Installation path")
 	SET (FONTMATRIX_BIN bin )
 	SET (FONTMATRIX_QMDIR "share/fontmatrix/qm" )
-ENDIF(UNIX AND NOT APPLE)
+ENDIF(UNIX AND NOT APPLE_STANDALONE_BUNDLE)
 
 IF(APPLE)
 # 	SET (CMAKE_INSTALL_PREFIX /Applications CACHE PATH "Installation path")
 # 	SET (FONTMATRIX_BIN bin "")
-	set( CMAKE_OSX_ARCHITECTURES i386 )
+# 	set( CMAKE_OSX_ARCHITECTURES i386 )
 ENDIF(APPLE)
 
 IF(WIN32)
@@ -156,25 +167,26 @@ ENDIF(FREETYPE_FOUND)
 #>> FreeType2
 
 IF(WANT_PYTHONQT)
-	FIND_PACKAGE(PythonLibs REQUIRED)
-	if(PYTHONLIBS_FOUND)
+	FIND_PACKAGE(Python2 COMPONENTS Interpreter Development REQUIRED)
+	if(PYTHON2_FOUND)
 		MESSAGE(STATUS "Python Library Found OK")
-	else(PYTHONLIBS_FOUND)
+	else(PYTHON2_FOUND)
 		MESSAGE(FATAL_ERROR "No Python Library found")
-	endif(PYTHONLIBS_FOUND)
+	endif(PYTHON2_FOUND)
 	SET(PYTHONQT_INCLUDE_DIRS  ${CMAKE_SOURCE_DIR}/pythonqt/src)
 	ADD_SUBDIRECTORY(${PYTHONQT_INCLUDE_DIRS})
 	ADD_DEFINITIONS(-DHAVE_PYTHONQT)
 ENDIF(WANT_PYTHONQT)
 
-IF(UNIX AND NOT APPLE)
+IF(UNIX)
 	SET(FONTCONFIG_DIR ${CMAKE_MODULE_PATH})
-	FIND_PACKAGE(FONTCONFIG)
+# 	FIND_PACKAGE(FONTCONFIG)
+    find_package(Fontconfig)
 	IF(FONTCONFIG_FOUND)
 		MESSAGE(STATUS "FontConfig Found OK")
 		ADD_DEFINITIONS( -DHAVE_FONTCONFIG )
 	ENDIF(FONTCONFIG_FOUND)
-ENDIF(UNIX AND NOT APPLE)
+ENDIF(UNIX)
 
 
 SET(FM_TEMPLATES_FILES
@@ -216,6 +228,10 @@ ADD_SUBDIRECTORY(${HYPHENATE_DIR})
 SET(HYPHENATE_INCLUDE_DIR ${CMAKE_SOURCE_DIR}/${HYPHENATE_DIR})
 
 
+if(APPLE_STANDALONE_BUNDLE)
+    add_definitions("-DAPPLE_STANDALONE_BUNDLE")
+endif()
+
 
 ADD_SUBDIRECTORY(src)
 
@@ -225,7 +241,7 @@ ADD_SUBDIRECTORY(src)
 
 ######## Installation ##################
 
-IF(UNIX AND NOT APPLE)
+IF(UNIX AND NOT APPLE_STANDALONE_BUNDLE)
 	SET(DESKTOPDIR "share/applications/")
 	SET(MANDIR "share/man/")
 	SET(ICONDIR "share/icons/hicolor/48x48/apps/")
@@ -258,11 +274,11 @@ IF(UNIX AND NOT APPLE)
 	${FM_HELP_FILES}
 	DESTINATION "${HELPDIR}"
 	)
-ENDIF(UNIX AND NOT APPLE)
+ENDIF(UNIX AND NOT APPLE_STANDALONE_BUNDLE)
 
-IF(APPLE)
+IF(APPLE_STANDALONE_BUNDLE)
 # we do not "install" on apple’s OS
-ENDIF(APPLE)
+ENDIF(APPLE_STANDALONE_BUNDLE)
 
 IF(WIN32)
 	SET(RESOURCESDIR "share/resources/")
diff --git a/cmake/modules/FindFontconfig.cmake b/cmake/modules/FindFontconfig.cmake
new file mode 100644
index 0000000000000000000000000000000000000000..d95e46b4844b147a1a3016fee86eb94dda876384
--- /dev/null
+++ b/cmake/modules/FindFontconfig.cmake
@@ -0,0 +1,50 @@
+# - Try to find the  Fontconfig
+# Once done this will define
+#
+#  FONTCONFIG_FOUND - system has Fontconfig
+#  FONTCONFIG_INCLUDE_DIR - The include directory to use for the fontconfig headers
+#  FONTCONFIG_LIBRARIES - Link these to use FONTCONFIG
+#  FONTCONFIG_DEFINITIONS - Compiler switches required for using FONTCONFIG
+
+# Copyright (c) 2006,2007 Laurent Montel, <montel@kde.org>
+#
+# Redistribution and use is allowed according to the terms of the BSD license.
+# For details see the accompanying COPYING-CMAKE-SCRIPTS file.
+
+
+if (FONTCONFIG_LIBRARIES AND FONTCONFIG_INCLUDE_DIR)
+
+  # in cache already
+  set(FONTCONFIG_FOUND TRUE)
+
+else (FONTCONFIG_LIBRARIES AND FONTCONFIG_INCLUDE_DIR)
+
+  if (NOT WIN32)
+    # use pkg-config to get the directories and then use these values
+    # in the FIND_PATH() and FIND_LIBRARY() calls
+    find_package(PkgConfig)
+    pkg_check_modules(PC_FONTCONFIG QUIET fontconfig)
+
+    set(FONTCONFIG_DEFINITIONS ${PC_FONTCONFIG_CFLAGS_OTHER})
+  endif (NOT WIN32)
+
+  find_path(FONTCONFIG_INCLUDE_DIR fontconfig/fontconfig.h
+    PATHS
+    ${PC_FONTCONFIG_INCLUDEDIR}
+    ${PC_FONTCONFIG_INCLUDE_DIRS}
+    /usr/X11/include
+  )
+
+  find_library(FONTCONFIG_LIBRARIES NAMES fontconfig
+    PATHS
+    ${PC_FONTCONFIG_LIBDIR}
+    ${PC_FONTCONFIG_LIBRARY_DIRS}
+  )
+
+  include(FindPackageHandleStandardArgs)
+  find_package_handle_standard_args(Fontconfig DEFAULT_MSG FONTCONFIG_LIBRARIES FONTCONFIG_INCLUDE_DIR )
+
+  mark_as_advanced(FONTCONFIG_LIBRARIES FONTCONFIG_INCLUDE_DIR)
+
+endif (FONTCONFIG_LIBRARIES AND FONTCONFIG_INCLUDE_DIR)
+
diff --git a/cmake/modules/FindICU.cmake b/cmake/modules/FindICU.cmake
index 5b1b1bac0d8e50e680ad623252cfc74f710c9ead..4ace6ef5cbe33f11bc7eb47bbba9957d5fdbb1bc 100644
--- a/cmake/modules/FindICU.cmake
+++ b/cmake/modules/FindICU.cmake
@@ -20,6 +20,7 @@
 FIND_PATH(
 ICU_INCLUDE_DIR 
 NAMES layout/LayoutEngine.h
+PATH_SUFFIXES icu-le-hb
 DOC "Include directory for the ICU Layout library"
 )
 mark_as_advanced(ICU_INCLUDE_DIR)
@@ -28,7 +29,7 @@ mark_as_advanced(ICU_INCLUDE_DIR)
 # Look for the library.
 find_library(
   ICU_LIBRARY
-  NAMES icule cygicule cygicule32
+  NAMES icu-le-hb icule cygicule cygicule32
   DOC "Libraries to link against for the common parts of ICU")
 mark_as_advanced(ICU_LIBRARY)
 
@@ -47,9 +48,14 @@ find_library(
 mark_as_advanced(ICUUC_LIBRARY)
 
 # Copy the results to the output variables.
-if(ICU_INCLUDE_DIR AND ICU_LIBRARY AND ICUX_LIBRARY AND ICUUC_LIBRARY)
+if(ICU_INCLUDE_DIR AND ICUX_LIBRARY AND ICUUC_LIBRARY)
   set(ICU_FOUND 1)
-  set(ICU_LIBRARIES ${ICU_LIBRARY} ${ICUX_LIBRARY} ${ICUUC_LIBRARY})
+  if(ICU_LIBRARY)
+      set(ICU_LIBRARIES ${ICU_LIBRARY} ${ICUX_LIBRARY} ${ICUUC_LIBRARY})
+  else()
+      # libicule was removed in ICU 58
+      set(ICU_LIBRARIES ${ICUX_LIBRARY} ${ICUUC_LIBRARY})
+  endif()
   set(ICU_INCLUDE_DIRS ${ICU_INCLUDE_DIR})
 
   # Look for the ICU internationalization libraries
diff --git a/pythonqt/src/CMakeLists.txt b/pythonqt/src/CMakeLists.txt
index 8b8a2531672925ef781bf607a74a54f20c837586..cc11068b042e69ece923323df9948bf94fc0f26e 100644
--- a/pythonqt/src/CMakeLists.txt
+++ b/pythonqt/src/CMakeLists.txt
@@ -57,7 +57,7 @@ ${CMAKE_CURRENT_SOURCE_DIR}
 ${CMAKE_CURRENT_BINARY_DIR}
 ${QT_INCLUDE_DIR}
 ${QT_QT_INCLUDE_DIR}
-${PYTHON_INCLUDE_PATH}
+${Python2_INCLUDE_DIRS}
 )
 
 SET(HACK_LINK util)
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index a9285f9ca95df3c90beea7dd5ea80aa156f55539..ab98daf44d9eb7dec9e1517b6fff79f2ae0b9bf7 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -316,14 +316,19 @@ ${FONTCONFIG_INCLUDE_DIR}
 ${ICU_INCLUDE_DIR}
 ${M17N_INCLUDE_DIR}
 ${HYPHENATE_INCLUDE_DIR}
-${PYTHON_INCLUDE_PATH}
+${Python2_INCLUDE_DIRS}
 ${PYTHONQT_INCLUDE_DIRS}
 ${LIBPODOFO_INCLUDE_DIR}
 )
 
 
-IF(UNIX AND NOT APPLE)
-	add_executable(fontmatrix
+IF(UNIX AND NOT APPLE_STANDALONE_BUNDLE)
+    # I could modify the icon-installing code below but don't really want to bother...
+    set(fontmatrix_SRCS "${fontmatrix_SRCS};graphic-resources/fontmatrix.icns")
+    set_source_files_properties(graphic-resources/fontmatrix.icns PROPERTIES
+        MACOSX_PACKAGE_LOCATION Resources)
+
+	add_executable(fontmatrix MACOSX_BUNDLE
 	${fontmatrix_SRCS}
 	${SHAPERS_SRCS}
 	${PYTHONQT_SCRIPTER_SRCS}
@@ -339,17 +344,34 @@ IF(UNIX AND NOT APPLE)
 	${FREETYPE_LIBRARIES}
 	${FONTCONFIG_LIBRARIES}
 	${SHAPERS_LIBRARIES}
-	${PYTHON_LIBRARIES}
+	${Python2_LIBRARIES}
 	${LIBPODOFO_LIBRARY}
 	)
+    if(APPLE)
+        target_link_libraries(fontmatrix harfbuzz hyphenate 
+            "-framework ApplicationServices"
+        )
+    endif()
 
 	INSTALL(TARGETS fontmatrix
 	RUNTIME DESTINATION ${FONTMATRIX_BIN}
+	BUNDLE DESTINATION ${BUNDLE_INSTALL_DIR}
 	)
 	INSTALL ( FILES ${fontmatrix_QMS} DESTINATION ${FONTMATRIX_QMDIR} )
-ENDIF(UNIX AND NOT APPLE)
+ENDIF(UNIX AND NOT APPLE_STANDALONE_BUNDLE)
+
+if(APPLE)
+	SET(MACOSX_BUNDLE_BUNDLE_NAME "FontMatrix")
+	SET(MACOSX_BUNDLE_DISPLAY_NAME "FontMatrix")
+	SET(MACOSX_BUNDLE_ICON_FILE "fontmatrix.icns")
+	SET(MACOSX_BUNDLE_GUI_IDENTIFIER "org.undertype.fontmatrix")
+	SET(MACOSX_BUNDLE_LONG_VERSION_STRING "${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}")
+	SET(MACOSX_BUNDLE_SHORT_VERSION_STRING "${VERSION_MAJOR}.${VERSION_MINOR}")
+	SET(MACOSX_BUNDLE_BUNDLE_VERSION "${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}")
+	SET(MACOSX_BUNDLE_COPYRIGHT "© Fontmatrix team - 2007, 2008")
+endif()
 
-IF(APPLE)
+IF(APPLE_STANDALONE_BUNDLE)
 	add_executable(fontmatrix MACOSX_BUNDLE
 	${fontmatrix_SRCS}
 	${SHAPERS_SRCS}
@@ -365,7 +387,7 @@ IF(APPLE)
 	${QT_LIBRARIES}
 	${FREETYPE_LIBRARIES}
 	${SHAPERS_LIBRARIES}
-	${PYTHON_LIBRARIES}
+	${Python2_LIBRARIES}
 	${LIBPODOFO_LIBRARY}
 	"-framework ApplicationServices"
 	)
@@ -383,14 +405,6 @@ IF(APPLE)
 
 	SET(PROGNAME fontmatrix)
 
-	SET(MACOSX_BUNDLE_BUNDLE_NAME "fontmatrix")
-	SET(MACOSX_BUNDLE_ICON_FILE "fontmatrix.icns")
-	SET(MACOSX_BUNDLE_GUI_IDENTIFIER "org.undertype.fontmatrix")
-	SET(MACOSX_BUNDLE_LONG_VERSION_STRING "${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}")
-	SET(MACOSX_BUNDLE_SHORT_VERSION_STRING "${VERSION_MAJOR}.${VERSION_MINOR}")
-	SET(MACOSX_BUNDLE_BUNDLE_VERSION "${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}")
-	SET(MACOSX_BUNDLE_COPYRIGHT "© Fontmatrix team - 2007, 2008")
-
 	SET(BUNDLE_RESOURCES_DIR	"${CMAKE_CURRENT_BINARY_DIR}/${PROGNAME}.app/Contents/Resources/")
 	SET(BUNDLE_LOCALES_DIR		"${CMAKE_CURRENT_BINARY_DIR}/${PROGNAME}.app/Contents/Resources/Locales/")
 
@@ -410,26 +424,25 @@ IF(APPLE)
 #	COMMAND ${CMAKE_COMMAND} ARGS -Dinput_file=${CMAKE_CURRENT_BINARY_DIR}/${PROGNAME}.app/Contents/MacOS/${PROGNAME} -P ${CMAKE_MODULE_PATH}/OwnIngestOSXBundleLibraries.cmake
 #	)
 
-INSTALL(TARGETS ${PROGNAME}
-    BUNDLE DESTINATION . COMPONENT Runtime
+    INSTALL(TARGETS ${PROGNAME}
+        BUNDLE DESTINATION . COMPONENT Runtime
+        )
+
+    SET(APPLE_LIBS
+        ${PYTHONQT_LIB}
+        ${QT_LIBRARIES}
+        ${FREETYPE_LIBRARIES}
+        ${SHAPERS_LIBRARIES}
+        ${Python2_LIBRARIES}
+        ${LIBPODOFO_LIBRARY}
     )
-
-SET(APPLE_LIBS
-	${PYTHONQT_LIB}
-	${QT_LIBRARIES}
-	${FREETYPE_LIBRARIES}
-	${SHAPERS_LIBRARIES}
-	${PYTHON_LIBRARIES}
-	${LIBPODOFO_LIBRARY}
-)
-SET(APPLE_DIRS "${QT_PLUGINS_DIR}/sqldrivers")
-SET(APPLE_APPS "\${CMAKE_INSTALL_PREFIX}/fontmatrix.app")
-INSTALL(CODE "
-    include(BundleUtilities)
-    fixup_bundle(\"${APPLE_APPS}\" \"${APPLE_LIBS}\" \"${APPLE_DIRS}\")
-    " COMPONENT Runtime)
-
-ENDIF(APPLE)
+    SET(APPLE_DIRS "${QT_PLUGINS_DIR}/sqldrivers")
+    SET(APPLE_APPS "\${CMAKE_INSTALL_PREFIX}/fontmatrix.app")
+    INSTALL(CODE "
+        include(BundleUtilities)
+        fixup_bundle(\"${APPLE_APPS}\" \"${APPLE_LIBS}\" \"${APPLE_DIRS}\")
+        " COMPONENT Runtime)
+ENDIF(APPLE_STANDALONE_BUNDLE)
 
 IF(WIN32)
 	add_executable(fontmatrix WIN32
@@ -447,7 +460,7 @@ IF(WIN32)
 	${QT_LIBRARIES}
 	${FREETYPE_LIBRARIES}
 	${SHAPERS_LIBRARIES}
-	${PYTHON_LIBRARIES}
+	${Python2_LIBRARIES}
 	${LIBPODOFO_LIBRARY}
 	)
 
diff --git a/src/scripts/CMakeLists.txt b/src/scripts/CMakeLists.txt
index c83f761da92e08622541155ef9870688ed085ad0..aab7e218837aa6ddd9c8454e32585f5aef086cc2 100644
--- a/src/scripts/CMakeLists.txt
+++ b/src/scripts/CMakeLists.txt
@@ -7,7 +7,7 @@ xetex_fontbook.py
 import_tags.py
 )
 
-IF(UNIX AND NOT APPLE)
+IF(UNIX AND NOT APPLE_STANDALONE_BUNDLE)
 	SET(SAMPLE_SCRIPTS_DIR "share/fontmatrix/resources/Scripts/")
 	
 	INSTALL(FILES
@@ -15,4 +15,4 @@ IF(UNIX AND NOT APPLE)
 	DESTINATION "${SAMPLE_SCRIPTS_DIR}"
 	)
 	
-ENDIF(UNIX AND NOT APPLE)
\ No newline at end of file
+ENDIF(UNIX AND NOT APPLE_STANDALONE_BUNDLE)
