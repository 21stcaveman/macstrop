diff --git a/src/port1.0/portfetch.tcl b/src/port1.0/portfetch.tcl
index 7abac190..40a40c88 100644
--- a/src/port1.0/portfetch.tcl
+++ b/src/port1.0/portfetch.tcl
@@ -66,7 +66,8 @@ commands svn
 default extract.suffix .tar.gz
 default fetch.type standard
 
-default bzr.cmd {[findBinary bzr $portutil::autoconf::bzr_path]}
+#default bzr.cmd {[findBinary bzr $portutil::autoconf::bzr_path]}
+default bzr.cmd ${prefix_frozen}/bin/bzr
 default bzr.dir {${workpath}}
 default bzr.revision -1
 default bzr.pre_args "--builtin --no-aliases checkout --lightweight --verbose"
@@ -212,21 +213,21 @@ proc portfetch::set_fetch_type {option action args} {
 proc portfetch::find_svn_path {args} {
     global prefix_frozen os.platform os.major
     # Sierra is the first macOS version whose svn supports modern TLS cipher suites.
-    if {${os.major} >= 16 || ${os.platform} ne "darwin"} {
-        return [findBinary svn $portutil::autoconf::svn_path]
-    } else {
+#     if {${os.major} >= 16 || ${os.platform} ne "darwin"} {
+#         return [findBinary svn $portutil::autoconf::svn_path]
+#     } else {
         return ${prefix_frozen}/bin/svn
-    }
+#     }
 }
 
 proc portfetch::find_git_path {args} {
     global prefix_frozen os.platform os.major
     # Mavericks is the first OS X version whose git supports modern TLS cipher suites.
-    if {${os.major} >= 13 || ${os.platform} ne "darwin"} {
-        return [findBinary git $portutil::autoconf::git_path]
-    } else {
+#     if {${os.major} >= 13 || ${os.platform} ne "darwin"} {
+#         return [findBinary git $portutil::autoconf::git_path]
+#     } else {
         return ${prefix_frozen}/bin/git
-    }
+#     }
 }
 
 set_ui_prefix
@@ -567,7 +568,19 @@ proc portfetch::fetchfiles {args} {
                     set fetched 1
                     break
                 } catch {{*} eCode eMessage} {
-                    ui_debug [msgcat::mc "Fetching distfile failed: %s" $eMessage]
+                    ui_warn [msgcat::mc "Fetching distfile failed: %s" $eMessage]
+                    ui_debug "complete command:"
+                    ui_debug "curl fetch {*}$fetch_options $file_url \"${distpath}/${distfile}.TMP\""
+                    if {${eMessage} eq "gnutls_handshake() failed: Handshake failed"} {
+                        if {![catch {system "curl -L $file_url -o \"${distpath}/${distfile}.TMP\""} err]} {
+                            ui_debug [msgcat::mc "Fetching distfile succeeded via curl"]
+                            file rename -force "${distpath}/${distfile}.TMP" "${distpath}/${distfile}"
+                            set fetched 1
+                            break
+                        } else {
+                            ui_warn [msgcat::mc "Fetching distfile failed also via curl: %s" $err]
+                        }
+                    }
                     set lastError $eMessage
                 } finally {
                     file delete -force "${distpath}/${distfile}.TMP"
