diff --git a/src/macports1.0/macports.tcl b/src/macports1.0/macports.tcl
index 049b02433448653c37f21d19a8bed9e77000340f..88843aeccb8a0408e6397a0e4f8875067fc14b9d 100644
--- a/src/macports1.0/macports.tcl
+++ b/src/macports1.0/macports.tcl
@@ -1353,6 +1436,7 @@ proc macports::worker_init {workername portpath porturl portbuildpath options va
     $workername alias getportresourcepath macports::getportresourcepath
     $workername alias getportlogpath macports::getportlogpath
     $workername alias getdefaultportresourcepath macports::getdefaultportresourcepath
+    $workername alias getlocalporttreelist macports::getlocalporttreelist
     $workername alias getprotocol macports::getprotocol
     $workername alias getportdir macports::getportdir
     $workername alias findBinary macports::findBinary
@@ -1688,6 +1772,19 @@ proc macports::getdefaultportresourcepath {{path {}}} {
     return $proposedpath
 }
 
+##
+# @return the list of local port trees
+#
+proc macports::getlocalporttreelist {} {
+    global macports::sources
+    set sourcetreelist {}
+    foreach source $sources {
+        if {[macports::getprotocol $source] eq "file"} {
+            lappend sourcetreelist [string range [lindex ${source} 0] 7 end]
+        }
+    }
+    return ${sourcetreelist}
+}
 
 ##
 # Opens a MacPorts portfile specified by a URL. The URL can be local (starting
diff --git a/src/port1.0/portutil.tcl b/src/port1.0/portutil.tcl
index b5cf00bc1fad4ab5c7d76d976792432c777ff5f6..e84b80e93c35d15ebeabba776e5258870e97bcac 100644
--- a/src/port1.0/portutil.tcl
+++ b/src/port1.0/portutil.tcl
@@ -2522,7 +2566,20 @@ proc PortGroup {group version} {
         }
     }
 
-    set groupFile [getportresourcepath $porturl "port1.0/group/${group}-${version}.tcl"]
+    # check if the requested PortGroup exists in the current port's ports tree, but
+    # don't return a fallback variant.
+#     set groupFile [getportresourcepath $porturl "port1.0/group/${group}-${version}.tcl" no]
+#     if {![file exists ${groupFile}]} {
+        # no luck, scan the ports tree list in much the same way port lookup works:
+        # test each tree in the order they are listed in sources.conf, until a hit is found.
+        set sources [getlocalporttreelist]
+        foreach source ${sources} {
+            set groupFile [file join ${source} _resources port1.0/group/${group}-${version}.tcl]
+            if {[file exists ${groupFile}]} {
+                break
+            }
+        }
+#     }
 
     if {[file exists $groupFile]} {
         uplevel "source $groupFile"
