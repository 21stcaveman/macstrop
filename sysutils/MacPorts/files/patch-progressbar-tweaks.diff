diff --git a/src/port/port.tcl b/src/port/port.tcl
index f63e410f8f22672ed3f42a75d8f466c25405ea3d..2b1b79df2060b59ad8d02d51477742c1cdc07280
--- a/src/port/port.tcl
+++ b/src/port/port.tcl
@@ -5078,26 +5154,32 @@ namespace eval portclient::progress {
             }
             update {
                 # the for loop is a simple hack because Tcl 8.4 doesn't have
-                # lassign
-                foreach {now total} $args {
-                    if {[showProgress $now $total] eq "yes"} {
-                        set barPrefix "      "
-                        set barPrefixLen [string length $barPrefix]
-                        if {$total != 0} {
-                            progressbar $now $total [expr {min($maxWidth, $env(COLUMNS) - $barPrefixLen)}] $barPrefix
-                        } else {
-                            unprogressbar [expr {min($maxWidth, $env(COLUMNS) - $barPrefixLen)}] $barPrefix
+                # lassign.
+                # Check on each update if we're still outputting to a tty - the user can
+                # have pushed us into the background.
+                if {[isatty stdout]} {
+                    foreach {now total} $args {
+                        if {[showProgress $now $total] eq "yes"} {
+                            set barPrefix "      "
+                            set barPrefixLen [string length $barPrefix]
+                            if {$total != 0} {
+                                progressbar $now $total [expr {min($maxWidth, $env(COLUMNS) - $barPrefixLen)}] $barPrefix
+                            } else {
+                                unprogressbar [expr {min($maxWidth, $env(COLUMNS) - $barPrefixLen)}] $barPrefix
+                            }
                         }
                     }
                 }
             }
             intermission -
             finish {
-                # erase to start of line
-                ::term::ansi::send::esol
-                # return cursor to start of line
-                puts -nonewline "\r"
-                flush stdout
+                if {[isatty stdout]} {
+                    # erase to start of line
+                    ::term::ansi::send::esol
+                    # return cursor to start of line
+                    puts -nonewline "\r"
+                    flush stdout
+                }
             }
         }
 
@@ -5131,32 +5213,36 @@ namespace eval portclient::progress {
             update {
                 # the for loop is a simple hack because Tcl 8.4 doesn't have
                 # lassign
-                foreach {type total now speed} $args {
-                    if {[showProgress $now $total] eq "yes"} {
-                        set barPrefix "      "
-                        set barPrefixLen [string length $barPrefix]
-                        if {$total != 0} {
-                            set barSuffix [format "        speed: %-13s" "[bytesize $speed {} "%.1f"]/s"]
-                            set barSuffixLen [string length $barSuffix]
-
-                            set barLen [expr {min($maxWidth, $env(COLUMNS) - $barPrefixLen - $barSuffixLen)}]
-                            progressbar $now $total $barLen $barPrefix $barSuffix
-                        } else {
-                            set barSuffix [format " %-10s     speed: %-13s" [bytesize $now {} "%6.1f"] "[bytesize $speed {} "%.1f"]/s"]
-                            set barSuffixLen [string length $barSuffix]
-
-                            set barLen [expr {min($maxWidth, $env(COLUMNS) - $barPrefixLen - $barSuffixLen)}]
-                            unprogressbar $barLen $barPrefix $barSuffix
+                if {[isatty stdout]} {
+                    foreach {type total now speed} $args {
+                        if {[showProgress $now $total] eq "yes"} {
+                            set barPrefix "      "
+                            set barPrefixLen [string length $barPrefix]
+                            if {$total != 0} {
+                                set barSuffix [format "        speed: %-13s" "[bytesize $speed {} "%.1f"]/s"]
+                                set barSuffixLen [string length $barSuffix]
+
+                                set barLen [expr {min($maxWidth, $env(COLUMNS) - $barPrefixLen - $barSuffixLen)}]
+                                progressbar $now $total $barLen $barPrefix $barSuffix
+                            } else {
+                                set barSuffix [format " %-10s     speed: %-13s" [bytesize $now {} "%6.1f"] "[bytesize $speed {} "%.1f"]/s"]
+                                set barSuffixLen [string length $barSuffix]
+
+                                set barLen [expr {min($maxWidth, $env(COLUMNS) - $barPrefixLen - $barSuffixLen)}]
+                                unprogressbar $barLen $barPrefix $barSuffix
+                            }
                         }
                     }
                 }
             }
             finish {
-                # erase to start of line
-                ::term::ansi::send::esol
-                # return cursor to start of line
-                puts -nonewline "\r"
-                flush stdout
+                if {[isatty stdout]} {
+                    # erase to start of line
+                    ::term::ansi::send::esol
+                    # return cursor to start of line
+                    puts -nonewline "\r"
+                    flush stdout
+                }
             }
         }
 
@@ -5712,8 +5798,9 @@ if {[catch {parse_options "global" ui_options global_options} result]} {
     exit 1
 }
 
-if {[isatty stdout]
-    && $portclient::progress::hasTermAnsiSend eq "yes"
+# progress bar checking of isatty stdout is done continuously so we can
+# react to changes in this criterium
+if {$portclient::progress::hasTermAnsiSend eq "yes"
     && (![info exists ui_options(ports_quiet)] || $ui_options(ports_quiet) ne "yes")} {
     set ui_options(progress_download) portclient::progress::download
     set ui_options(progress_generic)  portclient::progress::generic
diff --git a/src/port1.0/portprogress.tcl b/src/port1.0/portprogress.tcl
index f0165e73b5f98155fda328b9fbc29c78927d52d8..a60034455d1e485c6aaf3931bbeea7209eefd5a1 100644
--- a/src/port1.0/portprogress.tcl
+++ b/src/port1.0/portprogress.tcl
@@ -106,7 +106,8 @@ proc portprogress::target_progress_callback {event} {
                 }
             }
 
-            if {${determinate_match} || ${indeterminate}} {
+            # only show progress when there is some to show.
+            if {${determinate_match} && !${indeterminate}} {
                 ui_progress_generic update ${cur} ${total}
             }
         }
