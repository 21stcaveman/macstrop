# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem          1.0

name                zfs
categories          sysutils filesystems

description         OpenZFS on OS X
long_description    OpenZFS on OS X (O3X) brings OpenZFS features to Apple's OS X.
homepage            http://openzfsonosx.org/
license             CDDL

maintainers         gmail.com:rjvbertin openmaintainer

platforms           darwin
installs_libs       yes

universal_variant   no

subport ${name}-devel {
    description     ${description} This port follows git/master.
    long_description \
                    ${long_description} This port follows git/master.
}

if {${subport} eq "${name}-devel"} {
    conflicts       ${name}
    version         1.5.0.150
    set spl_commit  a533077c85bad3ef7e02789eccc3126734c386d0
    set zfs_commit  6af8882ff117884eca9c82e808226ae89eca3ca7
    master_sites    https://github.com/openzfsonosx/spl/archive/${spl_commit}:distspl \
                    https://github.com/openzfsonosx/zfs/archive/${zfs_commit}:distzfs
    distfiles       spl-snapshot.tar.gz:distspl \
                    zfs-snapshot.tar.gz:distzfs
    checksums       spl-snapshot.tar.gz \
                    rmd160  bc1b7f43eeb1da853c12e0854333ffc03fba03d8 \
                    sha256  17151de159039f23674e3ba4af2fc7ece3fcc4e77dda4f2de0e738e1d19846f8 \
                    zfs-snapshot.tar.gz \
                    rmd160  81a93f1cb836a6700a0107fccc83f2d15ebf0a51 \
                    sha256  e321691b059e6432529756539771dc7c4fb860a4ee9ed39475ca0b3afe5c6396
} else {
    conflicts       ${name}-devel
    description     ${description} This port doesn't have a release version yet.
    long_description \
                    ${long_description} This port doesn't have a release version yet.
    version         0
    pre-fetch {
        ui_error "This port doesn't have a release version yet."
        return -code error "This port doesn't have a release version yet."
    }
    set spl_commit  0
    set zfs_commit  0
    master_sites    https://github.com/openzfsonosx/spl/archive/${spl_commit}:distspl \
                    https://github.com/openzfsonosx/zfs/archive/${zfs_commit}:distzfs
    distfiles       spl-snapshot.tar.gz:distspl \
                    zfs-snapshot.tar.gz:distzfs
    checksums       spl-snapshot.tar.gz \
                    rmd160  0 \
                    sha256  0 \
                    zfs-snapshot.tar.gz \
                    rmd160  0 \
                    sha256  0
}

post-extract {
    file delete -force zfs-${version}
}

use_configure       yes
patch.pre_args      -Np1

depends_lib-append  port:zlib

configure.dir       ${workpath}/zfs-${zfs_commit}
build.dir           ${configure.dir}
patch.dir           ${configure.dir}

patchfiles-append   patch-dont-invoke-launchctl.diff \
                    patch-kextloading.diff

post-patch {
    ui_info "--->  Preparing SPL"
    system -W ${workpath}/spl-${spl_commit} "./autogen.sh"
    ui_info "--->  Preparing ZFS"
    system -W ${workpath}/zfs-${zfs_commit} "./autogen.sh"
}

configure.ldflags-append \
                    ${configure.optflags}

configure.args-append \
                    --disable-dependency-tracking \
                    --with-kernel-modprefix=${prefix}/Library/Extensions

pre-configure {
    ui_info "--->  Configuring SPL"
    system -W ${workpath}/spl-${spl_commit} "${configure.cmd} ${configure.pre_args} ${configure.args}"

    ui_info "--->  Configuring ZFS"
    configure.args-append \
                    --with-spl=${workpath}/spl-${spl_commit}
}

build.args-append   V=1

pre-build {
    ui_info "--->  Building SPL"
    system -W ${workpath}/spl-${spl_commit} "${build.cmd} ${build.pre_args} ${build.args}"

    ui_info "--->  Building ZFS"
}

destroot.args-append \
                    V=1

pre-destroot {
    ui_info "--->  Staging SPL into destroot"
    system -W ${workpath}/spl-${spl_commit} "${destroot.cmd} ${destroot.pre_args} ${destroot.args} ${destroot.post_args}"

    ui_info "--->  Staging ZFS into destroot"
}

post-destroot {
    foreach d [glob -nocomplain ${destroot}/Library/*] {
        file rename ${d} ${destroot}${prefix}/Library/
    }
}