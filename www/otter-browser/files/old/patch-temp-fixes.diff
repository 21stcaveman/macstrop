commit cc55d00f9ed8898aa778ce7572e28a48b298554d
Author: Micha≈Ç Dutkiewicz <emdeck@gmail.com>
Date:   Sun Jun 7 22:04:51 2020 +0200

    Port to EnumeratorMapper

diff --git b/src/core/ActionsManager.cpp a/src/core/ActionsManager.cpp
index eb090f763..4b5ec74a0 100644
--- b/src/core/ActionsManager.cpp
+++ a/src/core/ActionsManager.cpp
@@ -26,6 +26,7 @@
 
 #include <QtCore/QJsonArray>
 #include <QtCore/QJsonObject>
+#include <QtCore/QMetaEnum>
 #include <QtCore/QTextStream>
 #include <QtGui/QKeySequence>
 
@@ -663,7 +664,16 @@ QString ActionsManager::createReport()
 
 QString ActionsManager::getActionName(int identifier)
 {
-	return EnumeratorMapper(staticMetaObject.enumerator(m_actionIdentifierEnumerator), QLatin1String("Action")).mapToName(identifier);
+	QString name(ActionsManager::staticMetaObject.enumerator(m_actionIdentifierEnumerator).valueToKey(identifier));
+
+	if (!name.isEmpty())
+	{
+		name.chop(6);
+
+		return name;
+	}
+
+	return {};
 }
 
 QKeySequence ActionsManager::getActionShortcut(int identifier, const QVariantMap &parameters)
@@ -760,7 +770,12 @@ ActionsManager::ActionDefinition ActionsManager::getActionDefinition(int identif
 
 int ActionsManager::getActionIdentifier(const QString &name)
 {
-	return EnumeratorMapper(staticMetaObject.enumerator(m_actionIdentifierEnumerator), QLatin1String("Action")).mapToValue(name, true);
+	if (!name.endsWith(QLatin1String("Action")))
+	{
+		return ActionsManager::staticMetaObject.enumerator(m_actionIdentifierEnumerator).keyToValue((name + QLatin1String("Action")).toLatin1());
+	}
+
+	return ActionsManager::staticMetaObject.enumerator(m_actionIdentifierEnumerator).keyToValue(name.toLatin1());
 }
 
 bool ActionsManager::isShortcutAllowed(const QKeySequence &shortcut, ShortcutCheck check, bool areSingleKeyShortcutsAllowed)
diff --git b/src/core/GesturesManager.cpp a/src/core/GesturesManager.cpp
index 15ab76d9e..f4a52f330 100644
--- b/src/core/GesturesManager.cpp
+++ a/src/core/GesturesManager.cpp
@@ -27,6 +27,7 @@
 
 #include <QtCore/QJsonArray>
 #include <QtCore/QJsonObject>
+#include <QtCore/QMetaEnum>
 #include <QtCore/QPointer>
 #include <QtCore/QRegularExpression>
 #include <QtCore/QTextStream>
@@ -790,7 +791,16 @@ QObject* GesturesManager::getTrackedObject()
 
 QString GesturesManager::getContextName(int identifier)
 {
-	return EnumeratorMapper(staticMetaObject.enumerator(m_gesturesContextEnumerator), QLatin1String("Context")).mapToName(identifier);
+	QString name(GesturesManager::staticMetaObject.enumerator(m_gesturesContextEnumerator).valueToKey(identifier));
+
+	if (!name.isEmpty())
+	{
+		name.chop(7);
+
+		return name;
+	}
+
+	return {};
 }
 
 MouseProfile::Gesture GesturesManager::matchGesture()
@@ -849,7 +859,12 @@ MouseProfile::Gesture GesturesManager::matchGesture()
 
 int GesturesManager::getContextIdentifier(const QString &name)
 {
-	return EnumeratorMapper(staticMetaObject.enumerator(m_gesturesContextEnumerator), QLatin1String("Context")).mapToValue(name, true);
+	if (!name.endsWith(QLatin1String("Context")))
+	{
+		return GesturesManager::staticMetaObject.enumerator(m_gesturesContextEnumerator).keyToValue((name + QLatin1String("Context")).toLatin1());
+	}
+
+	return GesturesManager::staticMetaObject.enumerator(m_gesturesContextEnumerator).keyToValue(name.toLatin1());
 }
 
 int GesturesManager::calculateLastMoveDistance(bool measureFinished)
diff --git b/src/core/NotificationsManager.cpp a/src/core/NotificationsManager.cpp
index 661e18318..c1f90a409 100644
--- b/src/core/NotificationsManager.cpp
+++ a/src/core/NotificationsManager.cpp
@@ -23,6 +23,7 @@
 #include "../ui/MainWindow.h"
 
 #include <QtCore/QFile>
+#include <QtCore/QMetaEnum>
 #include <QtCore/QSettings>
 #include <QtMultimedia/QSoundEffect>
 
@@ -162,7 +163,16 @@ QString NotificationsManager::getEventName(int identifier)
 		return m_identifiers[identifier];
 	}
 
-	return EnumeratorMapper(staticMetaObject.enumerator(m_eventIdentifierEnumerator), QLatin1String("Event")).mapToName(identifier);
+	QString name(NotificationsManager::staticMetaObject.enumerator(m_eventIdentifierEnumerator).valueToKey(identifier));
+
+	if (!name.isEmpty())
+	{
+		name.chop(5);
+
+		return name;
+	}
+
+	return {};
 }
 
 NotificationsManager::EventDefinition NotificationsManager::getEventDefinition(int identifier)
diff --git b/src/core/ThemesManager.cpp a/src/core/ThemesManager.cpp
index 77b11d453..d3e6bcdd1 100644
--- b/src/core/ThemesManager.cpp
+++ a/src/core/ThemesManager.cpp
@@ -1,6 +1,6 @@
 /**************************************************************************
 * Otter Browser: Web browser controlled by the user, not vice-versa.
-* Copyright (C) 2016 - 2020 Michal Dutkiewicz aka Emdek <michal@emdek.pl>
+* Copyright (C) 2016 - 2019 Michal Dutkiewicz aka Emdek <michal@emdek.pl>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
@@ -62,7 +62,6 @@ ColorScheme::ColorScheme(const QString &name, QObject *parent) : QObject(parent)
 
 	if (file.open(QIODevice::ReadOnly))
 	{
-		const EnumeratorMapper enumeratorMapper(staticMetaObject.enumerator(m_colorRoleEnumerator), QLatin1String("Role"));
 		const QJsonArray colorsArray(QJsonDocument::fromJson(file.readAll()).array());
 
 		for (int i = 0; i < colorsArray.count(); ++i)
@@ -73,7 +72,7 @@ ColorScheme::ColorScheme(const QString &name, QObject *parent) : QObject(parent)
 			colorRoleInformation.disabled = QColor(colorRoleObject.value(QLatin1String("disabled")).toString());
 			colorRoleInformation.inactive = QColor(colorRoleObject.value(QLatin1String("inactive")).toString());
 
-			m_colors[static_cast<ColorRole>(enumeratorMapper.mapToValue(colorRoleObject.value(QLatin1String("role")).toString()))] = colorRoleInformation;
+			m_colors[static_cast<ColorRole>(ColorScheme::staticMetaObject.enumerator(m_colorRoleEnumerator).keyToValue(colorRoleObject.value(QLatin1String("role")).toString().toLatin1()))] = colorRoleInformation;
 		}
 
 		file.close();
diff --git b/src/core/ThemesManager.h a/src/core/ThemesManager.h
index e7742192a..52a2ebb93 100644
--- b/src/core/ThemesManager.h
+++ a/src/core/ThemesManager.h
@@ -1,6 +1,6 @@
 /**************************************************************************
 * Otter Browser: Web browser controlled by the user, not vice-versa.
-* Copyright (C) 2016 - 2020 Michal Dutkiewicz aka Emdek <michal@emdek.pl>
+* Copyright (C) 2016 - 2019 Michal Dutkiewicz aka Emdek <michal@emdek.pl>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
diff --git b/src/core/ToolBarsManager.cpp a/src/core/ToolBarsManager.cpp
index 5025bc1a8..d0b464c59 100644
--- b/src/core/ToolBarsManager.cpp
+++ a/src/core/ToolBarsManager.cpp
@@ -1,6 +1,6 @@
 /**************************************************************************
 * Otter Browser: Web browser controlled by the user, not vice-versa.
-* Copyright (C) 2015 - 2020 Michal Dutkiewicz aka Emdek <michal@emdek.pl>
+* Copyright (C) 2015 - 2019 Michal Dutkiewicz aka Emdek <michal@emdek.pl>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
@@ -26,6 +26,7 @@
 #include <QtCore/QFile>
 #include <QtCore/QJsonArray>
 #include <QtCore/QJsonObject>
+#include <QtCore/QMetaEnum>
 #include <QtWidgets/QMessageBox>
 
 namespace Otter
@@ -498,7 +499,7 @@ QString ToolBarsManager::getToolBarName(int identifier)
 
 	if (identifier < OtherToolBar)
 	{
-		return EnumeratorMapper(staticMetaObject.enumerator(m_toolBarIdentifierEnumerator)).mapToName(identifier);
+		return ToolBarsManager::staticMetaObject.enumerator(m_toolBarIdentifierEnumerator).valueToKey(identifier);
 	}
 
 	return m_identifiers.value(identifier);
@@ -710,7 +711,7 @@ int ToolBarsManager::getToolBarIdentifier(const QString &name)
 		return identifier;
 	}
 
-	return EnumeratorMapper(staticMetaObject.enumerator(m_toolBarIdentifierEnumerator)).mapToValue(name);
+	return ToolBarsManager::staticMetaObject.enumerator(m_toolBarIdentifierEnumerator).keyToValue(name.toLatin1());
 }
 
 bool ToolBarsManager::areToolBarsLocked()
diff --git b/src/core/ToolBarsManager.h a/src/core/ToolBarsManager.h
index 97535912d..3acf5dce9 100644
--- b/src/core/ToolBarsManager.h
+++ a/src/core/ToolBarsManager.h
@@ -1,6 +1,6 @@
 /**************************************************************************
 * Otter Browser: Web browser controlled by the user, not vice-versa.
-* Copyright (C) 2015 - 2020 Michal Dutkiewicz aka Emdek <michal@emdek.pl>
+* Copyright (C) 2015 - 2019 Michal Dutkiewicz aka Emdek <michal@emdek.pl>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
