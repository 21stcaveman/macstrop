diff --git a/CMakeLists.txt b/CMakeLists.txt
index 79c5e1146..c7507de89 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -73,7 +73,7 @@ option(ENABLE_DBUS "Enable D-Bus based integration for notifications (only freed
 option(ENABLE_SPELLCHECK "Enable Hunspell based spell checking" ON)
 
 find_package(Qt5 5.6.0 REQUIRED COMPONENTS Core Gui Multimedia Network PrintSupport Qml Svg Widgets)
-find_package(Qt5WebEngineWidgets 5.12.0 QUIET)
+find_package(Qt5WebEngineWidgets 5.8.0 QUIET)
 find_package(Qt5WebKitWidgets 5.212.0 QUIET)
 find_package(Hunspell 1.5.0 QUIET)
 
diff --git a/src/modules/backends/web/qtwebengine/QtWebEngineResources.qrc b/src/modules/backends/web/qtwebengine/QtWebEngineResources.qrc
index cc31d302c85a413ba099cc39113703d5376cd216..301f1fd1f26c51c811ea0bb7e0c5d360ed61044b 100644
--- a/src/modules/backends/web/qtwebengine/QtWebEngineResources.qrc
+++ b/src/modules/backends/web/qtwebengine/QtWebEngineResources.qrc
@@ -8,5 +8,6 @@
         <file>resources/hideBlockedRequests.js</file>
         <file>resources/hitTest.js</file>
         <file>resources/imageViewer.js</file>
+        <file>resources/sendPost.js</file>
     </qresource>
 </RCC>
diff --git a/src/modules/backends/web/qtwebengine/QtWebEngineWebBackend.cpp b/src/modules/backends/web/qtwebengine/QtWebEngineWebBackend.cpp
index b1eb2857a..5f38682df 100644
--- a/src/modules/backends/web/qtwebengine/QtWebEngineWebBackend.cpp
+++ b/src/modules/backends/web/qtwebengine/QtWebEngineWebBackend.cpp
@@ -77,6 +77,7 @@ void QtWebEngineWebBackend::handleDownloadRequested(QWebEngineDownloadItem *item
 		return;
 	}
 
+#if QTWEBENGINECORE_VERSION >= 0x050C00
 	QtWebEnginePage *page(qobject_cast<QtWebEnginePage*>(item->page()));
 
 	if (page && page->getWebWidget())
@@ -85,6 +86,7 @@ void QtWebEngineWebBackend::handleDownloadRequested(QWebEngineDownloadItem *item
 
 		return;
 	}
+#endif
 
 	const HandlersManager::HandlerDefinition handler(HandlersManager::getHandler(transfer->getMimeType()));
 
@@ -158,7 +160,9 @@ void QtWebEngineWebBackend::handleOptionChanged(int identifier)
 
 			return;
 		case SettingsManager::Network_EnableDnsPrefetchOption:
+#if QTWEBENGINECORE_VERSION >= 0x050C00
 			QWebEngineSettings::globalSettings()->setAttribute(QWebEngineSettings::DnsPrefetchEnabled, SettingsManager::getOption(SettingsManager::Network_EnableDnsPrefetchOption).toBool());
+#endif
 
 			return;
 		case SettingsManager::Network_UserAgentOption:
@@ -243,7 +247,9 @@ WebWidget* QtWebEngineWebBackend::createWidget(const QVariantMap &parameters, Co
 		QWebEngineProfile::defaultProfile()->setRequestInterceptor(m_requestInterceptor);
 #endif
 
+#if QTWEBENGINECORE_VERSION >= 0x050C00
 		QWebEngineSettings::globalSettings()->setAttribute(QWebEngineSettings::DnsPrefetchEnabled, SettingsManager::getOption(SettingsManager::Network_EnableDnsPrefetchOption).toBool());
+#endif
 		QWebEngineSettings::globalSettings()->setAttribute(QWebEngineSettings::FullScreenSupportEnabled, true);
 		QWebEngineSettings::globalSettings()->setAttribute(QWebEngineSettings::FocusOnNavigationEnabled, false);
 		QWebEngineSettings::globalSettings()->setAttribute(QWebEngineSettings::XSSAuditingEnabled, true);
diff --git a/src/modules/backends/web/qtwebengine/QtWebEngineWebWidget.cpp b/src/modules/backends/web/qtwebengine/QtWebEngineWebWidget.cpp
index 086032a87..0397f497a 100644
--- a/src/modules/backends/web/qtwebengine/QtWebEngineWebWidget.cpp
+++ b/src/modules/backends/web/qtwebengine/QtWebEngineWebWidget.cpp
@@ -63,6 +63,9 @@
 #include <QtWebEngineWidgets/QWebEngineSettings>
 #include <QtWidgets/QAction>
 #include <QtWidgets/QVBoxLayout>
+#if QTWEBENGINECORE_VERSION < 0x050900
+#include <QtCore/QFile>
+#endif
 
 namespace Otter
 {
@@ -104,7 +107,9 @@ QtWebEngineWebWidget::QtWebEngineWebWidget(const QVariantMap &parameters, WebBac
 	connect(m_page, &QtWebEnginePage::requestedNewWindow, this, &QtWebEngineWebWidget::requestedNewWindow);
 	connect(m_page, &QtWebEnginePage::authenticationRequired, this, &QtWebEngineWebWidget::handleAuthenticationRequired);
 	connect(m_page, &QtWebEnginePage::proxyAuthenticationRequired, this, &QtWebEngineWebWidget::handleProxyAuthenticationRequired);
+#if QTWEBENGINECORE_VERSION >= 0x050C00
 	connect(m_page, &QtWebEnginePage::printRequested, this, &QtWebEngineWebWidget::handlePrintRequest);
+#endif
 	connect(m_page, &QtWebEnginePage::windowCloseRequested, this, &QtWebEngineWebWidget::handleWindowCloseRequest);
 	connect(m_page, &QtWebEnginePage::fullScreenRequested, this, &QtWebEngineWebWidget::handleFullScreenRequest);
 	connect(m_page, &QtWebEnginePage::featurePermissionRequested, [&](const QUrl &url, QWebEnginePage::Feature feature)
@@ -784,6 +789,7 @@ void QtWebEngineWebWidget::triggerAction(int identifier, const QVariantMap &para
 			break;
 		case ActionsManager::InspectPageAction:
 			{
+#if QTWEBENGINECORE_VERSION >= 0x050B00
 				const bool showInspector(parameters.value(QLatin1String("isChecked"), !getActionState(identifier, parameters).isChecked).toBool());
 
 				if (showInspector && !m_inspectorView)
@@ -793,6 +799,7 @@ void QtWebEngineWebWidget::triggerAction(int identifier, const QVariantMap &para
 
 				emit requestedInspectorVisibilityChange(showInspector);
 				emit arbitraryActionsStateChanged({ActionsManager::InspectPageAction});
+#endif
 			}
 
 			break;
@@ -903,10 +910,21 @@ void QtWebEngineWebWidget::search(const QString &query, const QString &searchEng
 
 		if (method == QNetworkAccessManager::PostOperation)
 		{
+#if QTWEBENGINECORE_VERSION < 0x050900
+			QFile file(QLatin1String(":/modules/backends/web/qtwebengine/resources/sendPost.js"));
+
+			if (file.open(QIODevice::ReadOnly))
+			{
+				m_page->runJavaScript(QString(file.readAll()).arg(request.url().toString()).arg(QString(body)));
+
+				file.close();
+			}
+#else
 			QWebEngineHttpRequest httpRequest(request.url(), QWebEngineHttpRequest::Post);
 			httpRequest.setPostData(body);
 
 			m_page->load(httpRequest);
+#endif
 		}
 		else
 		{
@@ -995,6 +1013,7 @@ void QtWebEngineWebWidget::handleViewSourceReplyFinished()
 
 void QtWebEngineWebWidget::handlePrintRequest()
 {
+#if QTWEBENGINECORE_VERSION >= 0x050C00
 	QPrintPreviewDialog printPreviewDialog(this);
 	printPreviewDialog.setWindowFlags(printPreviewDialog.windowFlags() | Qt::WindowMaximizeButtonHint | Qt::WindowMinimizeButtonHint);
 	printPreviewDialog.setWindowTitle(tr("Print Preview"));
@@ -1017,6 +1036,7 @@ void QtWebEngineWebWidget::handlePrintRequest()
 	});
 
 	printPreviewDialog.exec();
+#endif
 }
 
 void QtWebEngineWebWidget::handleAuthenticationRequired(const QUrl &url, QAuthenticator *authenticator)
@@ -1204,12 +1224,16 @@ void QtWebEngineWebWidget::updateOptions(const QUrl &url)
 	QWebEngineSettings *settings(m_page->settings());
 	settings->setAttribute(QWebEngineSettings::AllowRunningInsecureContent, getOption(SettingsManager::Security_AllowMixedContentOption, url).toBool());
 	settings->setAttribute(QWebEngineSettings::AutoLoadImages, (getOption(SettingsManager::Permissions_EnableImagesOption, url).toString() != QLatin1String("onlyCached")));
+#if QTWEBENGINECORE_VERSION >= 0x050C00
 	settings->setAttribute(QWebEngineSettings::DnsPrefetchEnabled, getOption(SettingsManager::Network_EnableDnsPrefetchOption, url).toBool());
+#endif
 	settings->setAttribute(QWebEngineSettings::JavascriptEnabled, getOption(SettingsManager::Permissions_EnableJavaScriptOption, url).toBool());
 	settings->setAttribute(QWebEngineSettings::JavascriptCanAccessClipboard, getOption(SettingsManager::Permissions_ScriptsCanAccessClipboardOption, url).toBool());
 	settings->setAttribute(QWebEngineSettings::JavascriptCanOpenWindows, (getOption(SettingsManager::Permissions_ScriptsCanOpenWindowsOption, url).toString() != QLatin1String("blockAll")));
 	settings->setAttribute(QWebEngineSettings::LocalStorageEnabled, getOption(SettingsManager::Permissions_EnableLocalStorageOption, url).toBool());
+#if QT_VERSION >= 0x050A00
 	settings->setAttribute(QWebEngineSettings::ShowScrollBars, getOption(SettingsManager::Interface_ShowScrollBarsOption, url).toBool());
+#endif
 	settings->setAttribute(QWebEngineSettings::WebGLEnabled, getOption(SettingsManager::Permissions_EnableWebglOption, url).toBool());
 	settings->setDefaultTextEncoding((encoding == QLatin1String("auto")) ? QString() : encoding);
 
@@ -1473,6 +1497,7 @@ WebWidget* QtWebEngineWebWidget::clone(bool cloneHistory, bool isPrivate, const
 
 QWidget* QtWebEngineWebWidget::getInspector()
 {
+#if QTWEBENGINECORE_VERSION >= 0x050B00
 	if (!m_inspectorView)
 	{
 		m_inspectorView = new QWebEngineView(this);
@@ -1483,7 +1508,7 @@ QWidget* QtWebEngineWebWidget::getInspector()
 			m_inspectorView->page()->setInspectedPage(m_page);
 		});
 	}
-
+#endif
 	return m_inspectorView;
 }
 
diff --git a/src/modules/backends/web/qtwebengine/resources/sendPost.js b/src/modules/backends/web/qtwebengine/resources/sendPost.js
new file mode 100644
index 0000000000000000000000000000000000000000..c3683521d51bba02b5447c281a24b0b754bd10a1
--- /dev/null
+++ b/src/modules/backends/web/qtwebengine/resources/sendPost.js
@@ -0,0 +1,18 @@
+var form = document.createElement('form');
+form.setAttribute('method', 'post');
+form.setAttribute('action', '%1');
+
+var parameters = '%2'.split('&');
+
+for (var i = 0; i < parameters.length; ++i)
+{
+	var parameter = parameters[i].split('=');
+	var input = document.createElement('input');
+	input.setAttribute('type', 'hidden');
+	input.setAttribute('name', parameter[0]);
+	input.setAttribute('value', decodeURIComponent(parameter[1]));
+
+	form.appendChild(input);
+}
+
+form.submit();
