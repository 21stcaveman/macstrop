diff --git a/src/modules/backends/web/qtwebengine/QtWebEngineWebWidget.cpp b/src/modules/backends/web/qtwebengine/QtWebEngineWebWidget.cpp
index e983f03..65ed62c 100644
--- a/src/modules/backends/web/qtwebengine/QtWebEngineWebWidget.cpp
+++ b/src/modules/backends/web/qtwebengine/QtWebEngineWebWidget.cpp
@@ -19,11 +19,12 @@
 
 #include "QtWebEngineWebWidget.h"
 #include "QtWebEnginePage.h"
+#include <QtWebEngineCore/QtWebEngineCoreVersion>
 #include "../../../../core/Application.h"
 #include "../../../../core/BookmarksManager.h"
 #include "../../../../core/Console.h"
 #include "../../../../core/GesturesManager.h"
-#if QT_VERSION < 0x050700
+#if QTWEBENGINECORE_VERSION < 0x050700
 #include "../../../../core/Job.h"
 #endif
 #include "../../../../core/NetworkManager.h"
@@ -65,7 +66,7 @@ namespace Otter
 QtWebEngineWebWidget::QtWebEngineWebWidget(const QVariantMap &parameters, WebBackend *backend, ContentsWidget *parent) : WebWidget(parameters, backend, parent),
 	m_webView(nullptr),
 	m_page(new QtWebEnginePage(SessionsManager::calculateOpenHints(parameters).testFlag(SessionsManager::PrivateOpen), this)),
-#if QT_VERSION < 0x050700
+#if QTWEBENGINECORE_VERSION < 0x050700
 	m_iconFetchJob(nullptr),
 #endif
 	m_loadingTime(nullptr),
@@ -73,7 +74,7 @@ QtWebEngineWebWidget::QtWebEngineWebWidget(const QVariantMap &parameters, WebBac
 	m_canGoForwardValue(UnknownValue),
 	m_documentLoadingProgress(0),
 	m_focusProxyTimer(0),
-#if QT_VERSION < 0x050700
+#if QTWEBENGINECORE_VERSION < 0x050700
 	m_scrollTimer(startTimer(1000)),
 #endif
 	m_updateNavigationActionsTimer(0),
@@ -87,7 +88,7 @@ QtWebEngineWebWidget::QtWebEngineWebWidget(const QVariantMap &parameters, WebBac
 	connect(m_page, &QtWebEnginePage::loadStarted, this, &QtWebEngineWebWidget::pageLoadStarted);
 	connect(m_page, &QtWebEnginePage::loadFinished, this, &QtWebEngineWebWidget::pageLoadFinished);
 	connect(m_page, &QtWebEnginePage::linkHovered, this, &QtWebEngineWebWidget::setStatusMessageOverride);
-#if QT_VERSION < 0x050700
+#if QTWEBENGINECORE_VERSION < 0x050700
 	connect(m_page, &QtWebEnginePage::iconUrlChanged, this, &QtWebEngineWebWidget::handleIconChange);
 #else
 	connect(m_page, &QtWebEnginePage::iconChanged, this, &QtWebEngineWebWidget::iconChanged);
@@ -101,13 +102,13 @@ QtWebEngineWebWidget::QtWebEngineWebWidget(const QVariantMap &parameters, WebBac
 	connect(m_page, &QtWebEnginePage::fullScreenRequested, this, &QtWebEngineWebWidget::handleFullScreenRequest);
 	connect(m_page, &QtWebEnginePage::featurePermissionRequested, this, &QtWebEngineWebWidget::handlePermissionRequest);
 	connect(m_page, &QtWebEnginePage::featurePermissionRequestCanceled, this, &QtWebEngineWebWidget::handlePermissionCancel);
-#if QT_VERSION >= 0x050700
+#if QTWEBENGINECORE_VERSION >= 0x050700
 	connect(m_page, &QtWebEnginePage::recentlyAudibleChanged, this, &QtWebEngineWebWidget::isAudibleChanged);
 #endif
 	connect(m_page, &QtWebEnginePage::viewingMediaChanged, this, &QtWebEngineWebWidget::notifyNavigationActionsChanged);
 	connect(m_page, &QtWebEnginePage::titleChanged, this, &QtWebEngineWebWidget::notifyTitleChanged);
 	connect(m_page, &QtWebEnginePage::urlChanged, this, &QtWebEngineWebWidget::notifyUrlChanged);
-#if QT_VERSION < 0x050700
+#if QTWEBENGINECORE_VERSION < 0x050700
 	connect(m_page, &QtWebEnginePage::iconUrlChanged, this, &QtWebEngineWebWidget::notifyIconChanged);
 #endif
 	connect(m_page->action(QWebEnginePage::Redo), &QAction::changed, this, &QtWebEngineWebWidget::notifyRedoActionStateChanged);
@@ -124,7 +125,7 @@ void QtWebEngineWebWidget::timerEvent(QTimerEvent *event)
 			focusWidget()->installEventFilter(this);
 		}
 	}
-#if QT_VERSION < 0x050700
+#if QTWEBENGINECORE_VERSION < 0x050700
 	else if (event->timerId() == m_scrollTimer)
 	{
 		m_page->runJavaScript(QLatin1String("[window.scrollX, window.scrollY]"), [&](const QVariant &result)
@@ -212,7 +213,7 @@ void QtWebEngineWebWidget::search(const QString &query, const QString &searchEng
 
 		if (method == QNetworkAccessManager::PostOperation)
 		{
-#if QT_VERSION < 0x050900
+#if QTWEBENGINECORE_VERSION < 0x050900
 			QFile file(QLatin1String(":/modules/backends/web/qtwebengine/resources/sendPost.js"));
 
 			if (file.open(QIODevice::ReadOnly))
@@ -237,7 +238,7 @@ void QtWebEngineWebWidget::search(const QString &query, const QString &searchEng
 
 void QtWebEngineWebWidget::print(QPrinter *printer)
 {
-#if QT_VERSION < 0x050800
+#if QTWEBENGINECORE_VERSION < 0x050800
 	ensureInitialized();
 
 	m_webView->render(printer);
@@ -330,7 +331,7 @@ void QtWebEngineWebWidget::triggerAction(int identifier, const QVariantMap &para
 	switch (identifier)
 	{
 		case ActionsManager::SaveAction:
-#if QT_VERSION >= 0x050700
+#if QTWEBENGINECORE_VERSION >= 0x050700
 			m_page->triggerAction(QWebEnginePage::SavePage);
 #else
 
@@ -356,7 +357,7 @@ void QtWebEngineWebWidget::triggerAction(int identifier, const QVariantMap &para
 			notifyNavigationActionsChanged();
 
 			break;
-#if QT_VERSION >= 0x050700
+#if QTWEBENGINECORE_VERSION >= 0x050700
 		case ActionsManager::MuteTabMediaAction:
 			m_page->setAudioMuted(!m_page->isAudioMuted());
 
@@ -800,7 +801,7 @@ void QtWebEngineWebWidget::triggerAction(int identifier, const QVariantMap &para
 
 			break;
 		case ActionsManager::UnselectAction:
-#if QT_VERSION >= 0x050700
+#if QTWEBENGINECORE_VERSION >= 0x050700
 			m_page->triggerAction(QWebEnginePage::Unselect);
 #else
 			m_page->runJavaScript(QLatin1String("window.getSelection().empty()"));
@@ -977,7 +978,7 @@ void QtWebEngineWebWidget::handleViewSourceReplyFinished()
 	}
 }
 
-#if QT_VERSION < 0x050700
+#if QTWEBENGINECORE_VERSION < 0x050700
 void QtWebEngineWebWidget::handleIconChange(const QUrl &url)
 {
 	if (m_iconFetchJob && m_iconFetchJob->getUrl() != url)
@@ -1091,7 +1092,7 @@ void QtWebEngineWebWidget::notifyUrlChanged(const QUrl &url)
 	notifyNavigationActionsChanged();
 	updateOptions(url);
 
-#if QT_VERSION < 0x050700
+#if QTWEBENGINECORE_VERSION < 0x050700
 	m_icon = {};
 #endif
 
@@ -1194,7 +1195,7 @@ void QtWebEngineWebWidget::updateOptions(const QUrl &url)
 {
 	const QString encoding(getOption(SettingsManager::Content_DefaultCharacterEncodingOption, url).toString());
 	QWebEngineSettings *settings(m_page->settings());
-#if QT_VERSION >= 0x050800
+#if QTWEBENGINECORE_VERSION >= 0x050800
 	settings->setAttribute(QWebEngineSettings::AllowRunningInsecureContent, getOption(SettingsManager::Security_AllowMixedContentOption, url).toBool());
 #endif
 	settings->setAttribute(QWebEngineSettings::AutoLoadImages, (getOption(SettingsManager::Permissions_EnableImagesOption, url).toString() != QLatin1String("onlyCached")));
@@ -1202,10 +1203,10 @@ void QtWebEngineWebWidget::updateOptions(const QUrl &url)
 	settings->setAttribute(QWebEngineSettings::JavascriptCanAccessClipboard, getOption(SettingsManager::Permissions_ScriptsCanAccessClipboardOption, url).toBool());
 	settings->setAttribute(QWebEngineSettings::JavascriptCanOpenWindows, (getOption(SettingsManager::Permissions_ScriptsCanOpenWindowsOption, url).toString() != QLatin1String("blockAll")));
 	settings->setAttribute(QWebEngineSettings::LocalStorageEnabled, getOption(SettingsManager::Permissions_EnableLocalStorageOption, url).toBool());
-#if QT_VERSION >= 0x050A00
+#if QTWEBENGINECORE_VERSION >= 0x050A00
 	settings->setAttribute(QWebEngineSettings::ShowScrollBars, getOption(SettingsManager::Interface_ShowScrollBarsOption, url).toBool());
 #endif
-#if QT_VERSION >= 0x050700
+#if QTWEBENGINECORE_VERSION >= 0x050700
 	settings->setAttribute(QWebEngineSettings::WebGLEnabled, getOption(SettingsManager::Permissions_EnableWebglOption, url).toBool());
 #endif
 	settings->setDefaultTextEncoding((encoding == QLatin1String("auto")) ? QString() : encoding);
@@ -1222,7 +1223,7 @@ void QtWebEngineWebWidget::updateOptions(const QUrl &url)
 
 void QtWebEngineWebWidget::setScrollPosition(const QPoint &position)
 {
-#if QT_VERSION < 0x050700
+#if QTWEBENGINECORE_VERSION < 0x050700
 	m_page->runJavaScript(QStringLiteral("window.scrollTo(%1, %2); [window.scrollX, window.scrollY];").arg(position.x()).arg(position.y()), [&](const QVariant &result)
 	{
 		if (result.isValid())
@@ -1247,7 +1248,7 @@ void QtWebEngineWebWidget::setHistory(const WindowHistoryInformation &history)
 
 		for (int i = 0; i < scripts.count(); ++i)
 		{
-#if QT_VERSION >= 0x050700
+#if QTWEBENGINECORE_VERSION >= 0x050700
 			m_page->runJavaScript(scripts.at(i)->getSource(), QWebEngineScript::UserWorld);
 #else
 			m_page->runJavaScript(scripts.at(i)->getSource());
@@ -1523,7 +1524,7 @@ QIcon QtWebEngineWebWidget::getIcon() const
 		return ThemesManager::createIcon(QLatin1String("tab-private"));
 	}
 
-#if QT_VERSION < 0x050700
+#if QTWEBENGINECORE_VERSION < 0x050700
 	return (m_icon.isNull() ? ThemesManager::createIcon(QLatin1String("tab")) : m_icon);
 #else
 	const QIcon icon(m_page->icon());
@@ -1539,7 +1540,7 @@ QDateTime QtWebEngineWebWidget::getLastUrlClickTime() const
 
 QPoint QtWebEngineWebWidget::getScrollPosition() const
 {
-#if QT_VERSION < 0x050700
+#if QTWEBENGINECORE_VERSION < 0x050700
 	return m_scrollPosition;
 #else
 	return m_page->scrollPosition().toPoint();
@@ -1702,7 +1703,7 @@ bool QtWebEngineWebWidget::hasSelection() const
 	return (m_page->hasSelection() && !m_page->selectedText().isEmpty());
 }
 
-#if QT_VERSION >= 0x050700
+#if QTWEBENGINECORE_VERSION >= 0x050700
 bool QtWebEngineWebWidget::isAudible() const
 {
 	return m_page->recentlyAudible();
