--- src/egl/drivers/dri2/orig.egl_dri2.c	2017-05-26 19:55:08.000000000 +0200
+++ src/egl/drivers/dri2/egl_dri2.c	2017-05-26 19:55:25.000000000 +0200
@@ -58,6 +58,12 @@
 #include "egl_dri2.h"
 #include "util/u_atomic.h"
 
+#ifdef __MACH__
+#include <mach/mach.h>
+#include <mach/mach_time.h>
+#include <sys/sysctl.h>
+#endif
+
 /* The kernel header drm_fourcc.h defines the DRM formats below.  We duplicate
  * some of the definitions here so that building Mesa won't bleeding-edge
  * kernel headers.
@@ -2475,8 +2481,10 @@
          return NULL;
       }
 
+#ifndef __MACH__
       /* change clock attribute to CLOCK_MONOTONIC */
       ret = pthread_condattr_setclock(&attr, CLOCK_MONOTONIC);
+#endif
 
       if (ret) {
          _eglError(EGL_BAD_ACCESS, "eglCreateSyncKHR");
@@ -2594,7 +2602,19 @@
       } else {
          /* if reusable sync has not been yet signaled */
          if (dri2_sync->base.SyncStatus != EGL_SIGNALED_KHR) {
+#ifndef __MACH__
             clock_gettime(CLOCK_MONOTONIC, &current);
+#else
+		  static int calibrated = 0;
+		  static mach_timebase_info_data_t sTimebaseInfo;
+		  if (!calibrated) {
+			  mach_timebase_info(&sTimebaseInfo);
+			  calibrated = 1;
+		  }
+		  unsigned long long now = mach_absolute_time() * sTimebaseInfo.numer / sTimebaseInfo.denom;
+		  current.tv_sec = now / 1000000000;
+		  current.tv_nsec = now % 1000000000;
+#endif
 
             /* calculating when to expire */
             expire.nsec = timeout % 1000000000L;
