diff --git a/hw/xquartz/pbproxy/main.m b/hw/xquartz/pbproxy/main.m
index 2d2f7610842a0b40e125f304eff983b64a722ad3..2e3c66183d27e6ec2b670bedd1d7d4fbb4cfac85 100644
--- a/hw/xquartz/pbproxy/main.m
+++ b/hw/xquartz/pbproxy/main.m
@@ -42,9 +42,9 @@ BOOL xpbproxy_have_xfixes;
 
 extern char *display;
 
-#ifdef STANDALONE_XPBPROXY
+// #ifdef STANDALONE_XPBPROXY
 BOOL xpbproxy_is_standalone = NO;
-#endif
+// #endif
 
 x_selection *_selection_object;
 
@@ -59,10 +59,10 @@ x_io_error_handler(Display *dpy)
      *   NO - this would be to a "deeper" problem, and restarts would just
      *        make things worse...
      */
-#ifdef STANDALONE_XPBPROXY
+// #ifdef STANDALONE_XPBPROXY
     if (xpbproxy_is_standalone)
         exit(EXIT_FAILURE);
-#endif
+// #endif
 
     /* Prevent _XIOError from calling exit() */
     pthread_exit(NULL);
diff --git a/hw/xquartz/pbproxy/pbproxy.h b/hw/xquartz/pbproxy/pbproxy.h
index c5a07f2d00943c8af211a0f9efdeac7c0a7cdb53..34c02a3b7b234dc435b7a360c464c0c41ddd56cf 100644
--- a/hw/xquartz/pbproxy/pbproxy.h
+++ b/hw/xquartz/pbproxy/pbproxy.h
@@ -52,7 +52,7 @@ typedef unsigned int NSUInteger;
 #include <X11/extensions/shape.h>
 #undef   Cursor
 
-#ifdef STANDALONE_XPBPROXY
+// #ifdef STANDALONE_XPBPROXY
 /* Just used for the standalone to respond to SIGHUP to reload prefs */
 extern BOOL xpbproxy_prefs_reload;
 
@@ -63,7 +63,7 @@ extern BOOL xpbproxy_prefs_reload;
  * the standalone app.
  */
 extern BOOL xpbproxy_is_standalone;
-#endif
+// #endif
 
 /* from main.m */
 extern void
diff --git a/hw/xquartz/pbproxy/x-input.m b/hw/xquartz/pbproxy/x-input.m
index 71b46a8b32051baacab43773a97fa804ae363a10..ffa0b2d15c770553b25cdc42acada2ab0f7a8998 100644
--- a/hw/xquartz/pbproxy/x-input.m
+++ b/hw/xquartz/pbproxy/x-input.m
@@ -42,9 +42,9 @@
 
 static CFRunLoopSourceRef xpbproxy_dpy_source;
 
-#ifdef STANDALONE_XPBPROXY
+// #ifdef STANDALONE_XPBPROXY
 BOOL xpbproxy_prefs_reload = NO;
-#endif
+// #endif
 
 /* Timestamp when the X server last told us it's active */
 static Time last_activation_time;
@@ -170,12 +170,12 @@ x_input_callback(CFSocketRef sock, CFSocketCallBackType type,
                  CFDataRef address, const void *data, void *info)
 {
 
-#ifdef STANDALONE_XPBPROXY
+// #ifdef STANDALONE_XPBPROXY
     if (xpbproxy_prefs_reload) {
         [xpbproxy_selection_object ()reload_preferences];
         xpbproxy_prefs_reload = NO;
     }
-#endif
+// #endif
 
     xpbproxy_process_xevents();
 }
